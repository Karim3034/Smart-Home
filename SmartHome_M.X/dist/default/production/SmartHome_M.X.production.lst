

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Sep 21 10:52:12 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   133   000000                     
   134                           ; Generated 21/07/2023 GMT
   135                           ; 
   136                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F46K20 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168   000000                     
   169 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   170   000000                     
   171 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   172   000000                     
   173 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   174   000000                     
   175                           	psect	idataCOMRAM
   176   003DE4                     __pidataCOMRAM:
   177                           	callstack 0
   178                           
   179                           ;initializer for _lcd_obj
   180   003DE4  08                 	db	8
   181   003DE5  00                 	db	0
   182   003DE6  10                 	db	16
   183   003DE7  18                 	db	24
   184   003DE8  20                 	db	32
   185   003DE9  28                 	db	40
   186                           
   187                           	psect	idataBANK0
   188   003CAC                     __pidataBANK0:
   189                           	callstack 0
   190                           
   191                           ;initializer for _lat_registers
   192   003CAC  89                 	db	137
   193   003CAD  0F                 	db	15
   194   003CAE  8A                 	db	138
   195   003CAF  0F                 	db	15
   196   003CB0  8B                 	db	139
   197   003CB1  0F                 	db	15
   198   003CB2  8C                 	db	140
   199   003CB3  0F                 	db	15
   200   003CB4  8D                 	db	141
   201   003CB5  0F                 	db	15
   202                           
   203                           ;initializer for _tris_registers
   204   003CB6  92                 	db	146
   205   003CB7  0F                 	db	15
   206   003CB8  93                 	db	147
   207   003CB9  0F                 	db	15
   208   003CBA  94                 	db	148
   209   003CBB  0F                 	db	15
   210   003CBC  95                 	db	149
   211   003CBD  0F                 	db	15
   212   003CBE  96                 	db	150
   213   003CBF  0F                 	db	15
   214                           
   215                           	psect	idataBANK1
   216   003D58                     __pidataBANK1:
   217                           	callstack 0
   218                           
   219                           ;initializer for _port_registers
   220   003D58  80                 	db	128
   221   003D59  0F                 	db	15
   222   003D5A  81                 	db	129
   223   003D5B  0F                 	db	15
   224   003D5C  82                 	db	130
   225   003D5D  0F                 	db	15
   226   003D5E  83                 	db	131
   227   003D5F  0F                 	db	15
   228   003D60  84                 	db	132
   229   003D61  0F                 	db	15
   230                           
   231                           	psect	smallconst
   232   001000                     __psmallconst:
   233                           	callstack 0
   234   001000  00                 	db	0
   235   001001                     _i2c_fsmStateTable:
   236                           	callstack 0
   237   001001  4C                 	db	low _I2C_DO_IDLE
   238   001002  3D                 	db	high _I2C_DO_IDLE
   239   001003  FA                 	db	low _I2C_DO_SEND_ADR_READ
   240   001004  3C                 	db	high _I2C_DO_SEND_ADR_READ
   241   001005  26                 	db	low _I2C_DO_SEND_ADR_WRITE
   242   001006  3D                 	db	high _I2C_DO_SEND_ADR_WRITE
   243   001007  14                 	db	low _I2C_DO_TX
   244   001008  2D                 	db	high _I2C_DO_TX
   245   001009  D8                 	db	low _I2C_DO_RX
   246   00100A  2D                 	db	high _I2C_DO_RX
   247   00100B  40                 	db	low _I2C_DO_RCEN
   248   00100C  3D                 	db	high _I2C_DO_RCEN
   249   00100D  F0                 	db	low _I2C_DO_TX_EMPTY
   250   00100E  32                 	db	high _I2C_DO_TX_EMPTY
   251   00100F  D4                 	db	low _I2C_DO_SEND_RESTART_READ
   252   001010  3D                 	db	high _I2C_DO_SEND_RESTART_READ
   253   001011  CC                 	db	low _I2C_DO_SEND_RESTART_WRITE
   254   001012  3D                 	db	high _I2C_DO_SEND_RESTART_WRITE
   255   001013  C4                 	db	low _I2C_DO_SEND_RESTART
   256   001014  3D                 	db	high _I2C_DO_SEND_RESTART
   257   001015  BC                 	db	low _I2C_DO_SEND_STOP
   258   001016  3D                 	db	high _I2C_DO_SEND_STOP
   259   001017  B4                 	db	low _I2C_DO_RX_ACK
   260   001018  3D                 	db	high _I2C_DO_RX_ACK
   261   001019  AC                 	db	low _I2C_DO_RX_NACK_STOP
   262   00101A  3D                 	db	high _I2C_DO_RX_NACK_STOP
   263   00101B  A4                 	db	low _I2C_DO_RX_NACK_RESTART
   264   00101C  3D                 	db	high _I2C_DO_RX_NACK_RESTART
   265   00101D  34                 	db	low _I2C_DO_RESET
   266   00101E  3D                 	db	high _I2C_DO_RESET
   267   00101F  7A                 	db	low _I2C_DO_ADDRESS_NACK
   268   001020  36                 	db	high _I2C_DO_ADDRESS_NACK
   269   001021                     __end_of_i2c_fsmStateTable:
   270                           	callstack 0
   271   000000                     _EEDATA	set	4008
   272   000000                     _EEADR	set	4009
   273   000000                     _EEADRH	set	4010
   274   000000                     _EECON2	set	4007
   275   000000                     _PIR2bits	set	4001
   276   000000                     _PIE2bits	set	4000
   277   000000                     _IPR1bits	set	3999
   278   000000                     _IPR2bits	set	4002
   279   000000                     _TXREG	set	4013
   280   000000                     _RCREG	set	4014
   281   000000                     _SPBRG	set	4015
   282   000000                     _TXSTA	set	4012
   283   000000                     _TRISD	set	3989
   284   000000                     _TRISC	set	3988
   285   000000                     _TRISB	set	3987
   286   000000                     _LATC	set	3979
   287   000000                     _LATB	set	3978
   288   001021                     STR_1:
   289   001021  4B                 	db	75	;'K'
   290   001022  61                 	db	97	;'a'
   291   001023  72                 	db	114	;'r'
   292   001024  69                 	db	105	;'i'
   293   001025  6D                 	db	109	;'m'
   294   001026  20                 	db	32
   295   001027  52                 	db	82	;'R'
   296   001028  61                 	db	97	;'a'
   297   001029  6D                 	db	109	;'m'
   298   00102A  61                 	db	97	;'a'
   299   00102B  64                 	db	100	;'d'
   300   00102C  61                 	db	97	;'a'
   301   00102D  6E                 	db	110	;'n'
   302   00102E  20                 	db	32
   303   00102F  2D                 	db	45
   304   001030  3E                 	db	62	;'>'
   305   001031  20                 	db	32
   306   001032  53                 	db	83	;'S'
   307   001033  6D                 	db	109	;'m'
   308   001034  61                 	db	97	;'a'
   309   001035  72                 	db	114	;'r'
   310   001036  74                 	db	116	;'t'
   311   001037  20                 	db	32
   312   001038  48                 	db	72	;'H'
   313   001039  6F                 	db	111	;'o'
   314   00103A  6D                 	db	109	;'m'
   315   00103B  65                 	db	101	;'e'
   316   00103C  0D                 	db	13
   317   00103D  00                 	db	0
   318   00103E                     STR_2:
   319   00103E  54                 	db	84	;'T'
   320   00103F  65                 	db	101	;'e'
   321   001040  6D                 	db	109	;'m'
   322   001041  70                 	db	112	;'p'
   323   001042  65                 	db	101	;'e'
   324   001043  72                 	db	114	;'r'
   325   001044  61                 	db	97	;'a'
   326   001045  74                 	db	116	;'t'
   327   001046  75                 	db	117	;'u'
   328   001047  72                 	db	114	;'r'
   329   001048  65                 	db	101	;'e'
   330   001049  3A                 	db	58	;':'
   331   00104A  20                 	db	32
   332   00104B  00                 	db	0
   333   00104C                     STR_5:
   334   00104C  54                 	db	84	;'T'
   335   00104D  69                 	db	105	;'i'
   336   00104E  6D                 	db	109	;'m'
   337   00104F  65                 	db	101	;'e'
   338   001050  3A                 	db	58	;':'
   339   001051  20                 	db	32
   340   001052  00                 	db	0
   341   001053                     STR_7:
   342   001053  44                 	db	68	;'D'
   343   001054  61                 	db	97	;'a'
   344   001055  74                 	db	116	;'t'
   345   001056  65                 	db	101	;'e'
   346   001057  3A                 	db	58	;':'
   347   001058  20                 	db	32
   348   001059  00                 	db	0
   349   00105A                     STR_3:
   350   00105A  25                 	db	37
   351   00105B  69                 	db	105	;'i'
   352   00105C  00                 	db	0
   353   00105D  00                 	db	0	; dummy byte at the end
   354   000000                     
   355                           	psect	nvBANK0
   356   0000FB                     __pnvBANK0:
   357                           	callstack 0
   358   0000FB                     _EUSART_OverrunErrorHandler:
   359                           	callstack 0
   360   0000FB                     	ds	2
   361   0000FD                     _EUSART_FramingErrorHandler:
   362                           	callstack 0
   363   0000FD                     	ds	2
   364                           
   365                           	psect	nvBANK1
   366   000148                     __pnvBANK1:
   367                           	callstack 0
   368   000148                     _EUSART_ErrorHandler:
   369                           	callstack 0
   370   000148                     	ds	2
   371   000000                     _SSPSTATbits	set	4039
   372   000000                     _SSPCON2bits	set	4037
   373   000000                     _SSPCON1bits	set	4038
   374   000000                     _RCSTAbits	set	4011
   375   000000                     _TXSTAbits	set	4012
   376   000000                     _WPUB	set	3964
   377   000000                     _ANSEL	set	3966
   378   000000                     _OSCTUNE	set	3995
   379   000000                     _PIR1bits	set	3998
   380   000000                     _RCSTA	set	4011
   381   000000                     _BAUDCON	set	4024
   382   000000                     _LATA	set	3977
   383   000000                     _LATD	set	3980
   384   000000                     _LATE	set	3981
   385   000000                     _SSPCON2	set	4037
   386   000000                     _SSPCON1	set	4038
   387   000000                     _SSPSTAT	set	4039
   388   000000                     _RCONbits	set	4048
   389   000000                     _OSCCON	set	4051
   390   000000                     _SPBRGH	set	4016
   391   000000                     _INTCON2bits	set	4081
   392   000000                     _PIE1bits	set	3997
   393   000000                     _EECON1bits	set	4006
   394   000000                     _TRISA	set	3986
   395   000000                     _TRISE	set	3990
   396   000000                     _ANSELH	set	3967
   397   000000                     _PORTE	set	3972
   398   000000                     _PORTD	set	3971
   399   000000                     _PORTC	set	3970
   400   000000                     _PORTB	set	3969
   401   000000                     _PORTA	set	3968
   402   000000                     _TABLAT	set	4085
   403   000000                     _TBLPTRL	set	4086
   404   000000                     _TBLPTRH	set	4087
   405   000000                     _TBLPTRU	set	4088
   406   000000                     _INTCONbits	set	4082
   407   000000                     _SSPBUF	set	4041
   408   000000                     _SSPADD	set	4040
   409                           
   410                           ; #config settings
   411                           
   412                           	psect	cinit
   413   002FC0                     __pcinit:
   414                           	callstack 0
   415   002FC0                     start_initialization:
   416                           	callstack 0
   417   002FC0                     __initialization:
   418                           	callstack 0
   419                           
   420                           ; Initialize objects allocated to BANK1 (10 bytes)
   421                           ; load TBLPTR registers with __pidataBANK1
   422   002FC0  0E58               	movlw	low __pidataBANK1
   423   002FC2  6EF6               	movwf	tblptrl,c
   424   002FC4  0E3D               	movlw	high __pidataBANK1
   425   002FC6  6EF7               	movwf	tblptrh,c
   426   002FC8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   427   002FCA  6EF8               	movwf	tblptru,c
   428   002FCC  EE01  F03E         	lfsr	0,__pdataBANK1
   429   002FD0  EE10 F00A          	lfsr	1,10
   430   002FD4                     copy_data0:
   431   002FD4  0009               	tblrd		*+
   432   002FD6  CFF5 FFEE          	movff	tablat,postinc0
   433   002FDA  50E5               	movf	postdec1,w,c
   434   002FDC  50E1               	movf	fsr1l,w,c
   435   002FDE  E1FA               	bnz	copy_data0
   436                           
   437                           ; Initialize objects allocated to BANK0 (20 bytes)
   438                           ; load TBLPTR registers with __pidataBANK0
   439   002FE0  0EAC               	movlw	low __pidataBANK0
   440   002FE2  6EF6               	movwf	tblptrl,c
   441   002FE4  0E3C               	movlw	high __pidataBANK0
   442   002FE6  6EF7               	movwf	tblptrh,c
   443   002FE8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   444   002FEA  6EF8               	movwf	tblptru,c
   445   002FEC  EE00  F0E7         	lfsr	0,__pdataBANK0
   446   002FF0  EE10 F014          	lfsr	1,20
   447   002FF4                     copy_data1:
   448   002FF4  0009               	tblrd		*+
   449   002FF6  CFF5 FFEE          	movff	tablat,postinc0
   450   002FFA  50E5               	movf	postdec1,w,c
   451   002FFC  50E1               	movf	fsr1l,w,c
   452   002FFE  E1FA               	bnz	copy_data1
   453                           
   454                           ; Initialize objects allocated to COMRAM (6 bytes)
   455                           ; load TBLPTR registers with __pidataCOMRAM
   456   003000  0EE4               	movlw	low __pidataCOMRAM
   457   003002  6EF6               	movwf	tblptrl,c
   458   003004  0E3D               	movlw	high __pidataCOMRAM
   459   003006  6EF7               	movwf	tblptrh,c
   460   003008  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   461   00300A  6EF8               	movwf	tblptru,c
   462   00300C  EE00  F040         	lfsr	0,__pdataCOMRAM
   463   003010  EE10 F006          	lfsr	1,6
   464   003014                     copy_data2:
   465   003014  0009               	tblrd		*+
   466   003016  CFF5 FFEE          	movff	tablat,postinc0
   467   00301A  50E5               	movf	postdec1,w,c
   468   00301C  50E1               	movf	fsr1l,w,c
   469   00301E  E1FA               	bnz	copy_data2
   470                           
   471                           ; Clear objects allocated to BANK1 (44 bytes)
   472   003020  EE01  F000         	lfsr	0,__pbssBANK1
   473   003024  0E2C               	movlw	44
   474   003026                     clear_0:
   475   003026  6AEE               	clrf	postinc0,c
   476   003028  06E8               	decf	wreg,f,c
   477   00302A  E1FD               	bnz	clear_0
   478                           
   479                           ; Clear objects allocated to BANK0 (62 bytes)
   480   00302C  EE00  F0A9         	lfsr	0,__pbssBANK0
   481   003030  0E3E               	movlw	62
   482   003032                     clear_1:
   483   003032  6AEE               	clrf	postinc0,c
   484   003034  06E8               	decf	wreg,f,c
   485   003036  E1FD               	bnz	clear_1
   486                           
   487                           ; Clear objects allocated to COMRAM (18 bytes)
   488   003038  EE00  F02E         	lfsr	0,__pbssCOMRAM
   489   00303C  0E12               	movlw	18
   490   00303E                     clear_2:
   491   00303E  6AEE               	clrf	postinc0,c
   492   003040  06E8               	decf	wreg,f,c
   493   003042  E1FD               	bnz	clear_2
   494   003044                     end_of_initialization:
   495                           	callstack 0
   496   003044                     __end_of__initialization:
   497                           	callstack 0
   498   003044  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   499   003046  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   500   003048  0100               	movlb	0
   501   00304A  EF58  F014         	goto	_main	;jump to C main() function
   502                           
   503                           	psect	bssCOMRAM
   504   00002E                     __pbssCOMRAM:
   505                           	callstack 0
   506   00002E                     _rtc:
   507                           	callstack 0
   508   00002E                     	ds	6
   509   000034                     _width:
   510                           	callstack 0
   511   000034                     	ds	2
   512   000036                     _prec:
   513                           	callstack 0
   514   000036                     	ds	2
   515   000038                     _res:
   516                           	callstack 0
   517   000038                     	ds	2
   518   00003A                     _MSSP_InterruptHandler:
   519                           	callstack 0
   520   00003A                     	ds	2
   521   00003C                     _flags:
   522                           	callstack 0
   523   00003C                     	ds	1
   524   00003D                     _eevalue:
   525                           	callstack 0
   526   00003D                     	ds	1
   527   00003E                     _temp_value:
   528                           	callstack 0
   529   00003E                     	ds	1
   530   00003F                     _eusartRxLastError:
   531                           	callstack 0
   532   00003F                     	ds	1
   533                           
   534                           	psect	dataCOMRAM
   535   000040                     __pdataCOMRAM:
   536                           	callstack 0
   537   000040                     _lcd_obj:
   538                           	callstack 0
   539   000040                     	ds	6
   540                           
   541                           	psect	bssBANK0
   542   0000A9                     __pbssBANK0:
   543                           	callstack 0
   544   0000A9                     _I2C_Status:
   545                           	callstack 0
   546   0000A9                     	ds	36
   547   0000CD                     _date_time:
   548                           	callstack 0
   549   0000CD                     	ds	20
   550   0000E1                     _nout:
   551                           	callstack 0
   552   0000E1                     	ds	2
   553   0000E3                     _data:
   554                           	callstack 0
   555   0000E3                     	ds	4
   556                           
   557                           	psect	dataBANK0
   558   0000E7                     __pdataBANK0:
   559                           	callstack 0
   560   0000E7                     _lat_registers:
   561                           	callstack 0
   562   0000E7                     	ds	10
   563   0000F1                     _tris_registers:
   564                           	callstack 0
   565   0000F1                     	ds	10
   566                           
   567                           	psect	bssBANK1
   568   000100                     __pbssBANK1:
   569                           	callstack 0
   570   000100                     	ds	6
   571   000106                     _rtc_obj:
   572                           	callstack 0
   573   000106                     	ds	6
   574   00010C                     _dbuf:
   575                           	callstack 0
   576   00010C                     	ds	32
   577                           
   578                           	psect	dataBANK1
   579   00013E                     __pdataBANK1:
   580                           	callstack 0
   581   00013E                     _port_registers:
   582                           	callstack 0
   583   00013E                     	ds	10
   584                           
   585                           	psect	cstackBANK1
   586   00012C                     __pcstackBANK1:
   587                           	callstack 0
   588   00012C                     sprintf@ap:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x0
   592   00012C                     	ds	2
   593   00012E                     sprintf@f:
   594                           	callstack 0
   595                           
   596                           ; 12 bytes @ 0x2
   597   00012E                     	ds	12
   598   00013A                     convert_byte_to_string@l_counter:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0xE
   602   00013A                     	ds	1
   603   00013B                     convert_byte_to_string@val:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xF
   607   00013B                     	ds	1
   608   00013C                     ??_main:
   609                           
   610                           ; 1 bytes @ 0x10
   611   00013C                     	ds	2
   612                           
   613                           	psect	cstackBANK0
   614   000060                     __pcstackBANK0:
   615                           	callstack 0
   616   000060                     ?_pad:
   617                           	callstack 0
   618   000060                     lcd_4bit_send_command@lcd:
   619                           	callstack 0
   620   000060                     lcd_4bit_send_char_data@lcd:
   621                           	callstack 0
   622   000060                     pad@fp:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x0
   626   000060                     	ds	2
   627   000062                     lcd_4bit_send_command@command:
   628                           	callstack 0
   629   000062                     lcd_4bit_send_char_data@data:
   630                           	callstack 0
   631   000062                     pad@buf:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2
   635   000062                     	ds	1
   636   000063                     lcd_4bit_send_command@l_counter:
   637                           	callstack 0
   638   000063                     lcd_4bit_send_char_data@l_counter:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x3
   642   000063                     	ds	1
   643   000064                     lcd_4bit_send_command@ret:
   644                           	callstack 0
   645   000064                     lcd_4bit_send_char_data@ret:
   646                           	callstack 0
   647   000064                     pad@p:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x4
   651   000064                     	ds	1
   652   000065                     lcd_4bit_intialize@lcd:
   653                           	callstack 0
   654   000065                     lcd_4bit_send_string@lcd:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x5
   658   000065                     	ds	1
   659   000066                     pad@i:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x6
   663   000066                     	ds	1
   664   000067                     ??_lcd_4bit_intialize:
   665   000067                     lcd_4bit_send_string@str:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x7
   669   000067                     	ds	1
   670   000068                     pad@w:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x8
   674   000068                     	ds	1
   675   000069                     lcd_4bit_intialize@l_data_pins_counter:
   676                           	callstack 0
   677   000069                     Print_RTC_Date_Time@rtc_obj:
   678                           	callstack 0
   679                           
   680                           ; 6 bytes @ 0x9
   681   000069                     	ds	1
   682   00006A                     ?_dtoa:
   683                           	callstack 0
   684   00006A                     ?_otoa:
   685                           	callstack 0
   686   00006A                     ?_utoa:
   687                           	callstack 0
   688   00006A                     ?_xtoa:
   689                           	callstack 0
   690   00006A                     lcd_4bit_intialize@ret:
   691                           	callstack 0
   692   00006A                     dtoa@fp:
   693                           	callstack 0
   694   00006A                     otoa@fp:
   695                           	callstack 0
   696   00006A                     utoa@fp:
   697                           	callstack 0
   698   00006A                     xtoa@fp:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xA
   702   00006A                     	ds	2
   703   00006C                     dtoa@d:
   704                           	callstack 0
   705   00006C                     otoa@d:
   706                           	callstack 0
   707   00006C                     utoa@d:
   708                           	callstack 0
   709   00006C                     xtoa@d:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0xC
   713   00006C                     	ds	3
   714   00006F                     Print_RTC_Date_Time@i:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xF
   718   00006F                     	ds	1
   719   000070                     ??_otoa:
   720   000070                     xtoa@x:
   721                           	callstack 0
   722   000070                     _dtoa$2892:
   723                           	callstack 0
   724   000070                     utoa@p:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x10
   728   000070                     	ds	1
   729   000071                     ??_xtoa:
   730   000071                     Print_RTC_Date_Time@i_2233:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x11
   734   000071                     	ds	1
   735   000072                     dtoa@p:
   736                           	callstack 0
   737   000072                     utoa@w:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x12
   741   000072                     	ds	2
   742   000074                     dtoa@w:
   743                           	callstack 0
   744   000074                     otoa@p:
   745                           	callstack 0
   746   000074                     utoa@i:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750   000074                     	ds	1
   751   000075                     _xtoa$2916:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755   000075                     	ds	1
   756   000076                     otoa@t:
   757                           	callstack 0
   758   000076                     dtoa@i:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x16
   762   000076                     	ds	1
   763   000077                     otoa@w:
   764                           	callstack 0
   765   000077                     xtoa@p:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x17
   769   000077                     	ds	1
   770   000078                     dtoa@s:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x18
   774   000078                     	ds	1
   775   000079                     xtoa@d_nonzero:
   776                           	callstack 0
   777   000079                     otoa@i:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x19
   781   000079                     	ds	1
   782   00007A                     xtoa@w:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x1A
   786   00007A                     	ds	2
   787   00007C                     xtoa@i:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x1C
   791   00007C                     	ds	2
   792   00007E                     xtoa@c:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x1E
   796   00007E                     	ds	1
   797   00007F                     ?_vfpfcnvrt:
   798                           	callstack 0
   799   00007F                     vfpfcnvrt@fp:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x1F
   803   00007F                     	ds	2
   804   000081                     vfpfcnvrt@fmt:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x21
   808   000081                     	ds	2
   809   000083                     vfpfcnvrt@ap:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x23
   813   000083                     	ds	2
   814   000085                     ??_vfpfcnvrt:
   815                           
   816                           ; 1 bytes @ 0x25
   817   000085                     	ds	8
   818   00008D                     vfpfcnvrt@done:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x2D
   822   00008D                     	ds	2
   823   00008F                     vfpfcnvrt@c:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x2F
   827   00008F                     	ds	1
   828   000090                     vfpfcnvrt@convarg:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x30
   832   000090                     	ds	4
   833   000094                     vfpfcnvrt@cp:
   834                           	callstack 0
   835                           
   836                           ; 3 bytes @ 0x34
   837   000094                     	ds	3
   838   000097                     ?_vfprintf:
   839                           	callstack 0
   840   000097                     vfprintf@fp:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x37
   844   000097                     	ds	2
   845   000099                     vfprintf@fmt:
   846                           	callstack 0
   847                           
   848                           ; 3 bytes @ 0x39
   849   000099                     	ds	3
   850   00009C                     vfprintf@ap:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x3C
   854   00009C                     	ds	2
   855   00009E                     ?_sprintf:
   856                           	callstack 0
   857   00009E                     sprintf@s:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x3E
   861   00009E                     	ds	2
   862   0000A0                     sprintf@fmt:
   863                           	callstack 0
   864                           
   865                           ; 3 bytes @ 0x40
   866   0000A0                     	ds	7
   867   0000A7                     convert_byte_to_string@str:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x47
   871   0000A7                     	ds	2
   872                           
   873                           	psect	cstackCOMRAM
   874   000001                     __pcstackCOMRAM:
   875                           	callstack 0
   876   000001                     I2C_MasterSendTxData@data:
   877                           	callstack 0
   878   000001                     i2I2C_SetBuffer@buffer:
   879                           	callstack 0
   880   000001                     i2I2C_SetCallback@cb:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x0
   884   000001                     	ds	1
   885   000002                     
   886                           ; 1 bytes @ 0x1
   887   000002                     	ds	1
   888   000003                     i2I2C_SetBuffer@bufferSize:
   889                           	callstack 0
   890   000003                     i2I2C_SetCallback@ptr:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x2
   894   000003                     	ds	2
   895   000005                     i2I2C_SetCallback@idx:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x4
   899   000005                     	ds	1
   900   000006                     i2I2C_SetDataCompleteCallback@cb:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x5
   904   000006                     	ds	2
   905   000008                     i2I2C_SetDataCompleteCallback@ptr:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x7
   909   000008                     	ds	2
   910   00000A                     rd1RegCompleteHandler@ptr:
   911                           	callstack 0
   912   00000A                     rd2RegCompleteHandler@ptr:
   913                           	callstack 0
   914   00000A                     wr1RegCompleteHandler@ptr:
   915                           	callstack 0
   916   00000A                     wr2RegCompleteHandler@ptr:
   917                           	callstack 0
   918   00000A                     rdBlkRegCompleteHandler@ptr:
   919                           	callstack 0
   920   00000A                     I2C_CallbackReturnReset@funPtr:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x9
   924   00000A                     	ds	2
   925   00000C                     ??_I2C_DO_TX:
   926   00000C                     ??_I2C_DO_RX:
   927   00000C                     ??_I2C_DO_TX_EMPTY:
   928   00000C                     ??_I2C_DO_ADDRESS_NACK:
   929   00000C                     
   930                           ; 1 bytes @ 0xB
   931   00000C                     	ds	2
   932   00000E                     ??_I2C_MasterFsm:
   933                           
   934                           ; 1 bytes @ 0xD
   935   00000E                     	ds	2
   936   000010                     ??_INTERRUPT_InterruptManagerHigh:
   937                           
   938                           ; 1 bytes @ 0xF
   939   000010                     	ds	10
   940   00001A                     ?_strlen:
   941                           	callstack 0
   942   00001A                     ?_isupper:
   943                           	callstack 0
   944   00001A                     ?_isalpha:
   945                           	callstack 0
   946   00001A                     ?_islower:
   947                           	callstack 0
   948   00001A                     ?___wmul:
   949                           	callstack 0
   950   00001A                     ?___lldiv:
   951                           	callstack 0
   952   00001A                     ?___aldiv:
   953                           	callstack 0
   954   00001A                     ?___almod:
   955                           	callstack 0
   956   00001A                     ?___llmod:
   957                           	callstack 0
   958   00001A                     EUSART_Write@txData:
   959                           	callstack 0
   960   00001A                     I2C_Close@returnValue:
   961                           	callstack 0
   962   00001A                     I2C_MasterOperation@read:
   963                           	callstack 0
   964   00001A                     EUSART_SetFramingErrorHandler@interruptHandler:
   965                           	callstack 0
   966   00001A                     EUSART_SetOverrunErrorHandler@interruptHandler:
   967                           	callstack 0
   968   00001A                     EUSART_SetErrorHandler@interruptHandler:
   969                           	callstack 0
   970   00001A                     I2C_SetBuffer@buffer:
   971                           	callstack 0
   972   00001A                     I2C_SetInterruptHandler@InterruptHandler:
   973                           	callstack 0
   974   00001A                     I2C_SetCallback@cb:
   975                           	callstack 0
   976   00001A                     gpio_pin_direction_initialize@_pin_config:
   977                           	callstack 0
   978   00001A                     gpio_pin_write_logic@_pin_config:
   979                           	callstack 0
   980   00001A                     ___wmul@multiplier:
   981                           	callstack 0
   982   00001A                     memset@dest:
   983                           	callstack 0
   984   00001A                     isalpha@c:
   985                           	callstack 0
   986   00001A                     isupper@c:
   987                           	callstack 0
   988   00001A                     fputc@c:
   989                           	callstack 0
   990   00001A                     strlen@s:
   991                           	callstack 0
   992   00001A                     islower@c:
   993                           	callstack 0
   994   00001A                     ___lldiv@dividend:
   995                           	callstack 0
   996   00001A                     ___aldiv@dividend:
   997                           	callstack 0
   998   00001A                     ___almod@dividend:
   999                           	callstack 0
  1000   00001A                     ___llmod@dividend:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x19
  1004   00001A                     	ds	1
  1005   00001B                     I2C_MasterOperation@returnValue:
  1006                           	callstack 0
  1007   00001B                     EUART_Send_String@text:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x1A
  1011   00001B                     	ds	1
  1012   00001C                     ??_isupper:
  1013   00001C                     ??_isalpha:
  1014   00001C                     ??_islower:
  1015   00001C                     ??_gpio_pin_direction_initialize:
  1016   00001C                     I2C_Open@address:
  1017                           	callstack 0
  1018   00001C                     gpio_pin_write_logic@logic:
  1019                           	callstack 0
  1020   00001C                     I2C_SetBuffer@bufferSize:
  1021                           	callstack 0
  1022   00001C                     I2C_SetCallback@ptr:
  1023                           	callstack 0
  1024   00001C                     ___wmul@multiplicand:
  1025                           	callstack 0
  1026   00001C                     memset@c:
  1027                           	callstack 0
  1028   00001C                     fputc@fp:
  1029                           	callstack 0
  1030   00001C                     strlen@a:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x1B
  1034   00001C                     	ds	1
  1035   00001D                     ??_gpio_pin_write_logic:
  1036   00001D                     I2C_Open@returnValue:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x1C
  1040   00001D                     	ds	1
  1041   00001E                     ??_fputc:
  1042   00001E                     ?_toupper:
  1043                           	callstack 0
  1044   00001E                     I2C_SetCallback@idx:
  1045                           	callstack 0
  1046   00001E                     ___wmul@product:
  1047                           	callstack 0
  1048   00001E                     memset@n:
  1049                           	callstack 0
  1050   00001E                     toupper@c:
  1051                           	callstack 0
  1052   00001E                     ___lldiv@divisor:
  1053                           	callstack 0
  1054   00001E                     ___aldiv@divisor:
  1055                           	callstack 0
  1056   00001E                     ___almod@divisor:
  1057                           	callstack 0
  1058   00001E                     ___llmod@divisor:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x1D
  1062   00001E                     	ds	1
  1063   00001F                     I2C_SetDataCompleteCallback@cb:
  1064                           	callstack 0
  1065   00001F                     I2C_SetAddressNackCallback@cb:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x1E
  1069   00001F                     	ds	1
  1070   000020                     ??_memset:
  1071   000020                     ??_toupper:
  1072   000020                     ?_read_prec_or_width:
  1073                           	callstack 0
  1074   000020                     read_prec_or_width@fmt:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x1F
  1078   000020                     	ds	1
  1079   000021                     I2C_SetDataCompleteCallback@ptr:
  1080                           	callstack 0
  1081   000021                     I2C_SetAddressNackCallback@ptr:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x20
  1085   000021                     	ds	1
  1086   000022                     gpio_pin_direction_initialize@ret:
  1087                           	callstack 0
  1088   000022                     ___aldiv@counter:
  1089                           	callstack 0
  1090   000022                     ___almod@counter:
  1091                           	callstack 0
  1092   000022                     ___llmod@counter:
  1093                           	callstack 0
  1094   000022                     memset@k:
  1095                           	callstack 0
  1096   000022                     read_prec_or_width@ap:
  1097                           	callstack 0
  1098   000022                     ___lldiv@quotient:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x21
  1102   000022                     	ds	1
  1103   000023                     I2C_Read1ByteRegister@reg:
  1104                           	callstack 0
  1105   000023                     I2C_Write1ByteRegister@reg:
  1106                           	callstack 0
  1107   000023                     gpio_pin_write_logic@ret:
  1108                           	callstack 0
  1109   000023                     ___aldiv@sign:
  1110                           	callstack 0
  1111   000023                     ___almod@sign:
  1112                           	callstack 0
  1113   000023                     fputs@s:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x22
  1117   000023                     	ds	1
  1118   000024                     ??_read_prec_or_width:
  1119   000024                     ?_abs:
  1120                           	callstack 0
  1121   000024                     I2C_Read1ByteRegister@address:
  1122                           	callstack 0
  1123   000024                     I2C_Write1ByteRegister@data:
  1124                           	callstack 0
  1125   000024                     send_4bit_data@lcd:
  1126                           	callstack 0
  1127   000024                     send_4bit_enable_signal@lcd:
  1128                           	callstack 0
  1129   000024                     gpio_pin_initialize@_pin_config:
  1130                           	callstack 0
  1131   000024                     memset@s:
  1132                           	callstack 0
  1133   000024                     abs@a:
  1134                           	callstack 0
  1135   000024                     ___aldiv@quotient:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x23
  1139   000024                     	ds	1
  1140   000025                     I2C_Read1ByteRegister@returnValue:
  1141                           	callstack 0
  1142   000025                     I2C_Write1ByteRegister@address:
  1143                           	callstack 0
  1144   000025                     fputs@fp:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x24
  1148   000025                     	ds	1
  1149   000026                     ??_gpio_pin_initialize:
  1150   000026                     ??_abs:
  1151   000026                     ?_Set_RTC_Date_Time:
  1152                           	callstack 0
  1153   000026                     send_4bit_data@data:
  1154                           	callstack 0
  1155   000026                     send_4bit_enable_signal@ret:
  1156                           	callstack 0
  1157   000026                     EEPROM_Read_1Byte@reg:
  1158                           	callstack 0
  1159   000026                     EEPROM_Write_1Byte@reg:
  1160                           	callstack 0
  1161   000026                     Read_Temprature@address:
  1162                           	callstack 0
  1163   000026                     ___lldiv@counter:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x25
  1167   000026                     	ds	1
  1168   000027                     ??_send_4bit_data:
  1169   000027                     EEPROM_Read_1Byte@address:
  1170                           	callstack 0
  1171   000027                     EEPROM_Write_1Byte@data:
  1172                           	callstack 0
  1173   000027                     gpio_pin_initialize@ret:
  1174                           	callstack 0
  1175   000027                     read_prec_or_width@c:
  1176                           	callstack 0
  1177   000027                     fputs@c:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x26
  1181   000027                     	ds	1
  1182   000028                     EEPROM_Write_1Byte@address:
  1183                           	callstack 0
  1184   000028                     read_prec_or_width@n:
  1185                           	callstack 0
  1186   000028                     fputs@i:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x27
  1190   000028                     	ds	2
  1191   00002A                     ??_pad:
  1192                           
  1193                           ; 1 bytes @ 0x29
  1194   00002A                     	ds	1
  1195   00002B                     send_4bit_data@ret:
  1196                           	callstack 0
  1197   00002B                     vfprintf@cfmt:
  1198                           	callstack 0
  1199                           
  1200                           ; 3 bytes @ 0x2A
  1201   00002B                     	ds	1
  1202   00002C                     send_4bit_data@l_counter:
  1203                           	callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x2B
  1206   00002C                     	ds	1
  1207   00002D                     
  1208                           ; 1 bytes @ 0x2C
  1209   00002D                     	ds	1
  1210   00002E                     
  1211                           ; 1 bytes @ 0x2D
  1212 ;;
  1213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1214 ;;
  1215 ;; *************** function _main *****************
  1216 ;; Defined at:
  1217 ;;		line 56 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        2 bytes
  1236 ;; Hardware stack levels required when called: 16
  1237 ;; This function calls:
  1238 ;;		_EEPROM_Read_1Byte
  1239 ;;		_EEPROM_Write_1Byte
  1240 ;;		_EUART_Send_String
  1241 ;;		_I2C_Write1ByteRegister
  1242 ;;		_Print_RTC_Date_Time
  1243 ;;		_Read_Temprature
  1244 ;;		_SYSTEM_Initialize
  1245 ;;		_Set_RTC_Date_Time
  1246 ;;		_convert_byte_to_string
  1247 ;;		_lcd_4bit_intialize
  1248 ;;		_lcd_4bit_send_command
  1249 ;;		_lcd_4bit_send_string
  1250 ;; This function is called by:
  1251 ;;		Startup code after reset
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text0
  1256   0028B0                     __ptext0:
  1257                           	callstack 0
  1258   0028B0                     _main:
  1259                           	callstack 15
  1260   0028B0                     
  1261                           ;main.c: 59:     SYSTEM_Initialize();
  1262   0028B0  EC40  F01E         	call	_SYSTEM_Initialize	;wreg free
  1263   0028B4                     
  1264                           ;main.c: 66:     (INTCONbits.GIEH = 1);
  1265   0028B4  8EF2               	bsf	242,7,c	;volatile
  1266   0028B6                     
  1267                           ;main.c: 69:     (INTCONbits.GIEL = 1);
  1268   0028B6  8CF2               	bsf	242,6,c	;volatile
  1269   0028B8                     
  1270                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  1271   0028B8  8CF2               	bsf	242,6,c	;volatile
  1272   0028BA                     
  1273                           ;main.c: 82:     EUART_Send_String("Karim Ramadan -> Smart Home\r");
  1274   0028BA  0E21               	movlw	low STR_1
  1275   0028BC  6E1B               	movwf	EUART_Send_String@text^0,c
  1276   0028BE  0E10               	movlw	high STR_1
  1277   0028C0  6E1C               	movwf	(EUART_Send_String@text+1)^0,c
  1278   0028C2  EC9A  F01C         	call	_EUART_Send_String	;wreg free
  1279   0028C6                     
  1280                           ;main.c: 83:     lcd_4bit_intialize(&lcd_obj);
  1281   0028C6  0E40               	movlw	low _lcd_obj
  1282   0028C8  0100               	movlb	0	; () banked
  1283   0028CA  6F65               	movwf	lcd_4bit_intialize@lcd& (0+255),b
  1284   0028CC  0E00               	movlw	high _lcd_obj
  1285   0028CE  6F66               	movwf	(lcd_4bit_intialize@lcd+1)& (0+255),b
  1286   0028D0  ECCB  F011         	call	_lcd_4bit_intialize	;wreg free
  1287   0028D4                     l7920:
  1288                           
  1289                           ;main.c: 85:     {;main.c: 86:         lcd_4bit_send_command(&lcd_obj, 0X01);
  1290   0028D4  0E40               	movlw	low _lcd_obj
  1291   0028D6  0100               	movlb	0	; () banked
  1292   0028D8  6F60               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  1293   0028DA  0E00               	movlw	high _lcd_obj
  1294   0028DC  6F61               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  1295   0028DE  0E01               	movlw	1
  1296   0028E0  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1297   0028E2  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1298   0028E6                     
  1299                           ;main.c: 87:         rtc_obj = Set_RTC_Date_Time();
  1300   0028E6  EC9E  F01B         	call	_Set_RTC_Date_Time	;wreg free
  1301   0028EA  EE21  F006         	lfsr	2,_rtc_obj
  1302   0028EE  0E05               	movlw	5
  1303   0028F0                     u6171:
  1304   0028F0  CFEB FFDB          	movff	plusw0,plusw2
  1305   0028F4  06E8               	decf	wreg,f,c
  1306   0028F6  E2FC               	bc	u6171
  1307                           
  1308                           ;main.c: 88:         Print_RTC_Date_Time(rtc_obj);
  1309   0028F8  EE21  F006         	lfsr	2,_rtc_obj
  1310   0028FC  EE00  F069         	lfsr	0,Print_RTC_Date_Time@rtc_obj
  1311   002900  0E05               	movlw	5
  1312   002902                     u6181:
  1313   002902  CFDB FFEB          	movff	plusw2,plusw0
  1314   002906  06E8               	decf	wreg,f,c
  1315   002908  E2FC               	bc	u6181
  1316   00290A  ECB7  F00E         	call	_Print_RTC_Date_Time	;wreg free
  1317   00290E                     
  1318                           ;main.c: 89:         temp_value = Read_Temprature(0x9A);
  1319   00290E  0E9A               	movlw	154
  1320   002910  EC85  F01E         	call	_Read_Temprature
  1321   002914  6E3E               	movwf	_temp_value^0,c
  1322   002916                     
  1323                           ;main.c: 90:         EEPROM_Write_1Byte(0xA2,0x08,0x11);
  1324   002916  0E08               	movlw	8
  1325   002918  6E26               	movwf	EEPROM_Write_1Byte@reg^0,c
  1326   00291A  0E11               	movlw	17
  1327   00291C  6E27               	movwf	EEPROM_Write_1Byte@data^0,c
  1328   00291E  0EA2               	movlw	162
  1329   002920  EC74  F01E         	call	_EEPROM_Write_1Byte
  1330   002924                     
  1331                           ;main.c: 91:         eevalue = EEPROM_Read_1Byte(0xA2,0x08);
  1332   002924  0E08               	movlw	8
  1333   002926  6E26               	movwf	EEPROM_Read_1Byte@reg^0,c
  1334   002928  0EA2               	movlw	162
  1335   00292A  EC8C  F01E         	call	_EEPROM_Read_1Byte
  1336   00292E  6E3D               	movwf	_eevalue^0,c
  1337   002930                     
  1338                           ;main.c: 92:         I2C_Write1ByteRegister(0x10,0x00,temp_value);
  1339   002930  0E00               	movlw	0
  1340   002932  6E23               	movwf	I2C_Write1ByteRegister@reg^0,c
  1341   002934  C03E  F024         	movff	_temp_value,I2C_Write1ByteRegister@data
  1342   002938  0E10               	movlw	16
  1343   00293A  EC9E  F01A         	call	_I2C_Write1ByteRegister
  1344   00293E                     
  1345                           ;main.c: 93:         lcd_4bit_send_command(&lcd_obj,0x94);
  1346   00293E  0E40               	movlw	low _lcd_obj
  1347   002940  0100               	movlb	0	; () banked
  1348   002942  6F60               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  1349   002944  0E00               	movlw	high _lcd_obj
  1350   002946  6F61               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  1351   002948  0E94               	movlw	148
  1352   00294A  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1353   00294C  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1354   002950                     
  1355                           ;main.c: 94:         lcd_4bit_send_string(&lcd_obj,"Temperature: ");
  1356   002950  0E40               	movlw	low _lcd_obj
  1357   002952  0100               	movlb	0	; () banked
  1358   002954  6F65               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  1359   002956  0E00               	movlw	high _lcd_obj
  1360   002958  6F66               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  1361   00295A  0E3E               	movlw	low STR_2
  1362   00295C  6F67               	movwf	lcd_4bit_send_string@str& (0+255),b
  1363   00295E  0E10               	movlw	high STR_2
  1364   002960  6F68               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  1365   002962  EC36  F019         	call	_lcd_4bit_send_string	;wreg free
  1366   002966                     
  1367                           ;main.c: 95:         convert_byte_to_string(temp_value,&data);
  1368   002966  0EE3               	movlw	low _data
  1369   002968  0100               	movlb	0	; () banked
  1370   00296A  6FA7               	movwf	convert_byte_to_string@str& (0+255),b
  1371   00296C  0E00               	movlw	high _data
  1372   00296E  6FA8               	movwf	(convert_byte_to_string@str+1)& (0+255),b
  1373   002970  503E               	movf	_temp_value^0,w,c
  1374   002972  EC0A  F01B         	call	_convert_byte_to_string
  1375   002976                     
  1376                           ;main.c: 96:         lcd_4bit_send_string(&lcd_obj,data);
  1377   002976  0E40               	movlw	low _lcd_obj
  1378   002978  0100               	movlb	0	; () banked
  1379   00297A  6F65               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  1380   00297C  0E00               	movlw	high _lcd_obj
  1381   00297E  6F66               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  1382   002980  0EE3               	movlw	low _data
  1383   002982  6F67               	movwf	lcd_4bit_send_string@str& (0+255),b
  1384   002984  0E00               	movlw	high _data
  1385   002986  6F68               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  1386   002988  EC36  F019         	call	_lcd_4bit_send_string	;wreg free
  1387   00298C                     
  1388                           ;main.c: 97:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1389   00298C  0E03               	movlw	3
  1390   00298E  0101               	movlb	1	; () banked
  1391   002990  6F3D               	movwf	(??_main+1)& (0+255),b
  1392   002992  0E08               	movlw	8
  1393   002994  6F3C               	movwf	??_main& (0+255),b
  1394   002996  0E77               	movlw	119
  1395   002998                     u6367:
  1396   002998  2EE8               	decfsz	wreg,f,c
  1397   00299A  D7FE               	bra	u6367
  1398   00299C  2F3C               	decfsz	??_main& (0+255),f,b
  1399   00299E  D7FC               	bra	u6367
  1400   0029A0  2F3D               	decfsz	(??_main+1)& (0+255),f,b
  1401   0029A2  D7FA               	bra	u6367
  1402   0029A4  EF6A  F014         	goto	l7920
  1403   0029A8  EF5B  F000         	goto	start
  1404   0029AC                     __end_of_main:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function _lcd_4bit_intialize *****************
  1408 ;; Defined at:
  1409 ;;		line 9 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  lcd             2    5[BANK0 ] PTR const struct .
  1412 ;;		 -> lcd_obj(6), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  ret             1   10[BANK0 ] unsigned char 
  1415 ;;  l_data_pins_    1    9[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;Total ram usage:        6 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 10
  1432 ;; This function calls:
  1433 ;;		_gpio_pin_initialize
  1434 ;;		_lcd_4bit_send_command
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text1
  1441   002396                     __ptext1:
  1442                           	callstack 0
  1443   002396                     _lcd_4bit_intialize:
  1444                           	callstack 20
  1445   002396                     
  1446                           ;Modules/chr_LCD/ecu_chr_lcd.c: 11:     uint8 l_data_pins_counter = 0;
  1447   002396  0E00               	movlw	0
  1448   002398  0100               	movlb	0	; () banked
  1449   00239A  6F69               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1450   00239C                     
  1451                           ; BSR set to: 0
  1452                           ;Modules/chr_LCD/ecu_chr_lcd.c: 12:     if (((void*)0) == lcd) {
  1453   00239C  5165               	movf	lcd_4bit_intialize@lcd& (0+255),w,b
  1454   00239E  1166               	iorwf	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1455   0023A0  A4D8               	btfss	status,2,c
  1456   0023A2  EFD5  F011         	goto	u6071
  1457   0023A6  EFD7  F011         	goto	u6070
  1458   0023AA                     u6071:
  1459   0023AA  EFD9  F011         	goto	l7766
  1460   0023AE                     u6070:
  1461   0023AE                     
  1462                           ; BSR set to: 0
  1463                           ;Modules/chr_LCD/ecu_chr_lcd.c: 14:     } else {
  1464   0023AE  EF7B  F012         	goto	l767
  1465   0023B2                     l7766:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;Modules/chr_LCD/ecu_chr_lcd.c: 15:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1469   0023B2  0E01               	movlw	1
  1470   0023B4  2565               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1471   0023B6  6E24               	movwf	gpio_pin_initialize@_pin_config^0,c
  1472   0023B8  0E00               	movlw	0
  1473   0023BA  2166               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1474   0023BC  6E25               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1475   0023BE  EC27  F018         	call	_gpio_pin_initialize	;wreg free
  1476   0023C2  0100               	movlb	0	; () banked
  1477   0023C4  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1478                           
  1479                           ;Modules/chr_LCD/ecu_chr_lcd.c: 16:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  1480   0023C6  C065  F024         	movff	lcd_4bit_intialize@lcd,gpio_pin_initialize@_pin_config
  1481   0023CA  C066  F025         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_initialize@_pin_config+1
  1482   0023CE  EC27  F018         	call	_gpio_pin_initialize	;wreg free
  1483   0023D2  0100               	movlb	0	; () banked
  1484   0023D4  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1485   0023D6                     
  1486                           ; BSR set to: 0
  1487                           ;Modules/chr_LCD/ecu_chr_lcd.c: 17:         for (l_data_pins_counter = 0; l_data_pins_co
      +                          unter < 8; l_data_pins_counter++) {
  1488   0023D6  0E00               	movlw	0
  1489   0023D8  6F69               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1490   0023DA                     l7774:
  1491                           
  1492                           ; BSR set to: 0
  1493   0023DA  5169               	movf	lcd_4bit_intialize@l_data_pins_counter& (0+255),w,b
  1494   0023DC  2565               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1495   0023DE  6F67               	movwf	??_lcd_4bit_intialize& (0+255),b
  1496   0023E0  0E00               	movlw	0
  1497   0023E2  2166               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1498   0023E4  6F68               	movwf	(??_lcd_4bit_intialize+1)& (0+255),b
  1499   0023E6  0E02               	movlw	2
  1500   0023E8  2567               	addwf	??_lcd_4bit_intialize& (0+255),w,b
  1501   0023EA  6E24               	movwf	gpio_pin_initialize@_pin_config^0,c
  1502   0023EC  0E00               	movlw	0
  1503   0023EE  2168               	addwfc	(??_lcd_4bit_intialize+1)& (0+255),w,b
  1504   0023F0  6E25               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1505   0023F2  EC27  F018         	call	_gpio_pin_initialize	;wreg free
  1506   0023F6                     
  1507                           ;Modules/chr_LCD/ecu_chr_lcd.c: 19:         }
  1508   0023F6  0100               	movlb	0	; () banked
  1509   0023F8  2B69               	incf	lcd_4bit_intialize@l_data_pins_counter& (0+255),f,b
  1510   0023FA                     
  1511                           ; BSR set to: 0
  1512   0023FA  0E07               	movlw	7
  1513   0023FC  6569               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1514   0023FE  EF03  F012         	goto	u6081
  1515   002402  EF05  F012         	goto	u6080
  1516   002406                     u6081:
  1517   002406  EFED  F011         	goto	l7774
  1518   00240A                     u6080:
  1519   00240A                     
  1520                           ; BSR set to: 0
  1521   00240A  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1522   00240E  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1523   002412  0E38               	movlw	56
  1524   002414  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1525   002416  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1526   00241A                     
  1527                           ;Modules/chr_LCD/ecu_chr_lcd.c: 21:         _delay((unsigned long)((20)*(16000000/4000.0
      +                          )));
  1528   00241A  0E68               	movlw	104
  1529   00241C  0100               	movlb	0	; () banked
  1530   00241E  6F67               	movwf	??_lcd_4bit_intialize& (0+255),b
  1531   002420  0EE4               	movlw	228
  1532   002422                     u6377:
  1533   002422  2EE8               	decfsz	wreg,f,c
  1534   002424  D7FE               	bra	u6377
  1535   002426  2F67               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1536   002428  D7FC               	bra	u6377
  1537   00242A  F000               	nop	
  1538   00242C  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1539   002430  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1540   002434  0E38               	movlw	56
  1541   002436  0100               	movlb	0	; () banked
  1542   002438  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1543   00243A  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1544                           
  1545                           ;Modules/chr_LCD/ecu_chr_lcd.c: 23:         _delay((unsigned long)((5)*(16000000/4000.0)
      +                          ));
  1546   00243E  0E1A               	movlw	26
  1547   002440  0100               	movlb	0	; () banked
  1548   002442  6F67               	movwf	??_lcd_4bit_intialize& (0+255),b
  1549   002444  0EF8               	movlw	248
  1550   002446                     u6387:
  1551   002446  2EE8               	decfsz	wreg,f,c
  1552   002448  D7FE               	bra	u6387
  1553   00244A  2F67               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1554   00244C  D7FC               	bra	u6387
  1555   00244E  F000               	nop	
  1556   002450  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1557   002454  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1558   002458  0E38               	movlw	56
  1559   00245A  0100               	movlb	0	; () banked
  1560   00245C  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1561   00245E  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1562   002462                     
  1563                           ;Modules/chr_LCD/ecu_chr_lcd.c: 25:         _delay((unsigned long)((150)*(16000000/40000
      +                          00.0)));
  1564   002462  0EC8               	movlw	200
  1565   002464                     u6397:
  1566   002464  2EE8               	decfsz	wreg,f,c
  1567   002466  D7FE               	bra	u6397
  1568                           
  1569                           ;Modules/chr_LCD/ecu_chr_lcd.c: 26:         ret = lcd_4bit_send_command(lcd, 0x38);
  1570   002468  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1571   00246C  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1572   002470  0E38               	movlw	56
  1573   002472  0100               	movlb	0	; () banked
  1574   002474  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1575   002476  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1576   00247A  0100               	movlb	0	; () banked
  1577   00247C  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1578                           
  1579                           ;Modules/chr_LCD/ecu_chr_lcd.c: 27:         ret = lcd_4bit_send_command(lcd, 0X01);
  1580   00247E  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1581   002482  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1582   002486  0E01               	movlw	1
  1583   002488  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1584   00248A  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1585   00248E  0100               	movlb	0	; () banked
  1586   002490  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1587                           
  1588                           ;Modules/chr_LCD/ecu_chr_lcd.c: 28:         ret = lcd_4bit_send_command(lcd, 0x02);
  1589   002492  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1590   002496  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1591   00249A  0E02               	movlw	2
  1592   00249C  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1593   00249E  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1594   0024A2  0100               	movlb	0	; () banked
  1595   0024A4  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1596                           
  1597                           ;Modules/chr_LCD/ecu_chr_lcd.c: 29:         ret = lcd_4bit_send_command(lcd, 0x06);
  1598   0024A6  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1599   0024AA  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1600   0024AE  0E06               	movlw	6
  1601   0024B0  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1602   0024B2  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1603   0024B6  0100               	movlb	0	; () banked
  1604   0024B8  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1605                           
  1606                           ;Modules/chr_LCD/ecu_chr_lcd.c: 30:         ret = lcd_4bit_send_command(lcd, 0x0C);
  1607   0024BA  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1608   0024BE  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1609   0024C2  0E0C               	movlw	12
  1610   0024C4  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1611   0024C6  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1612   0024CA  0100               	movlb	0	; () banked
  1613   0024CC  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1614                           
  1615                           ;Modules/chr_LCD/ecu_chr_lcd.c: 31:         ret = lcd_4bit_send_command(lcd, 0x28);
  1616   0024CE  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1617   0024D2  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1618   0024D6  0E28               	movlw	40
  1619   0024D8  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1620   0024DA  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1621   0024DE  0100               	movlb	0	; () banked
  1622   0024E0  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1623                           
  1624                           ;Modules/chr_LCD/ecu_chr_lcd.c: 32:         ret = lcd_4bit_send_command(lcd, 0x80);
  1625   0024E2  C065  F060         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1626   0024E6  C066  F061         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1627   0024EA  0E80               	movlw	128
  1628   0024EC  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  1629   0024EE  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  1630   0024F2  0100               	movlb	0	; () banked
  1631   0024F4  6F6A               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1632   0024F6                     l767:
  1633                           
  1634                           ; BSR set to: 0
  1635   0024F6  0012               	return		;funcret
  1636   0024F8                     __end_of_lcd_4bit_intialize:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _gpio_pin_initialize *****************
  1640 ;; Defined at:
  1641 ;;		line 140 in file "MCAL/hal_gpio.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  _pin_config     2   35[COMRAM] PTR const struct .
  1644 ;;		 -> lcd_obj.lcd_data(4), lcd_obj(6), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  ret             1   38[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      unsigned char 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        4 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 8
  1663 ;; This function calls:
  1664 ;;		_gpio_pin_direction_initialize
  1665 ;;		_gpio_pin_write_logic
  1666 ;; This function is called by:
  1667 ;;		_lcd_4bit_intialize
  1668 ;;		_lcd_8bit_intialize
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text2
  1673   00304E                     __ptext2:
  1674                           	callstack 0
  1675   00304E                     _gpio_pin_initialize:
  1676                           	callstack 21
  1677   00304E                     
  1678                           ;MCAL/hal_gpio.c: 142:     if(((void*)0) == _pin_config || _pin_config->pin >= 8 || _pin
      +                          _config->port >= 5){
  1679   00304E  5024               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1680   003050  1025               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  1681   003052  B4D8               	btfsc	status,2,c
  1682   003054  EF2E  F018         	goto	u5961
  1683   003058  EF30  F018         	goto	u5960
  1684   00305C                     u5961:
  1685   00305C  EF50  F018         	goto	l7668
  1686   003060                     u5960:
  1687   003060  C024  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1688   003064  C025  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1689   003068  30DF               	rrcf	223,w,c
  1690   00306A  32E8               	rrcf	wreg,f,c
  1691   00306C  32E8               	rrcf	wreg,f,c
  1692   00306E  0B07               	andlw	7
  1693   003070  6E26               	movwf	??_gpio_pin_initialize^0,c
  1694   003072  0E08               	movlw	8
  1695   003074  6026               	cpfslt	??_gpio_pin_initialize^0,c
  1696   003076  EF3F  F018         	goto	u5971
  1697   00307A  EF41  F018         	goto	u5970
  1698   00307E                     u5971:
  1699   00307E  EF50  F018         	goto	l7668
  1700   003082                     u5970:
  1701   003082  C024  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1702   003086  C025  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1703   00308A  50DF               	movf	223,w,c
  1704   00308C  0B07               	andlw	7
  1705   00308E  6E26               	movwf	??_gpio_pin_initialize^0,c
  1706   003090  0E04               	movlw	4
  1707   003092  6426               	cpfsgt	??_gpio_pin_initialize^0,c
  1708   003094  EF4E  F018         	goto	u5981
  1709   003098  EF50  F018         	goto	u5980
  1710   00309C                     u5981:
  1711   00309C  EF54  F018         	goto	l7670
  1712   0030A0                     u5980:
  1713   0030A0                     l7668:
  1714                           
  1715                           ;MCAL/hal_gpio.c: 143:         ret = (Std_ReturnType)0x00;
  1716   0030A0  0E00               	movlw	0
  1717   0030A2  6E27               	movwf	gpio_pin_initialize@ret^0,c
  1718                           
  1719                           ;MCAL/hal_gpio.c: 144:     }
  1720   0030A4  EF6A  F018         	goto	l7672
  1721   0030A8                     l7670:
  1722                           
  1723                           ;MCAL/hal_gpio.c: 146:         ret = gpio_pin_direction_initialize(_pin_config);
  1724   0030A8  C024  F01A         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1725   0030AC  C025  F01B         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  1726   0030B0  EC7C  F012         	call	_gpio_pin_direction_initialize	;wreg free
  1727   0030B4  6E27               	movwf	gpio_pin_initialize@ret^0,c
  1728                           
  1729                           ;MCAL/hal_gpio.c: 147:         ret = gpio_pin_write_logic(_pin_config,_pin_config->logic
      +                          );
  1730   0030B6  C024  F01A         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1731   0030BA  C025  F01B         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1732   0030BE  C024  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1733   0030C2  C025  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1734   0030C6  0E00               	movlw	0
  1735   0030C8  BEDF               	btfsc	indf2,7,c
  1736   0030CA  0E01               	movlw	1
  1737   0030CC  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  1738   0030CE  EC2D  F013         	call	_gpio_pin_write_logic	;wreg free
  1739   0030D2  6E27               	movwf	gpio_pin_initialize@ret^0,c
  1740   0030D4                     l7672:
  1741                           
  1742                           ;MCAL/hal_gpio.c: 149:     return ret;
  1743   0030D4  5027               	movf	gpio_pin_initialize@ret^0,w,c
  1744   0030D6  0012               	return		;funcret
  1745   0030D8                     __end_of_gpio_pin_initialize:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _gpio_pin_direction_initialize *****************
  1749 ;; Defined at:
  1750 ;;		line 25 in file "MCAL/hal_gpio.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  1753 ;;		 -> lcd_obj.lcd_data(4), lcd_obj(6), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  ret             1   33[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      unsigned char 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;Total ram usage:        9 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 7
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_gpio_pin_initialize
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text3
  1780   0024F8                     __ptext3:
  1781                           	callstack 0
  1782   0024F8                     _gpio_pin_direction_initialize:
  1783                           	callstack 21
  1784   0024F8                     
  1785                           ;MCAL/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1786   0024F8  0E01               	movlw	1
  1787   0024FA  6E22               	movwf	gpio_pin_direction_initialize@ret^0,c
  1788   0024FC                     
  1789                           ;MCAL/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin >= 8 || _pin_
      +                          config->port >= 5){
  1790   0024FC  501A               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1791   0024FE  101B               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  1792   002500  B4D8               	btfsc	status,2,c
  1793   002502  EF85  F012         	goto	u5821
  1794   002506  EF87  F012         	goto	u5820
  1795   00250A                     u5821:
  1796   00250A  EFA7  F012         	goto	l7598
  1797   00250E                     u5820:
  1798   00250E  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1799   002512  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1800   002516  30DF               	rrcf	223,w,c
  1801   002518  32E8               	rrcf	wreg,f,c
  1802   00251A  32E8               	rrcf	wreg,f,c
  1803   00251C  0B07               	andlw	7
  1804   00251E  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1805   002520  0E08               	movlw	8
  1806   002522  601C               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1807   002524  EF96  F012         	goto	u5831
  1808   002528  EF98  F012         	goto	u5830
  1809   00252C                     u5831:
  1810   00252C  EFA7  F012         	goto	l7598
  1811   002530                     u5830:
  1812   002530  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1813   002534  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1814   002538  50DF               	movf	223,w,c
  1815   00253A  0B07               	andlw	7
  1816   00253C  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1817   00253E  0E04               	movlw	4
  1818   002540  641C               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1819   002542  EFA5  F012         	goto	u5841
  1820   002546  EFA7  F012         	goto	u5840
  1821   00254A                     u5841:
  1822   00254A  EF0A  F013         	goto	l7606
  1823   00254E                     u5840:
  1824   00254E                     l7598:
  1825                           
  1826                           ;MCAL/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  1827   00254E  0E00               	movlw	0
  1828   002550  6E22               	movwf	gpio_pin_direction_initialize@ret^0,c
  1829                           
  1830                           ;MCAL/hal_gpio.c: 29:     }
  1831   002552  EF2B  F013         	goto	l7608
  1832   002556                     l7600:
  1833                           
  1834                           ;MCAL/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((uint8) 1
      +                          <<_pin_config->pin));
  1835   002556  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1836   00255A  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1837   00255E  30DF               	rrcf	223,w,c
  1838   002560  32E8               	rrcf	wreg,f,c
  1839   002562  32E8               	rrcf	wreg,f,c
  1840   002564  0B07               	andlw	7
  1841   002566  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1842   002568  0E01               	movlw	1
  1843   00256A  6E1D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1844   00256C  2A1C               	incf	??_gpio_pin_direction_initialize^0,f,c
  1845   00256E  EFBB  F012         	goto	u5854
  1846   002572                     u5855:
  1847   002572  90D8               	bcf	status,0,c
  1848   002574  361D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1849   002576                     u5854:
  1850   002576  2E1C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1851   002578  EFB9  F012         	goto	u5855
  1852   00257C  501D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1853   00257E  0AFF               	xorlw	255
  1854   002580  6E1E               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1855   002582  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1856   002586  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1857   00258A  50DF               	movf	223,w,c
  1858   00258C  0B07               	andlw	7
  1859   00258E  6E1F               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1860   002590  501F               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1861   002592  0D02               	mullw	2
  1862   002594  0EF1               	movlw	low _tris_registers
  1863   002596  24F3               	addwf	243,w,c
  1864   002598  6ED9               	movwf	fsr2l,c
  1865   00259A  0E00               	movlw	high _tris_registers
  1866   00259C  20F4               	addwfc	prodh,w,c
  1867   00259E  6EDA               	movwf	fsr2h,c
  1868   0025A0  CFDE F020          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1869   0025A4  CFDD F021          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1870   0025A8  C020  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1871   0025AC  C021  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1872   0025B0  501E               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1873   0025B2  16DF               	andwf	indf2,f,c
  1874                           
  1875                           ;MCAL/hal_gpio.c: 34:                 break;
  1876   0025B4  EF2B  F013         	goto	l7608
  1877   0025B8                     l7602:
  1878                           
  1879                           ;MCAL/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((uint8) 1<
      +                          <_pin_config->pin));
  1880   0025B8  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1881   0025BC  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1882   0025C0  30DF               	rrcf	223,w,c
  1883   0025C2  32E8               	rrcf	wreg,f,c
  1884   0025C4  32E8               	rrcf	wreg,f,c
  1885   0025C6  0B07               	andlw	7
  1886   0025C8  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1887   0025CA  0E01               	movlw	1
  1888   0025CC  6E1D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1889   0025CE  2A1C               	incf	??_gpio_pin_direction_initialize^0,f,c
  1890   0025D0  EFEC  F012         	goto	u5864
  1891   0025D4                     u5865:
  1892   0025D4  90D8               	bcf	status,0,c
  1893   0025D6  361D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1894   0025D8                     u5864:
  1895   0025D8  2E1C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1896   0025DA  EFEA  F012         	goto	u5865
  1897   0025DE  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1898   0025E2  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1899   0025E6  50DF               	movf	223,w,c
  1900   0025E8  0B07               	andlw	7
  1901   0025EA  6E1E               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1902   0025EC  501E               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1903   0025EE  0D02               	mullw	2
  1904   0025F0  0EF1               	movlw	low _tris_registers
  1905   0025F2  24F3               	addwf	243,w,c
  1906   0025F4  6ED9               	movwf	fsr2l,c
  1907   0025F6  0E00               	movlw	high _tris_registers
  1908   0025F8  20F4               	addwfc	prodh,w,c
  1909   0025FA  6EDA               	movwf	fsr2h,c
  1910   0025FC  CFDE F01F          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1911   002600  CFDD F020          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1912   002604  C01F  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1913   002608  C020  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1914   00260C  501D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1915   00260E  12DF               	iorwf	indf2,f,c
  1916                           
  1917                           ;MCAL/hal_gpio.c: 37:                 break;
  1918   002610  EF2B  F013         	goto	l7608
  1919   002614                     l7606:
  1920   002614  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1921   002618  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1922   00261C  BCDF               	btfsc	indf2,6,c
  1923   00261E  EF13  F013         	goto	u5871
  1924   002622  EF16  F013         	goto	u5870
  1925   002626                     u5871:
  1926   002626  0E01               	movlw	1
  1927   002628  EF17  F013         	goto	u5880
  1928   00262C                     u5870:
  1929   00262C  0E00               	movlw	0
  1930   00262E                     u5880:
  1931   00262E  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1932   002630  6A1D               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1933                           
  1934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 1, Range of values is 0 to 0
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            4     3 (average)
  1940                           ;	Chosen strategy is simple_byte
  1941   002632  501D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1942   002634  0A00               	xorlw	0	; case 0
  1943   002636  B4D8               	btfsc	status,2,c
  1944   002638  EF20  F013         	goto	l8506
  1945   00263C  EFA7  F012         	goto	l7598
  1946   002640                     l8506:
  1947                           
  1948                           ; Switch size 1, requested type "simple"
  1949                           ; Number of cases is 2, Range of values is 0 to 1
  1950                           ; switch strategies available:
  1951                           ; Name         Instructions Cycles
  1952                           ; simple_byte            7     4 (average)
  1953                           ;	Chosen strategy is simple_byte
  1954   002640  501C               	movf	??_gpio_pin_direction_initialize^0,w,c
  1955   002642  0A00               	xorlw	0	; case 0
  1956   002644  B4D8               	btfsc	status,2,c
  1957   002646  EFAB  F012         	goto	l7600
  1958   00264A  0A01               	xorlw	1	; case 1
  1959   00264C  B4D8               	btfsc	status,2,c
  1960   00264E  EFDC  F012         	goto	l7602
  1961   002652  EFA7  F012         	goto	l7598
  1962   002656                     l7608:
  1963                           
  1964                           ;MCAL/hal_gpio.c: 42:     return ret;
  1965   002656  5022               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1966   002658  0012               	return		;funcret
  1967   00265A                     __end_of_gpio_pin_direction_initialize:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _convert_byte_to_string *****************
  1971 ;; Defined at:
  1972 ;;		line 217 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  val             1    wreg     unsigned char 
  1975 ;;  str             2   71[BANK0 ] PTR unsigned char 
  1976 ;;		 -> data(4), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  val             1   15[BANK1 ] unsigned char 
  1979 ;;  ret             1    0        unsigned char 
  1980 ;;  l_counter       1   14[BANK1 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      unsigned char 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 15
  1997 ;; This function calls:
  1998 ;;		_memset
  1999 ;;		_sprintf
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text4
  2006   003614                     __ptext4:
  2007                           	callstack 0
  2008   003614                     _convert_byte_to_string:
  2009                           	callstack 15
  2010                           
  2011                           ;incstack = 0
  2012                           ;convert_byte_to_string@val stored from wreg
  2013   003614  0101               	movlb	1	; () banked
  2014   003616  6F3B               	movwf	convert_byte_to_string@val& (0+255),b
  2015   003618                     
  2016                           ;Modules/chr_LCD/ecu_chr_lcd.c: 219:     uint8 l_counter = 0;
  2017   003618  0E00               	movlw	0
  2018   00361A  0101               	movlb	1	; () banked
  2019   00361C  6F3A               	movwf	convert_byte_to_string@l_counter& (0+255),b
  2020   00361E                     
  2021                           ; BSR set to: 1
  2022                           ;Modules/chr_LCD/ecu_chr_lcd.c: 220:     if (((void*)0) == str) {
  2023   00361E  0100               	movlb	0	; () banked
  2024   003620  51A7               	movf	convert_byte_to_string@str& (0+255),w,b
  2025   003622  11A8               	iorwf	(convert_byte_to_string@str+1)& (0+255),w,b
  2026   003624  A4D8               	btfss	status,2,c
  2027   003626  EF17  F01B         	goto	u6131
  2028   00362A  EF19  F01B         	goto	u6130
  2029   00362E                     u6131:
  2030   00362E  EF1B  F01B         	goto	l7866
  2031   003632                     u6130:
  2032   003632                     
  2033                           ; BSR set to: 0
  2034                           ;Modules/chr_LCD/ecu_chr_lcd.c: 222:     } else {
  2035   003632  EF3C  F01B         	goto	l857
  2036   003636                     l7866:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;Modules/chr_LCD/ecu_chr_lcd.c: 223:         memset(str,'\0',4);
  2040   003636  C0A7  F01A         	movff	convert_byte_to_string@str,memset@dest
  2041   00363A  C0A8  F01B         	movff	convert_byte_to_string@str+1,memset@dest+1
  2042   00363E  0E00               	movlw	0
  2043   003640  6E1D               	movwf	(memset@c+1)^0,c
  2044   003642  0E00               	movlw	0
  2045   003644  6E1C               	movwf	memset@c^0,c
  2046   003646  0E00               	movlw	0
  2047   003648  6E1F               	movwf	(memset@n+1)^0,c
  2048   00364A  0E04               	movlw	4
  2049   00364C  6E1E               	movwf	memset@n^0,c
  2050   00364E  EC5E  F010         	call	_memset	;wreg free
  2051   003652                     
  2052                           ;Modules/chr_LCD/ecu_chr_lcd.c: 224:         sprintf(str,"%i",val);
  2053   003652  C0A7  F09E         	movff	convert_byte_to_string@str,sprintf@s
  2054   003656  C0A8  F09F         	movff	convert_byte_to_string@str+1,sprintf@s+1
  2055   00365A  0E5A               	movlw	low STR_3
  2056   00365C  0100               	movlb	0	; () banked
  2057   00365E  6FA0               	movwf	sprintf@fmt& (0+255),b
  2058   003660  0E10               	movlw	high STR_3
  2059   003662  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  2060   003664  51A0               	movf	sprintf@fmt& (0+255),w,b
  2061   003666  11A1               	iorwf	(sprintf@fmt+1)& (0+255),w,b
  2062   003668  A4D8               	btfss	status,2,c
  2063   00366A  0E00               	movlw	low (__mediumconst shr (0+16))
  2064   00366C  6FA2               	movwf	(sprintf@fmt+2)& (0+255),b
  2065   00366E  C13B  F0A3         	movff	convert_byte_to_string@val,?_sprintf+5
  2066   003672  6BA4               	clrf	(?_sprintf+6)& (0+255),b
  2067   003674  EC70  F01B         	call	_sprintf	;wreg free
  2068   003678                     l857:
  2069   003678  0012               	return		;funcret
  2070   00367A                     __end_of_convert_byte_to_string:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function _sprintf *****************
  2074 ;; Defined at:
  2075 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  s               2   62[BANK0 ] PTR unsigned char 
  2078 ;;		 -> convert_short_to_string@Temp_String(6), data(4), 
  2079 ;;  fmt             3   64[BANK0 ] PTR const unsigned char 
  2080 ;;		 -> ROM(65535), STR_4(3), STR_3(3), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  f              12    2[BANK1 ] struct _IO_FILE
  2083 ;;  ap              2    0[BANK1 ] PTR void [1]
  2084 ;;		 -> ?_sprintf(2), 
  2085 ;;  ret             2    0        int 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2   62[BANK0 ] int 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2095 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Totals:         0       9      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;Total ram usage:       23 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 14
  2102 ;; This function calls:
  2103 ;;		_vfprintf
  2104 ;; This function is called by:
  2105 ;;		_convert_byte_to_string
  2106 ;;		_convert_short_to_string
  2107 ;;		_convert_int_to_string
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text5
  2112   0036E0                     __ptext5:
  2113                           	callstack 0
  2114   0036E0                     _sprintf:
  2115                           	callstack 15
  2116   0036E0  0EA3               	movlw	low (?_sprintf+5)
  2117   0036E2  0101               	movlb	1	; () banked
  2118   0036E4  6F2C               	movwf	sprintf@ap& (0+255),b
  2119   0036E6  0E00               	movlw	high (?_sprintf+5)
  2120   0036E8  6F2D               	movwf	(sprintf@ap+1)& (0+255),b
  2121   0036EA  C09E  F12E         	movff	sprintf@s,sprintf@f
  2122   0036EE  C09F  F12F         	movff	sprintf@s+1,sprintf@f+1
  2123   0036F2                     
  2124                           ; BSR set to: 1
  2125   0036F2  0E00               	movlw	0
  2126   0036F4  6F32               	movwf	(sprintf@f+4)& (0+255),b
  2127   0036F6  0E00               	movlw	0
  2128   0036F8  6F31               	movwf	(sprintf@f+3)& (0+255),b
  2129   0036FA                     
  2130                           ; BSR set to: 1
  2131   0036FA  0E00               	movlw	0
  2132   0036FC  6F39               	movwf	(sprintf@f+11)& (0+255),b
  2133   0036FE  0E00               	movlw	0
  2134   003700  6F38               	movwf	(sprintf@f+10)& (0+255),b
  2135   003702                     
  2136                           ; BSR set to: 1
  2137   003702  0E2E               	movlw	low sprintf@f
  2138   003704  0100               	movlb	0	; () banked
  2139   003706  6F97               	movwf	vfprintf@fp& (0+255),b
  2140   003708  0E01               	movlw	high sprintf@f
  2141   00370A  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  2142   00370C  C0A0  F099         	movff	sprintf@fmt,vfprintf@fmt
  2143   003710  C0A1  F09A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2144   003714  C0A2  F09B         	movff	sprintf@fmt+2,vfprintf@fmt+2
  2145   003718  0E2C               	movlw	low sprintf@ap
  2146   00371A  6F9C               	movwf	vfprintf@ap& (0+255),b
  2147   00371C  0E01               	movlw	high sprintf@ap
  2148   00371E  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  2149   003720  ECD5  F01A         	call	_vfprintf	;wreg free
  2150   003724  0101               	movlb	1	; () banked
  2151   003726  5131               	movf	(sprintf@f+3)& (0+255),w,b
  2152   003728  0100               	movlb	0	; () banked
  2153   00372A  259E               	addwf	sprintf@s& (0+255),w,b
  2154   00372C  6ED9               	movwf	fsr2l,c
  2155   00372E  0101               	movlb	1	; () banked
  2156   003730  5132               	movf	(sprintf@f+4)& (0+255),w,b
  2157   003732  0100               	movlb	0	; () banked
  2158   003734  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  2159   003736  6EDA               	movwf	fsr2h,c
  2160   003738  6ADF               	clrf	indf2,c
  2161   00373A                     
  2162                           ; BSR set to: 0
  2163   00373A  0012               	return		;funcret
  2164   00373C                     __end_of_sprintf:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _vfprintf *****************
  2168 ;; Defined at:
  2169 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  2172 ;;		 -> sprintf@f(12), 
  2173 ;;  fmt             3   57[BANK0 ] PTR const unsigned char 
  2174 ;;		 -> ROM(65535), STR_4(3), STR_3(3), 
  2175 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2176 ;;		 -> sprintf@ap(2), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  cfmt            3   42[COMRAM] PTR unsigned char 
  2179 ;;		 -> ROM(65535), STR_4(3), STR_3(3), 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2   55[BANK0 ] int 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2189 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;Total ram usage:       10 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 13
  2196 ;; This function calls:
  2197 ;;		_vfpfcnvrt
  2198 ;; This function is called by:
  2199 ;;		_sprintf
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text6
  2204   0035AA                     __ptext6:
  2205                           	callstack 0
  2206   0035AA                     _vfprintf:
  2207                           	callstack 15
  2208   0035AA                     
  2209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2210   0035AA  C099  F02B         	movff	vfprintf@fmt,vfprintf@cfmt
  2211   0035AE  C09A  F02C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2212   0035B2  C09B  F02D         	movff	vfprintf@fmt+2,vfprintf@cfmt+2
  2213   0035B6                     
  2214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1553:     nout = 
      +                          0;
  2215   0035B6  0E00               	movlw	0
  2216   0035B8  0100               	movlb	0	; () banked
  2217   0035BA  6FE2               	movwf	(_nout+1)& (0+255),b
  2218   0035BC  0E00               	movlw	0
  2219   0035BE  6FE1               	movwf	_nout& (0+255),b
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2222   0035C0  EFF5  F01A         	goto	l7622
  2223   0035C4                     l7620:
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1557:         nou
      +                          t +=
  2227   0035C4  C097  F07F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2228   0035C8  C098  F080         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2229   0035CC  0E2B               	movlw	low vfprintf@cfmt
  2230   0035CE  6F81               	movwf	vfpfcnvrt@fmt& (0+255),b
  2231   0035D0  0E00               	movlw	high vfprintf@cfmt
  2232   0035D2  6F82               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2233   0035D4  C09C  F083         	movff	vfprintf@ap,vfpfcnvrt@ap
  2234   0035D8  C09D  F084         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2235   0035DC  EC2F  F008         	call	_vfpfcnvrt	;wreg free
  2236   0035E0  0100               	movlb	0	; () banked
  2237   0035E2  517F               	movf	?_vfpfcnvrt& (0+255),w,b
  2238   0035E4  27E1               	addwf	_nout& (0+255),f,b
  2239   0035E6  5180               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2240   0035E8  23E2               	addwfc	(_nout+1)& (0+255),f,b
  2241   0035EA                     l7622:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2245   0035EA  C02B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2246   0035EE  C02C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2247   0035F2  C02D  FFF8         	movff	vfprintf@cfmt+2,tblptru
  2248   0035F6  0008               	tblrd		*
  2249   0035F8  50F5               	movf	tablat,w,c
  2250   0035FA  0900               	iorlw	0
  2251   0035FC  A4D8               	btfss	status,2,c
  2252   0035FE  EF03  F01B         	goto	u5891
  2253   003602  EF05  F01B         	goto	u5890
  2254   003606                     u5891:
  2255   003606  EFE2  F01A         	goto	l7620
  2256   00360A                     u5890:
  2257   00360A                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2260   00360A  0E00               	movlw	0
  2261   00360C  6F98               	movwf	(?_vfprintf+1)& (0+255),b
  2262   00360E  0E00               	movlw	0
  2263   003610  6F97               	movwf	?_vfprintf& (0+255),b
  2264   003612                     
  2265                           ; BSR set to: 0
  2266   003612  0012               	return		;funcret
  2267   003614                     __end_of_vfprintf:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _vfpfcnvrt *****************
  2271 ;; Defined at:
  2272 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  2275 ;;		 -> sprintf@f(12), 
  2276 ;;  fmt             2   33[BANK0 ] PTR PTR unsigned char 
  2277 ;;		 -> vfprintf@cfmt(3), 
  2278 ;;  ap              2   35[BANK0 ] PTR PTR void 
  2279 ;;		 -> sprintf@ap(2), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  convarg         4   48[BANK0 ] struct .
  2282 ;;  cp              3   52[BANK0 ] PTR unsigned char 
  2283 ;;		 -> ROM(65535), STR_4(3), STR_3(3), 
  2284 ;;  done            2   45[BANK0 ] int 
  2285 ;;  i               2    0        int 
  2286 ;;  c               1   47[BANK0 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2   31[BANK0 ] int 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;Total ram usage:       24 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 12
  2303 ;; This function calls:
  2304 ;;		_dtoa
  2305 ;;		_fputc
  2306 ;;		_otoa
  2307 ;;		_read_prec_or_width
  2308 ;;		_utoa
  2309 ;;		_xtoa
  2310 ;; This function is called by:
  2311 ;;		_vfprintf
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text7
  2316   00105E                     __ptext7:
  2317                           	callstack 0
  2318   00105E                     _vfpfcnvrt:
  2319                           	callstack 15
  2320   00105E                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2322   00105E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323   001062  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324   001066  CFDE F085          	movff	postinc2,??_vfpfcnvrt
  2325   00106A  CFDE F086          	movff	postinc2,??_vfpfcnvrt+1
  2326   00106E  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  2327   001072  C085  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2328   001076  C086  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2329   00107A  C087  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2330   00107E  0008               	tblrd		*
  2331   001080  50F5               	movf	tablat,w,c
  2332   001082  0A25               	xorlw	37
  2333   001084  A4D8               	btfss	status,2,c
  2334   001086  EF47  F008         	goto	u5671
  2335   00108A  EF49  F008         	goto	u5670
  2336   00108E                     u5671:
  2337   00108E  EF37  F00C         	goto	l7518
  2338   001092                     u5670:
  2339   001092                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2341   001092  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2342   001096  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2343   00109A  2ADE               	incf	postinc2,f,c
  2344   00109C  0E00               	movlw	0
  2345   00109E  22DE               	addwfc	postinc2,f,c
  2346   0010A0  22DE               	addwfc	postinc2,f,c
  2347   0010A2                     
  2348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2349   0010A2  0E00               	movlw	0
  2350   0010A4  6E35               	movwf	(_width+1)^0,c
  2351   0010A6  0E00               	movlw	0
  2352   0010A8  6E34               	movwf	_width^0,c
  2353   0010AA  C034  F03C         	movff	_width,_flags
  2354   0010AE                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2356   0010AE  6836               	setf	_prec^0,c
  2357   0010B0  6837               	setf	(_prec+1)^0,c
  2358   0010B2                     
  2359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  2360   0010B2  0E00               	movlw	0
  2361   0010B4  0100               	movlb	0	; () banked
  2362   0010B6  6F8E               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2363   0010B8  0E00               	movlw	0
  2364   0010BA  6F8D               	movwf	vfpfcnvrt@done& (0+255),b
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  2367   0010BC  EFAF  F008         	goto	l7394
  2368   0010C0                     l7368:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1075:            
      +                                   flags |= (1 << 0);
  2372   0010C0  803C               	bsf	_flags^0,0,c
  2373   0010C2                     l7370:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1076:            
      +                                   ++*fmt;
  2377   0010C2  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2378   0010C6  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2379   0010CA  2ADE               	incf	postinc2,f,c
  2380   0010CC  0E00               	movlw	0
  2381   0010CE  22DE               	addwfc	postinc2,f,c
  2382   0010D0  22DE               	addwfc	postinc2,f,c
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1077:            
      +                                   break;
  2385   0010D2  EFAF  F008         	goto	l7394
  2386   0010D6                     l7372:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  2390   0010D6  823C               	bsf	_flags^0,1,c
  2391   0010D8  EF61  F008         	goto	l7370
  2392   0010DC                     l7376:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1087:            
      +                                   flags |= (1 << 2);
  2396   0010DC  843C               	bsf	_flags^0,2,c
  2397   0010DE  EF61  F008         	goto	l7370
  2398   0010E2                     l7380:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1093:            
      +                                   flags |= (1 << 3);
  2402   0010E2  863C               	bsf	_flags^0,3,c
  2403   0010E4  EF61  F008         	goto	l7370
  2404   0010E8                     l7384:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1099:            
      +                                   flags |= (1 << 4);
  2408   0010E8  883C               	bsf	_flags^0,4,c
  2409   0010EA  EF61  F008         	goto	l7370
  2410   0010EE                     l7388:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  2414   0010EE  0E00               	movlw	0
  2415   0010F0  6F8E               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2416   0010F2  0E01               	movlw	1
  2417   0010F4  6F8D               	movwf	vfpfcnvrt@done& (0+255),b
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  2420   0010F6  EFAF  F008         	goto	l7394
  2421   0010FA                     l7392:
  2422                           
  2423                           ; BSR set to: 0
  2424   0010FA  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425   0010FE  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426   001102  CFDE F085          	movff	postinc2,??_vfpfcnvrt
  2427   001106  CFDE F086          	movff	postinc2,??_vfpfcnvrt+1
  2428   00110A  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  2429   00110E  C085  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2430   001112  C086  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2431   001116  C087  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2432   00111A  0008               	tblrd		*
  2433   00111C  50F5               	movf	tablat,w,c
  2434   00111E  6F88               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  2435   001120  6B89               	clrf	(??_vfpfcnvrt+4)& (0+255),b
  2436                           
  2437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 1, Range of values is 0 to 0
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte            4     3 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444   001122  5189               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  2445   001124  0A00               	xorlw	0	; case 0
  2446   001126  B4D8               	btfsc	status,2,c
  2447   001128  EF98  F008         	goto	l8508
  2448   00112C  EF77  F008         	goto	l7388
  2449   001130                     l8508:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ; Switch size 1, requested type "simple"
  2453                           ; Number of cases is 5, Range of values is 32 to 48
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte           16     9 (average)
  2457                           ;	Chosen strategy is simple_byte
  2458   001130  5188               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2459   001132  0A20               	xorlw	32	; case 32
  2460   001134  B4D8               	btfsc	status,2,c
  2461   001136  EF71  F008         	goto	l7380
  2462   00113A  0A03               	xorlw	3	; case 35
  2463   00113C  B4D8               	btfsc	status,2,c
  2464   00113E  EF74  F008         	goto	l7384
  2465   001142  0A08               	xorlw	8	; case 43
  2466   001144  B4D8               	btfsc	status,2,c
  2467   001146  EF6E  F008         	goto	l7376
  2468   00114A  0A06               	xorlw	6	; case 45
  2469   00114C  B4D8               	btfsc	status,2,c
  2470   00114E  EF60  F008         	goto	l7368
  2471   001152  0A1D               	xorlw	29	; case 48
  2472   001154  B4D8               	btfsc	status,2,c
  2473   001156  EF6B  F008         	goto	l7372
  2474   00115A  EF77  F008         	goto	l7388
  2475   00115E                     l7394:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  2479   00115E  518D               	movf	vfpfcnvrt@done& (0+255),w,b
  2480   001160  118E               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2481   001162  B4D8               	btfsc	status,2,c
  2482   001164  EFB6  F008         	goto	u5681
  2483   001168  EFB8  F008         	goto	u5680
  2484   00116C                     u5681:
  2485   00116C  EF7D  F008         	goto	l7392
  2486   001170                     u5680:
  2487   001170                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1109:         if 
      +                          (flags & (1 << 0)) {
  2490   001170  A03C               	btfss	_flags^0,0,c
  2491   001172  EFBD  F008         	goto	u5691
  2492   001176  EFBF  F008         	goto	u5690
  2493   00117A                     u5691:
  2494   00117A  EFC0  F008         	goto	l7398
  2495   00117E                     u5690:
  2496   00117E                     
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1110:            
      +                           flags &= ~(1 << 1);
  2499   00117E  923C               	bcf	_flags^0,1,c
  2500   001180                     l7398:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2504   001180  C081  F020         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2505   001184  C082  F021         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  2506   001188  C083  F022         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2507   00118C  C084  F023         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2508   001190  EC4C  F015         	call	_read_prec_or_width	;wreg free
  2509   001194  C020  F034         	movff	?_read_prec_or_width,_width
  2510   001198  C021  F035         	movff	?_read_prec_or_width+1,_width+1
  2511   00119C                     
  2512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  2513   00119C  BE35               	btfsc	(_width+1)^0,7,c
  2514   00119E  EFD5  F008         	goto	u5700
  2515   0011A2  EFD3  F008         	goto	u5701
  2516   0011A6                     u5701:
  2517   0011A6  EFDA  F008         	goto	l7404
  2518   0011AA                     u5700:
  2519   0011AA                     
  2520                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  2521   0011AA  803C               	bsf	_flags^0,0,c
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  2524   0011AC  6C34               	negf	_width^0,c
  2525   0011AE  1E35               	comf	(_width+1)^0,f,c
  2526   0011B0  B0D8               	btfsc	status,0,c
  2527   0011B2  2A35               	incf	(_width+1)^0,f,c
  2528   0011B4                     l7404:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  2531   0011B4  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2532   0011B8  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2533   0011BC  CFDE F085          	movff	postinc2,??_vfpfcnvrt
  2534   0011C0  CFDE F086          	movff	postinc2,??_vfpfcnvrt+1
  2535   0011C4  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  2536   0011C8  C085  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2537   0011CC  C086  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2538   0011D0  C087  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2539   0011D4  0008               	tblrd		*
  2540   0011D6  50F5               	movf	tablat,w,c
  2541   0011D8  0A2E               	xorlw	46
  2542   0011DA  A4D8               	btfss	status,2,c
  2543   0011DC  EFF2  F008         	goto	u5711
  2544   0011E0  EFF4  F008         	goto	u5710
  2545   0011E4                     u5711:
  2546   0011E4  EF0A  F009         	goto	l7410
  2547   0011E8                     u5710:
  2548   0011E8                     
  2549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  2550   0011E8  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2551   0011EC  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2552   0011F0  2ADE               	incf	postinc2,f,c
  2553   0011F2  0E00               	movlw	0
  2554   0011F4  22DE               	addwfc	postinc2,f,c
  2555   0011F6  22DE               	addwfc	postinc2,f,c
  2556   0011F8                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2558   0011F8  C081  F020         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2559   0011FC  C082  F021         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  2560   001200  C083  F022         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2561   001204  C084  F023         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2562   001208  EC4C  F015         	call	_read_prec_or_width	;wreg free
  2563   00120C  C020  F036         	movff	?_read_prec_or_width,_prec
  2564   001210  C021  F037         	movff	?_read_prec_or_width+1,_prec+1
  2565   001214                     l7410:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2568   001214  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2569   001218  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2570   00121C  CFDE F094          	movff	postinc2,vfpfcnvrt@cp
  2571   001220  CFDE F095          	movff	postinc2,vfpfcnvrt@cp+1
  2572   001224  CFDD F096          	movff	postdec2,vfpfcnvrt@cp+2
  2573   001228                     
  2574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1145:   c = *cp;
  2575   001228  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2576   00122C  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2577   001230  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2578   001234  0008               	tblrd		*
  2579   001236  CFF5 F08F          	movff	tablat,vfpfcnvrt@c
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1146:   switch(c)
      +                           {
  2582   00123A  EF2F  F009         	goto	l7424
  2583   00123E                     l7414:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1161:     cp++;
  2587   00123E  0E01               	movlw	1
  2588   001240  2794               	addwf	vfpfcnvrt@cp& (0+255),f,b
  2589   001242  0E00               	movlw	0
  2590   001244  2395               	addwfc	(vfpfcnvrt@cp+1)& (0+255),f,b
  2591   001246  0E00               	movlw	0
  2592   001248  2396               	addwfc	(vfpfcnvrt@cp+2)& (0+255),f,b
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1168:     break;
  2595   00124A  EF61  F009         	goto	l7426
  2596   00124E                     l1933:
  2597   00124E                     l7418:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1202:     c = 'i'
      +                          ;
  2601   00124E  0E69               	movlw	105
  2602   001250  6F8F               	movwf	vfpfcnvrt@c& (0+255),b
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1203:     break;
  2605   001252  EF61  F009         	goto	l7426
  2606   001256                     l7420:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1205:     c = 0;
  2610   001256  0E00               	movlw	0
  2611   001258  6F8F               	movwf	vfpfcnvrt@c& (0+255),b
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1206:     break;
  2614   00125A  EF61  F009         	goto	l7426
  2615   00125E                     l7424:
  2616   00125E  0100               	movlb	0	; () banked
  2617   001260  518F               	movf	vfpfcnvrt@c& (0+255),w,b
  2618   001262  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  2619   001264  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2620                           
  2621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2622                           ; Switch size 1, requested type "simple"
  2623                           ; Number of cases is 1, Range of values is 0 to 0
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; simple_byte            4     3 (average)
  2627                           ;	Chosen strategy is simple_byte
  2628   001266  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2629   001268  0A00               	xorlw	0	; case 0
  2630   00126A  B4D8               	btfsc	status,2,c
  2631   00126C  EF3A  F009         	goto	l8510
  2632   001270  EF2B  F009         	goto	l7420
  2633   001274                     l8510:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ; Switch size 1, requested type "simple"
  2637                           ; Number of cases is 9, Range of values is 88 to 120
  2638                           ; switch strategies available:
  2639                           ; Name         Instructions Cycles
  2640                           ; simple_byte           28    15 (average)
  2641                           ;	Chosen strategy is simple_byte
  2642   001274  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  2643   001276  0A58               	xorlw	88	; case 88
  2644   001278  B4D8               	btfsc	status,2,c
  2645   00127A  EF27  F009         	goto	l7418
  2646   00127E  0A3C               	xorlw	60	; case 100
  2647   001280  B4D8               	btfsc	status,2,c
  2648   001282  EF27  F009         	goto	l7418
  2649   001286  0A0D               	xorlw	13	; case 105
  2650   001288  B4D8               	btfsc	status,2,c
  2651   00128A  EF27  F009         	goto	l7418
  2652   00128E  0A05               	xorlw	5	; case 108
  2653   001290  B4D8               	btfsc	status,2,c
  2654   001292  EF1F  F009         	goto	l7414
  2655   001296  0A02               	xorlw	2	; case 110
  2656   001298  B4D8               	btfsc	status,2,c
  2657   00129A  EF27  F009         	goto	l7418
  2658   00129E  0A01               	xorlw	1	; case 111
  2659   0012A0  B4D8               	btfsc	status,2,c
  2660   0012A2  EF27  F009         	goto	l1933
  2661   0012A6  0A1B               	xorlw	27	; case 116
  2662   0012A8  B4D8               	btfsc	status,2,c
  2663   0012AA  EF1F  F009         	goto	l7414
  2664   0012AE  0A01               	xorlw	1	; case 117
  2665   0012B0  B4D8               	btfsc	status,2,c
  2666   0012B2  EF27  F009         	goto	l7418
  2667   0012B6  0A0D               	xorlw	13	; case 120
  2668   0012B8  B4D8               	btfsc	status,2,c
  2669   0012BA  EF27  F009         	goto	l7418
  2670   0012BE  EF2B  F009         	goto	l7420
  2671   0012C2                     l7426:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2675   0012C2  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2676   0012C6  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2677   0012CA  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2678   0012CE  0008               	tblrd		*
  2679   0012D0  50F5               	movf	tablat,w,c
  2680   0012D2  0A64               	xorlw	100
  2681   0012D4  B4D8               	btfsc	status,2,c
  2682   0012D6  EF6F  F009         	goto	u5721
  2683   0012DA  EF71  F009         	goto	u5720
  2684   0012DE                     u5721:
  2685   0012DE  EFD3  F009         	goto	l7438
  2686   0012E2                     u5720:
  2687   0012E2                     
  2688                           ; BSR set to: 0
  2689   0012E2  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2690   0012E6  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2691   0012EA  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2692   0012EE  0008               	tblrd		*
  2693   0012F0  50F5               	movf	tablat,w,c
  2694   0012F2  0A69               	xorlw	105
  2695   0012F4  A4D8               	btfss	status,2,c
  2696   0012F6  EF7F  F009         	goto	u5731
  2697   0012FA  EF81  F009         	goto	u5730
  2698   0012FE                     u5731:
  2699   0012FE  EF19  F00A         	goto	l7446
  2700   001302                     u5730:
  2701   001302  EFD3  F009         	goto	l7438
  2702   001306                     l7430:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1217:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2706   001306  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2707   00130A  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2708   00130E  CFDF F085          	movff	indf2,??_vfpfcnvrt
  2709   001312  0E02               	movlw	2
  2710   001314  26DE               	addwf	postinc2,f,c
  2711   001316  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  2712   00131A  0E00               	movlw	0
  2713   00131C  22DD               	addwfc	postdec2,f,c
  2714   00131E  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2715   001322  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2716   001326  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  2717   00132A  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  2718   00132E  0E00               	movlw	0
  2719   001330  BF91               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2720   001332  0EFF               	movlw	-1
  2721   001334  6F92               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2722   001336  6F93               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1218:      break;
  2725   001338  EFEC  F009         	goto	l7440
  2726   00133C                     l7432:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1231:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  2730   00133C  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2731   001340  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2732   001344  CFDF F085          	movff	indf2,??_vfpfcnvrt
  2733   001348  0E04               	movlw	4
  2734   00134A  26DE               	addwf	postinc2,f,c
  2735   00134C  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  2736   001350  0E00               	movlw	0
  2737   001352  22DD               	addwfc	postdec2,f,c
  2738   001354  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2739   001358  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2740   00135C  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  2741   001360  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+1
  2742   001364  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+2
  2743   001368  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+3
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1232:      break;
  2746   00136C  EFEC  F009         	goto	l7440
  2747   001370                     l7434:
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1241:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2751   001370  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2752   001374  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2753   001378  CFDF F085          	movff	indf2,??_vfpfcnvrt
  2754   00137C  0E02               	movlw	2
  2755   00137E  26DE               	addwf	postinc2,f,c
  2756   001380  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  2757   001384  0E00               	movlw	0
  2758   001386  22DD               	addwfc	postdec2,f,c
  2759   001388  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2760   00138C  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2761   001390  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  2762   001394  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  2763   001398  0E00               	movlw	0
  2764   00139A  BF91               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2765   00139C  0EFF               	movlw	-1
  2766   00139E  6F92               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2767   0013A0  6F93               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1242:      break;
  2770   0013A2  EFEC  F009         	goto	l7440
  2771   0013A6                     l7438:
  2772                           
  2773                           ; BSR set to: 0
  2774   0013A6  518F               	movf	vfpfcnvrt@c& (0+255),w,b
  2775   0013A8  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  2776   0013AA  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2777                           
  2778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2779                           ; Switch size 1, requested type "simple"
  2780                           ; Number of cases is 1, Range of values is 0 to 0
  2781                           ; switch strategies available:
  2782                           ; Name         Instructions Cycles
  2783                           ; simple_byte            4     3 (average)
  2784                           ;	Chosen strategy is simple_byte
  2785   0013AC  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2786   0013AE  0A00               	xorlw	0	; case 0
  2787   0013B0  B4D8               	btfsc	status,2,c
  2788   0013B2  EFDD  F009         	goto	l8512
  2789   0013B6  EFEC  F009         	goto	l7440
  2790   0013BA                     l8512:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ; Switch size 1, requested type "simple"
  2794                           ; Number of cases is 3, Range of values is 105 to 116
  2795                           ; switch strategies available:
  2796                           ; Name         Instructions Cycles
  2797                           ; simple_byte           10     6 (average)
  2798                           ;	Chosen strategy is simple_byte
  2799   0013BA  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  2800   0013BC  0A69               	xorlw	105	; case 105
  2801   0013BE  B4D8               	btfsc	status,2,c
  2802   0013C0  EF83  F009         	goto	l7430
  2803   0013C4  0A05               	xorlw	5	; case 108
  2804   0013C6  B4D8               	btfsc	status,2,c
  2805   0013C8  EF9E  F009         	goto	l7432
  2806   0013CC  0A18               	xorlw	24	; case 116
  2807   0013CE  B4D8               	btfsc	status,2,c
  2808   0013D0  EFB8  F009         	goto	l7434
  2809   0013D4  EFEC  F009         	goto	l7440
  2810   0013D8                     l7440:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2814   0013D8  0E01               	movlw	1
  2815   0013DA  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  2816   0013DC  0E00               	movlw	0
  2817   0013DE  6F86               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2818   0013E0  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  2819   0013E2  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2820   0013E4  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2821   0013E6  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2822   0013E8  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2823   0013EA  6F88               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  2824   0013EC  0E00               	movlw	0
  2825   0013EE  BF86               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  2826   0013F0  0EFF               	movlw	255
  2827   0013F2  2196               	addwfc	(vfpfcnvrt@cp+2)& (0+255),w,b
  2828   0013F4  6F89               	movwf	(??_vfpfcnvrt+4)& (0+255),b
  2829   0013F6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2830   0013FA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2831   0013FE  C087  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2832   001402  C088  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2833   001406  C089  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  2834   00140A                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          int) dtoa(fp, convarg.sint);
  2837   00140A  C07F  F06A         	movff	vfpfcnvrt@fp,dtoa@fp
  2838   00140E  C080  F06B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2839   001412  C090  F06C         	movff	vfpfcnvrt@convarg,dtoa@d
  2840   001416  C091  F06D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2841   00141A  C092  F06E         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2842   00141E  C093  F06F         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2843   001422  EC9B  F00D         	call	_dtoa	;wreg free
  2844   001426  C06A  F07F         	movff	?_dtoa,?_vfpfcnvrt
  2845   00142A  C06B  F080         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2846   00142E  EF5B  F00C         	goto	l1946
  2847   001432                     l7446:
  2848                           
  2849                           ; BSR set to: 0
  2850   001432  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2851   001436  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2852   00143A  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2853   00143E  0008               	tblrd		*
  2854   001440  50F5               	movf	tablat,w,c
  2855   001442  0A78               	xorlw	120
  2856   001444  B4D8               	btfsc	status,2,c
  2857   001446  EF27  F00A         	goto	u5741
  2858   00144A  EF29  F00A         	goto	u5740
  2859   00144E                     u5741:
  2860   00144E  EFAC  F00A         	goto	l7462
  2861   001452                     u5740:
  2862   001452                     
  2863                           ; BSR set to: 0
  2864   001452  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2865   001456  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2866   00145A  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2867   00145E  0008               	tblrd		*
  2868   001460  50F5               	movf	tablat,w,c
  2869   001462  0A58               	xorlw	88
  2870   001464  B4D8               	btfsc	status,2,c
  2871   001466  EF37  F00A         	goto	u5751
  2872   00146A  EF39  F00A         	goto	u5750
  2873   00146E                     u5751:
  2874   00146E  EFAC  F00A         	goto	l7462
  2875   001472                     u5750:
  2876   001472                     
  2877                           ; BSR set to: 0
  2878   001472  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2879   001476  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2880   00147A  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2881   00147E  0008               	tblrd		*
  2882   001480  50F5               	movf	tablat,w,c
  2883   001482  0A6F               	xorlw	111
  2884   001484  B4D8               	btfsc	status,2,c
  2885   001486  EF47  F00A         	goto	u5761
  2886   00148A  EF49  F00A         	goto	u5760
  2887   00148E                     u5761:
  2888   00148E  EFAC  F00A         	goto	l7462
  2889   001492                     u5760:
  2890   001492                     
  2891                           ; BSR set to: 0
  2892   001492  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2893   001496  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2894   00149A  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2895   00149E  0008               	tblrd		*
  2896   0014A0  50F5               	movf	tablat,w,c
  2897   0014A2  0A75               	xorlw	117
  2898   0014A4  A4D8               	btfss	status,2,c
  2899   0014A6  EF57  F00A         	goto	u5771
  2900   0014AA  EF59  F00A         	goto	u5770
  2901   0014AE                     u5771:
  2902   0014AE  EF49  F00B         	goto	l7482
  2903   0014B2                     u5770:
  2904   0014B2  EFAC  F00A         	goto	l7462
  2905   0014B6                     l7454:
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1282:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2909   0014B6  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2910   0014BA  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2911   0014BE  CFDF F085          	movff	indf2,??_vfpfcnvrt
  2912   0014C2  0E02               	movlw	2
  2913   0014C4  26DE               	addwf	postinc2,f,c
  2914   0014C6  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  2915   0014CA  0E00               	movlw	0
  2916   0014CC  22DD               	addwfc	postdec2,f,c
  2917   0014CE  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2918   0014D2  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2919   0014D6  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  2920   0014DA  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
  2921   0014DE  C087  F090         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2922   0014E2  C088  F091         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2923   0014E6  6B92               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2924   0014E8  6B93               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1283:      break;
  2927   0014EA  EFC5  F00A         	goto	l7464
  2928   0014EE                     l7456:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1296:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  2932   0014EE  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2933   0014F2  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2934   0014F6  CFDF F085          	movff	indf2,??_vfpfcnvrt
  2935   0014FA  0E04               	movlw	4
  2936   0014FC  26DE               	addwf	postinc2,f,c
  2937   0014FE  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  2938   001502  0E00               	movlw	0
  2939   001504  22DD               	addwfc	postdec2,f,c
  2940   001506  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2941   00150A  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2942   00150E  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  2943   001512  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+1
  2944   001516  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+2
  2945   00151A  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+3
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1297:      break;
  2948   00151E  EFC5  F00A         	goto	l7464
  2949   001522                     l7458:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1306:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  2953   001522  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2954   001526  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2955   00152A  CFDF F085          	movff	indf2,??_vfpfcnvrt
  2956   00152E  0E02               	movlw	2
  2957   001530  26DE               	addwf	postinc2,f,c
  2958   001532  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  2959   001536  0E00               	movlw	0
  2960   001538  22DD               	addwfc	postdec2,f,c
  2961   00153A  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2962   00153E  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2963   001542  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  2964   001546  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  2965   00154A  0E00               	movlw	0
  2966   00154C  BF91               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2967   00154E  0EFF               	movlw	-1
  2968   001550  6F92               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2969   001552  6F93               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1307:      break;
  2972   001554  EFC5  F00A         	goto	l7464
  2973   001558                     l7462:
  2974                           
  2975                           ; BSR set to: 0
  2976   001558  518F               	movf	vfpfcnvrt@c& (0+255),w,b
  2977   00155A  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  2978   00155C  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2979                           
  2980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2981                           ; Switch size 1, requested type "simple"
  2982                           ; Number of cases is 1, Range of values is 0 to 0
  2983                           ; switch strategies available:
  2984                           ; Name         Instructions Cycles
  2985                           ; simple_byte            4     3 (average)
  2986                           ;	Chosen strategy is simple_byte
  2987   00155E  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2988   001560  0A00               	xorlw	0	; case 0
  2989   001562  B4D8               	btfsc	status,2,c
  2990   001564  EFB6  F00A         	goto	l8514
  2991   001568  EFC5  F00A         	goto	l7464
  2992   00156C                     l8514:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ; Switch size 1, requested type "simple"
  2996                           ; Number of cases is 3, Range of values is 105 to 116
  2997                           ; switch strategies available:
  2998                           ; Name         Instructions Cycles
  2999                           ; simple_byte           10     6 (average)
  3000                           ;	Chosen strategy is simple_byte
  3001   00156C  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  3002   00156E  0A69               	xorlw	105	; case 105
  3003   001570  B4D8               	btfsc	status,2,c
  3004   001572  EF5B  F00A         	goto	l7454
  3005   001576  0A05               	xorlw	5	; case 108
  3006   001578  B4D8               	btfsc	status,2,c
  3007   00157A  EF77  F00A         	goto	l7456
  3008   00157E  0A18               	xorlw	24	; case 116
  3009   001580  B4D8               	btfsc	status,2,c
  3010   001582  EF91  F00A         	goto	l7458
  3011   001586  EFC5  F00A         	goto	l7464
  3012   00158A                     l7464:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  3016   00158A  0E01               	movlw	1
  3017   00158C  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  3018   00158E  0E00               	movlw	0
  3019   001590  6F86               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3020   001592  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  3021   001594  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3022   001596  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3023   001598  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3024   00159A  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3025   00159C  6F88               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  3026   00159E  0E00               	movlw	0
  3027   0015A0  BF86               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  3028   0015A2  0EFF               	movlw	255
  3029   0015A4  2196               	addwfc	(vfpfcnvrt@cp+2)& (0+255),w,b
  3030   0015A6  6F89               	movwf	(??_vfpfcnvrt+4)& (0+255),b
  3031   0015A8  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3032   0015AC  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3033   0015B0  C087  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3034   0015B4  C088  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3035   0015B8  C089  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  3038   0015BC  EF25  F00B         	goto	l7480
  3039   0015C0                     l7466:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1327:      return
      +                           (int) otoa(fp, convarg.uint);
  3043   0015C0  C07F  F06A         	movff	vfpfcnvrt@fp,otoa@fp
  3044   0015C4  C080  F06B         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3045   0015C8  C090  F06C         	movff	vfpfcnvrt@convarg,otoa@d
  3046   0015CC  C091  F06D         	movff	vfpfcnvrt@convarg+1,otoa@d+1
  3047   0015D0  C092  F06E         	movff	vfpfcnvrt@convarg+2,otoa@d+2
  3048   0015D4  C093  F06F         	movff	vfpfcnvrt@convarg+3,otoa@d+3
  3049   0015D8  EC8F  F00F         	call	_otoa	;wreg free
  3050   0015DC  C06A  F07F         	movff	?_otoa,?_vfpfcnvrt
  3051   0015E0  C06B  F080         	movff	?_otoa+1,?_vfpfcnvrt+1
  3052   0015E4  EF5B  F00C         	goto	l1946
  3053   0015E8                     l7470:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (int) utoa(fp, convarg.uint);
  3057   0015E8  C07F  F06A         	movff	vfpfcnvrt@fp,utoa@fp
  3058   0015EC  C080  F06B         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3059   0015F0  C090  F06C         	movff	vfpfcnvrt@convarg,utoa@d
  3060   0015F4  C091  F06D         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  3061   0015F8  C092  F06E         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  3062   0015FC  C093  F06F         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  3063   001600  EC19  F011         	call	_utoa	;wreg free
  3064   001604  C06A  F07F         	movff	?_utoa,?_vfpfcnvrt
  3065   001608  C06B  F080         	movff	?_utoa+1,?_vfpfcnvrt+1
  3066   00160C  EF5B  F00C         	goto	l1946
  3067   001610                     l7474:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1340:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  3071   001610  C07F  F06A         	movff	vfpfcnvrt@fp,xtoa@fp
  3072   001614  C080  F06B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3073   001618  C090  F06C         	movff	vfpfcnvrt@convarg,xtoa@d
  3074   00161C  C091  F06D         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  3075   001620  C092  F06E         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  3076   001624  C093  F06F         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  3077   001628  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3078   00162C  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3079   001630  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  3080   001634  0008               	tblrd		*
  3081   001636  CFF5 F070          	movff	tablat,xtoa@x
  3082   00163A  EC5C  F00C         	call	_xtoa	;wreg free
  3083   00163E  C06A  F07F         	movff	?_xtoa,?_vfpfcnvrt
  3084   001642  C06B  F080         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3085   001646  EF5B  F00C         	goto	l1946
  3086   00164A                     l7480:
  3087                           
  3088                           ; BSR set to: 0
  3089   00164A  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3090   00164E  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3091   001652  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  3092   001656  0008               	tblrd		*
  3093   001658  50F5               	movf	tablat,w,c
  3094   00165A  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  3095   00165C  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3096                           
  3097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3098                           ; Switch size 1, requested type "simple"
  3099                           ; Number of cases is 1, Range of values is 0 to 0
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            4     3 (average)
  3103                           ;	Chosen strategy is simple_byte
  3104   00165E  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3105   001660  0A00               	xorlw	0	; case 0
  3106   001662  B4D8               	btfsc	status,2,c
  3107   001664  EF36  F00B         	goto	l8516
  3108   001668  EF49  F00B         	goto	l7482
  3109   00166C                     l8516:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ; Switch size 1, requested type "simple"
  3113                           ; Number of cases is 4, Range of values is 88 to 120
  3114                           ; switch strategies available:
  3115                           ; Name         Instructions Cycles
  3116                           ; simple_byte           13     7 (average)
  3117                           ;	Chosen strategy is simple_byte
  3118   00166C  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  3119   00166E  0A58               	xorlw	88	; case 88
  3120   001670  B4D8               	btfsc	status,2,c
  3121   001672  EF08  F00B         	goto	l7474
  3122   001676  0A37               	xorlw	55	; case 111
  3123   001678  B4D8               	btfsc	status,2,c
  3124   00167A  EFE0  F00A         	goto	l7466
  3125   00167E  0A1A               	xorlw	26	; case 117
  3126   001680  B4D8               	btfsc	status,2,c
  3127   001682  EFF4  F00A         	goto	l7470
  3128   001686  0A0D               	xorlw	13	; case 120
  3129   001688  B4D8               	btfsc	status,2,c
  3130   00168A  EF08  F00B         	goto	l7474
  3131   00168E  EF49  F00B         	goto	l7482
  3132   001692                     l7482:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1348:   if (*cp =
      +                          = 'n') {
  3136   001692  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3137   001696  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3138   00169A  C096  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  3139   00169E  0008               	tblrd		*
  3140   0016A0  50F5               	movf	tablat,w,c
  3141   0016A2  0A6E               	xorlw	110
  3142   0016A4  A4D8               	btfss	status,2,c
  3143   0016A6  EF57  F00B         	goto	u5781
  3144   0016AA  EF59  F00B         	goto	u5780
  3145   0016AE                     u5781:
  3146   0016AE  EFFA  F00B         	goto	l7502
  3147   0016B2                     u5780:
  3148   0016B2  EFC2  F00B         	goto	l7494
  3149   0016B6                     l7486:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1352:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  3153   0016B6  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3154   0016BA  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3155   0016BE  CFDF F085          	movff	indf2,??_vfpfcnvrt
  3156   0016C2  0E02               	movlw	2
  3157   0016C4  26DE               	addwf	postinc2,f,c
  3158   0016C6  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  3159   0016CA  0E00               	movlw	0
  3160   0016CC  22DD               	addwfc	postdec2,f,c
  3161   0016CE  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3162   0016D2  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3163   0016D6  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  3164   0016DA  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
  3165   0016DE  C087  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  3166   0016E2  C088  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  3167   0016E6  C0E1  FFDE         	movff	_nout,postinc2
  3168   0016EA  C0E2  FFDD         	movff	_nout+1,postdec2
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1353:      break;
  3171   0016EE  EFDB  F00B         	goto	l7496
  3172   0016F2                     l7488:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1366:      *(*(lo
      +                          ng* *)__va_arg(*(long* **)ap, (long*)0)) = (long) nout;
  3176   0016F2  C0E1  F085         	movff	_nout,??_vfpfcnvrt
  3177   0016F6  C0E2  F086         	movff	_nout+1,??_vfpfcnvrt+1
  3178   0016FA  0E00               	movlw	0
  3179   0016FC  BF86               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  3180   0016FE  0EFF               	movlw	255
  3181   001700  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3182   001702  6F88               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  3183   001704  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3184   001708  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3185   00170C  CFDF F089          	movff	indf2,??_vfpfcnvrt+4
  3186   001710  0E02               	movlw	2
  3187   001712  26DE               	addwf	postinc2,f,c
  3188   001714  CFDF F08A          	movff	indf2,??_vfpfcnvrt+5
  3189   001718  0E00               	movlw	0
  3190   00171A  22DD               	addwfc	postdec2,f,c
  3191   00171C  C089  FFD9         	movff	??_vfpfcnvrt+4,fsr2l
  3192   001720  C08A  FFDA         	movff	??_vfpfcnvrt+5,fsr2h
  3193   001724  CFDE F08B          	movff	postinc2,??_vfpfcnvrt+6
  3194   001728  CFDD F08C          	movff	postdec2,??_vfpfcnvrt+7
  3195   00172C  C08B  FFD9         	movff	??_vfpfcnvrt+6,fsr2l
  3196   001730  C08C  FFDA         	movff	??_vfpfcnvrt+7,fsr2h
  3197   001734  C085  FFDE         	movff	??_vfpfcnvrt,postinc2
  3198   001738  C086  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  3199   00173C  C087  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3200   001740  C088  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1367:      break;
  3203   001744  EFDB  F00B         	goto	l7496
  3204   001748                     l7490:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1376:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  3208   001748  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3209   00174C  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3210   001750  CFDF F085          	movff	indf2,??_vfpfcnvrt
  3211   001754  0E02               	movlw	2
  3212   001756  26DE               	addwf	postinc2,f,c
  3213   001758  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  3214   00175C  0E00               	movlw	0
  3215   00175E  22DD               	addwfc	postdec2,f,c
  3216   001760  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3217   001764  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3218   001768  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  3219   00176C  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
  3220   001770  C087  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  3221   001774  C088  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  3222   001778  C0E1  FFDE         	movff	_nout,postinc2
  3223   00177C  C0E2  FFDD         	movff	_nout+1,postdec2
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1377:      break;
  3226   001780  EFDB  F00B         	goto	l7496
  3227   001784                     l7494:
  3228                           
  3229                           ; BSR set to: 0
  3230   001784  518F               	movf	vfpfcnvrt@c& (0+255),w,b
  3231   001786  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  3232   001788  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3233                           
  3234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3235                           ; Switch size 1, requested type "simple"
  3236                           ; Number of cases is 1, Range of values is 0 to 0
  3237                           ; switch strategies available:
  3238                           ; Name         Instructions Cycles
  3239                           ; simple_byte            4     3 (average)
  3240                           ;	Chosen strategy is simple_byte
  3241   00178A  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3242   00178C  0A00               	xorlw	0	; case 0
  3243   00178E  B4D8               	btfsc	status,2,c
  3244   001790  EFCC  F00B         	goto	l8518
  3245   001794  EFDB  F00B         	goto	l7496
  3246   001798                     l8518:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ; Switch size 1, requested type "simple"
  3250                           ; Number of cases is 3, Range of values is 105 to 116
  3251                           ; switch strategies available:
  3252                           ; Name         Instructions Cycles
  3253                           ; simple_byte           10     6 (average)
  3254                           ;	Chosen strategy is simple_byte
  3255   001798  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  3256   00179A  0A69               	xorlw	105	; case 105
  3257   00179C  B4D8               	btfsc	status,2,c
  3258   00179E  EF5B  F00B         	goto	l7486
  3259   0017A2  0A05               	xorlw	5	; case 108
  3260   0017A4  B4D8               	btfsc	status,2,c
  3261   0017A6  EF79  F00B         	goto	l7488
  3262   0017AA  0A18               	xorlw	24	; case 116
  3263   0017AC  B4D8               	btfsc	status,2,c
  3264   0017AE  EFA4  F00B         	goto	l7490
  3265   0017B2  EFDB  F00B         	goto	l7496
  3266   0017B6                     l7496:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1393:    *fmt = c
      +                          p+1;
  3270   0017B6  0E01               	movlw	1
  3271   0017B8  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  3272   0017BA  0E00               	movlw	0
  3273   0017BC  6F86               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3274   0017BE  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  3275   0017C0  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3276   0017C2  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3277   0017C4  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3278   0017C6  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3279   0017C8  6F88               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  3280   0017CA  0E00               	movlw	0
  3281   0017CC  BF86               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  3282   0017CE  0EFF               	movlw	255
  3283   0017D0  2196               	addwfc	(vfpfcnvrt@cp+2)& (0+255),w,b
  3284   0017D2  6F89               	movwf	(??_vfpfcnvrt+4)& (0+255),b
  3285   0017D4  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3286   0017D8  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3287   0017DC  C087  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3288   0017E0  C088  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3289   0017E4  C089  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  3290   0017E8                     l7498:
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1394:    return (
      +                          int) 0;
  3294   0017E8  0E00               	movlw	0
  3295   0017EA  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3296   0017EC  0E00               	movlw	0
  3297   0017EE  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
  3298   0017F0  EF5B  F00C         	goto	l1946
  3299   0017F4                     l7502:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1527:         if 
      +                          ((*fmt)[0] == '%') {
  3303   0017F4  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3304   0017F8  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3305   0017FC  CFDE F085          	movff	postinc2,??_vfpfcnvrt
  3306   001800  CFDE F086          	movff	postinc2,??_vfpfcnvrt+1
  3307   001804  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  3308   001808  C085  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3309   00180C  C086  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3310   001810  C087  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  3311   001814  0008               	tblrd		*
  3312   001816  50F5               	movf	tablat,w,c
  3313   001818  0A25               	xorlw	37
  3314   00181A  A4D8               	btfss	status,2,c
  3315   00181C  EF12  F00C         	goto	u5791
  3316   001820  EF14  F00C         	goto	u5790
  3317   001824                     u5791:
  3318   001824  EF2D  F00C         	goto	l7512
  3319   001828                     u5790:
  3320   001828                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1528:            
      +                           ++*fmt;
  3323   001828  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3324   00182C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3325   001830  2ADE               	incf	postinc2,f,c
  3326   001832  0E00               	movlw	0
  3327   001834  22DE               	addwfc	postinc2,f,c
  3328   001836  22DE               	addwfc	postinc2,f,c
  3329   001838                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1529:            
      +                           fputc((int)'%', fp);
  3332   001838  0E00               	movlw	0
  3333   00183A  6E1B               	movwf	(fputc@c+1)^0,c
  3334   00183C  0E25               	movlw	37
  3335   00183E  6E1A               	movwf	fputc@c^0,c
  3336   001840  C07F  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  3337   001844  C080  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3338   001848  ECC1  F015         	call	_fputc	;wreg free
  3339   00184C                     l7508:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1530:            
      +                           return (int) 1;
  3342   00184C  0E00               	movlw	0
  3343   00184E  0100               	movlb	0	; () banked
  3344   001850  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3345   001852  0E01               	movlw	1
  3346   001854  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
  3347   001856  EF5B  F00C         	goto	l1946
  3348   00185A                     l7512:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  3352   00185A  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3353   00185E  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3354   001862  2ADE               	incf	postinc2,f,c
  3355   001864  0E00               	movlw	0
  3356   001866  22DE               	addwfc	postinc2,f,c
  3357   001868  22DE               	addwfc	postinc2,f,c
  3358   00186A  EFF4  F00B         	goto	l7498
  3359   00186E                     l7518:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  3362   00186E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3363   001872  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3364   001876  CFDE F085          	movff	postinc2,??_vfpfcnvrt
  3365   00187A  CFDE F086          	movff	postinc2,??_vfpfcnvrt+1
  3366   00187E  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
  3367   001882  C085  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3368   001886  C086  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3369   00188A  C087  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  3370   00188E  0008               	tblrd		*
  3371   001890  50F5               	movf	tablat,w,c
  3372   001892  6E1A               	movwf	fputc@c^0,c
  3373   001894  6A1B               	clrf	(fputc@c+1)^0,c
  3374   001896  C07F  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  3375   00189A  C080  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3376   00189E  ECC1  F015         	call	_fputc	;wreg free
  3377   0018A2                     
  3378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1541:     ++*fmt;
  3379   0018A2  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380   0018A6  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381   0018AA  2ADE               	incf	postinc2,f,c
  3382   0018AC  0E00               	movlw	0
  3383   0018AE  22DE               	addwfc	postinc2,f,c
  3384   0018B0  22DE               	addwfc	postinc2,f,c
  3385   0018B2  EF26  F00C         	goto	l7508
  3386   0018B6                     l1946:
  3387   0018B6  0012               	return		;funcret
  3388   0018B8                     __end_of_vfpfcnvrt:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function _xtoa *****************
  3392 ;; Defined at:
  3393 ;;		line 952 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  3396 ;;		 -> sprintf@f(12), 
  3397 ;;  d               4   12[BANK0 ] unsigned long 
  3398 ;;  x               1   16[BANK0 ] unsigned char 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  i               2   28[BANK0 ] int 
  3401 ;;  w               2   26[BANK0 ] int 
  3402 ;;  p               2   23[BANK0 ] int 
  3403 ;;  c               1   30[BANK0 ] unsigned char 
  3404 ;;  d_nonzero       1   25[BANK0 ] _Bool 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2   10[BANK0 ] int 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3414 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;Total ram usage:       21 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 11
  3421 ;; This function calls:
  3422 ;;		_isalpha
  3423 ;;		_isupper
  3424 ;;		_pad
  3425 ;;		_toupper
  3426 ;; This function is called by:
  3427 ;;		_vfpfcnvrt
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text8
  3432   0018B8                     __ptext8:
  3433                           	callstack 0
  3434   0018B8                     _xtoa:
  3435                           	callstack 15
  3436   0018B8                     
  3437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 967:     if (!(pr
      +                          ec < 0)) {
  3438   0018B8  BE37               	btfsc	(_prec+1)^0,7,c
  3439   0018BA  EF61  F00C         	goto	u5451
  3440   0018BE  EF63  F00C         	goto	u5450
  3441   0018C2                     u5451:
  3442   0018C2  EF64  F00C         	goto	l7244
  3443   0018C6                     u5450:
  3444   0018C6                     
  3445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 968:         flag
      +                          s &= ~(1 << 1);
  3446   0018C6  923C               	bcf	_flags^0,1,c
  3447   0018C8                     l7244:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 971:     p = (0 <
      +                          = prec) ? prec : 1;
  3450   0018C8  BE37               	btfsc	(_prec+1)^0,7,c
  3451   0018CA  EF6B  F00C         	goto	u5460
  3452   0018CE  EF69  F00C         	goto	u5461
  3453   0018D2                     u5461:
  3454   0018D2  EF72  F00C         	goto	l1879
  3455   0018D6                     u5460:
  3456   0018D6  0E00               	movlw	0
  3457   0018D8  0100               	movlb	0	; () banked
  3458   0018DA  6F78               	movwf	(xtoa@p+1)& (0+255),b
  3459   0018DC  0E01               	movlw	1
  3460   0018DE  6F77               	movwf	xtoa@p& (0+255),b
  3461   0018E0  EF76  F00C         	goto	l1881
  3462   0018E4                     l1879:
  3463   0018E4  C036  F077         	movff	_prec,xtoa@p
  3464   0018E8  C037  F078         	movff	_prec+1,xtoa@p+1
  3465   0018EC                     l1881:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 972:     w = widt
      +                          h;
  3468   0018EC  C034  F07A         	movff	_width,xtoa@w
  3469   0018F0  C035  F07B         	movff	_width+1,xtoa@w+1
  3470   0018F4                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 974:  d_nonzero =
      +                           d != 0;
  3472   0018F4  0100               	movlb	0	; () banked
  3473   0018F6  516C               	movf	xtoa@d& (0+255),w,b
  3474   0018F8  116D               	iorwf	(xtoa@d+1)& (0+255),w,b
  3475   0018FA  116E               	iorwf	(xtoa@d+2)& (0+255),w,b
  3476   0018FC  116F               	iorwf	(xtoa@d+3)& (0+255),w,b
  3477   0018FE  A4D8               	btfss	status,2,c
  3478   001900  EF84  F00C         	goto	u5471
  3479   001904  EF87  F00C         	goto	u5470
  3480   001908                     u5471:
  3481   001908  0E01               	movlw	1
  3482   00190A  EF88  F00C         	goto	u5480
  3483   00190E                     u5470:
  3484   00190E  0E00               	movlw	0
  3485   001910                     u5480:
  3486   001910  6F79               	movwf	xtoa@d_nonzero& (0+255),b
  3487   001912                     
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 975:     if ((fla
      +                          gs & (1 << 4)) && d_nonzero) {
  3490   001912  A83C               	btfss	_flags^0,4,c
  3491   001914  EF8E  F00C         	goto	u5491
  3492   001918  EF90  F00C         	goto	u5490
  3493   00191C                     u5491:
  3494   00191C  EF9C  F00C         	goto	l7256
  3495   001920                     u5490:
  3496   001920                     
  3497                           ; BSR set to: 0
  3498   001920  5179               	movf	xtoa@d_nonzero& (0+255),w,b
  3499   001922  B4D8               	btfsc	status,2,c
  3500   001924  EF96  F00C         	goto	u5501
  3501   001928  EF98  F00C         	goto	u5500
  3502   00192C                     u5501:
  3503   00192C  EF9C  F00C         	goto	l7256
  3504   001930                     u5500:
  3505   001930                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 976:         w -=
      +                           2;
  3508   001930  0EFE               	movlw	254
  3509   001932  277A               	addwf	xtoa@w& (0+255),f,b
  3510   001934  0EFF               	movlw	255
  3511   001936  237B               	addwfc	(xtoa@w+1)& (0+255),f,b
  3512   001938                     l7256:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 981:     i = size
      +                          of(dbuf) - 1;
  3516   001938  0E00               	movlw	0
  3517   00193A  6F7D               	movwf	(xtoa@i+1)& (0+255),b
  3518   00193C  0E1F               	movlw	31
  3519   00193E  6F7C               	movwf	xtoa@i& (0+255),b
  3520   001940                     
  3521                           ; BSR set to: 0
  3522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 982:     dbuf[i] 
      +                          = '\0';
  3523   001940  0E00               	movlw	0
  3524   001942  0101               	movlb	1	; () banked
  3525   001944  6F2B               	movwf	(_dbuf+31)& (0+255),b
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  3528   001946  EF1D  F00D         	goto	l7292
  3529   00194A                     l7260:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 987:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 988:         --i;
  3533   00194A  077C               	decf	xtoa@i& (0+255),f,b
  3534   00194C  A0D8               	btfss	status,0,c
  3535   00194E  077D               	decf	(xtoa@i+1)& (0+255),f,b
  3536   001950                     
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 989:         c = 
      +                          d & 0x0f;
  3539   001950  516C               	movf	xtoa@d& (0+255),w,b
  3540   001952  0B0F               	andlw	15
  3541   001954  6F7E               	movwf	xtoa@c& (0+255),b
  3542   001956                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 991:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3545   001956  0E09               	movlw	9
  3546   001958  657E               	cpfsgt	xtoa@c& (0+255),b
  3547   00195A  EFB1  F00C         	goto	u5511
  3548   00195E  EFB3  F00C         	goto	u5510
  3549   001962                     u5511:
  3550   001962  EFBB  F00C         	goto	l7268
  3551   001966                     u5510:
  3552   001966                     
  3553                           ; BSR set to: 0
  3554   001966  0E57               	movlw	87
  3555   001968  257E               	addwf	xtoa@c& (0+255),w,b
  3556   00196A  6F75               	movwf	_xtoa$2916& (0+255),b
  3557   00196C  6B76               	clrf	(_xtoa$2916+1)& (0+255),b
  3558   00196E  0E00               	movlw	0
  3559   001970  2376               	addwfc	(_xtoa$2916+1)& (0+255),f,b
  3560   001972  EFC1  F00C         	goto	l7270
  3561   001976                     l7268:
  3562                           
  3563                           ; BSR set to: 0
  3564   001976  0E30               	movlw	48
  3565   001978  257E               	addwf	xtoa@c& (0+255),w,b
  3566   00197A  6F75               	movwf	_xtoa$2916& (0+255),b
  3567   00197C  6B76               	clrf	(_xtoa$2916+1)& (0+255),b
  3568   00197E  0E00               	movlw	0
  3569   001980  2376               	addwfc	(_xtoa$2916+1)& (0+255),f,b
  3570   001982                     l7270:
  3571                           
  3572                           ; BSR set to: 0
  3573   001982  C075  F07E         	movff	_xtoa$2916,xtoa@c
  3574   001986                     
  3575                           ; BSR set to: 0
  3576   001986  0EBF               	movlw	191
  3577   001988  2570               	addwf	xtoa@x& (0+255),w,b
  3578   00198A  6F71               	movwf	??_xtoa& (0+255),b
  3579   00198C  6B72               	clrf	(??_xtoa+1)& (0+255),b
  3580   00198E  0EFF               	movlw	255
  3581   001990  2372               	addwfc	(??_xtoa+1)& (0+255),f,b
  3582   001992  5172               	movf	(??_xtoa+1)& (0+255),w,b
  3583   001994  E107               	bnz	u5521
  3584   001996  0E1A               	movlw	26
  3585   001998  5D71               	subwf	??_xtoa& (0+255),w,b
  3586   00199A  B0D8               	btfsc	status,0,c
  3587   00199C  EFD2  F00C         	goto	u5521
  3588   0019A0  EFD4  F00C         	goto	u5520
  3589   0019A4                     u5521:
  3590   0019A4  EFF4  F00C         	goto	l7284
  3591   0019A8                     u5520:
  3592   0019A8                     
  3593                           ; BSR set to: 0
  3594   0019A8  517E               	movf	xtoa@c& (0+255),w,b
  3595   0019AA  6F71               	movwf	??_xtoa& (0+255),b
  3596   0019AC  6B72               	clrf	(??_xtoa+1)& (0+255),b
  3597   0019AE  0E20               	movlw	32
  3598   0019B0  1371               	iorwf	??_xtoa& (0+255),f,b
  3599   0019B2  0E00               	movlw	0
  3600   0019B4  1372               	iorwf	(??_xtoa+1)& (0+255),f,b
  3601   0019B6  0E9F               	movlw	159
  3602   0019B8  2571               	addwf	??_xtoa& (0+255),w,b
  3603   0019BA  6F73               	movwf	(??_xtoa+2)& (0+255),b
  3604   0019BC  0EFF               	movlw	255
  3605   0019BE  2172               	addwfc	(??_xtoa+1)& (0+255),w,b
  3606   0019C0  6F74               	movwf	(??_xtoa+3)& (0+255),b
  3607   0019C2  5174               	movf	(??_xtoa+3)& (0+255),w,b
  3608   0019C4  E107               	bnz	u5531
  3609   0019C6  0E1A               	movlw	26
  3610   0019C8  5D73               	subwf	(??_xtoa+2)& (0+255),w,b
  3611   0019CA  B0D8               	btfsc	status,0,c
  3612   0019CC  EFEA  F00C         	goto	u5531
  3613   0019D0  EFEC  F00C         	goto	u5530
  3614   0019D4                     u5531:
  3615   0019D4  EFF4  F00C         	goto	l7284
  3616   0019D8                     u5530:
  3617   0019D8                     
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 994:             
      +                          c = (char) toupper(c);
  3620   0019D8  C07E  F01E         	movff	xtoa@c,toupper@c
  3621   0019DC  6A1F               	clrf	(toupper@c+1)^0,c
  3622   0019DE  ECB7  F01C         	call	_toupper	;wreg free
  3623   0019E2  501E               	movf	?_toupper^0,w,c
  3624   0019E4  0100               	movlb	0	; () banked
  3625   0019E6  6F7E               	movwf	xtoa@c& (0+255),b
  3626   0019E8                     l7284:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1000:         dbu
      +                          f[i] = (char)c;
  3630   0019E8  0E0C               	movlw	low _dbuf
  3631   0019EA  257C               	addwf	xtoa@i& (0+255),w,b
  3632   0019EC  6ED9               	movwf	fsr2l,c
  3633   0019EE  0E01               	movlw	high _dbuf
  3634   0019F0  217D               	addwfc	(xtoa@i+1)& (0+255),w,b
  3635   0019F2  6EDA               	movwf	fsr2h,c
  3636   0019F4  C07E  FFDF         	movff	xtoa@c,indf2
  3637   0019F8                     
  3638                           ; BSR set to: 0
  3639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1001:         --p
      +                          ;
  3640   0019F8  0777               	decf	xtoa@p& (0+255),f,b
  3641   0019FA  A0D8               	btfss	status,0,c
  3642   0019FC  0778               	decf	(xtoa@p+1)& (0+255),f,b
  3643   0019FE                     
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1002:         --w
      +                          ;
  3646   0019FE  077A               	decf	xtoa@w& (0+255),f,b
  3647   001A00  A0D8               	btfss	status,0,c
  3648   001A02  077B               	decf	(xtoa@w+1)& (0+255),f,b
  3649   001A04                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1003:         d =
      +                           d >> 4;
  3652   001A04  C06C  F071         	movff	xtoa@d,??_xtoa
  3653   001A08  C06D  F072         	movff	xtoa@d+1,??_xtoa+1
  3654   001A0C  C06E  F073         	movff	xtoa@d+2,??_xtoa+2
  3655   001A10  C06F  F074         	movff	xtoa@d+3,??_xtoa+3
  3656   001A14  0E05               	movlw	5
  3657   001A16  EF12  F00D         	goto	u5540
  3658   001A1A                     u5545:
  3659   001A1A  90D8               	bcf	status,0,c
  3660   001A1C  3374               	rrcf	(??_xtoa+3)& (0+255),f,b
  3661   001A1E  3373               	rrcf	(??_xtoa+2)& (0+255),f,b
  3662   001A20  3372               	rrcf	(??_xtoa+1)& (0+255),f,b
  3663   001A22  3371               	rrcf	??_xtoa& (0+255),f,b
  3664   001A24                     u5540:
  3665   001A24  2EE8               	decfsz	wreg,f,c
  3666   001A26  EF0D  F00D         	goto	u5545
  3667   001A2A  C071  F06C         	movff	??_xtoa,xtoa@d
  3668   001A2E  C072  F06D         	movff	??_xtoa+1,xtoa@d+1
  3669   001A32  C073  F06E         	movff	??_xtoa+2,xtoa@d+2
  3670   001A36  C074  F06F         	movff	??_xtoa+3,xtoa@d+3
  3671   001A3A                     l7292:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  3674   001A3A  0100               	movlb	0	; () banked
  3675   001A3C  BF7D               	btfsc	(xtoa@i+1)& (0+255),7,b
  3676   001A3E  EF2A  F00D         	goto	u5551
  3677   001A42  517D               	movf	(xtoa@i+1)& (0+255),w,b
  3678   001A44  E109               	bnz	u5550
  3679   001A46  0E02               	movlw	2
  3680   001A48  5D7C               	subwf	xtoa@i& (0+255),w,b
  3681   001A4A  A0D8               	btfss	status,0,c
  3682   001A4C  EF2A  F00D         	goto	u5551
  3683   001A50  EF2C  F00D         	goto	u5550
  3684   001A54                     u5551:
  3685   001A54  EF58  F00D         	goto	l7302
  3686   001A58                     u5550:
  3687   001A58                     
  3688                           ; BSR set to: 0
  3689   001A58  516C               	movf	xtoa@d& (0+255),w,b
  3690   001A5A  116D               	iorwf	(xtoa@d+1)& (0+255),w,b
  3691   001A5C  116E               	iorwf	(xtoa@d+2)& (0+255),w,b
  3692   001A5E  116F               	iorwf	(xtoa@d+3)& (0+255),w,b
  3693   001A60  A4D8               	btfss	status,2,c
  3694   001A62  EF35  F00D         	goto	u5561
  3695   001A66  EF37  F00D         	goto	u5560
  3696   001A6A                     u5561:
  3697   001A6A  EFA5  F00C         	goto	l7260
  3698   001A6E                     u5560:
  3699   001A6E                     
  3700                           ; BSR set to: 0
  3701   001A6E  BF78               	btfsc	(xtoa@p+1)& (0+255),7,b
  3702   001A70  EF44  F00D         	goto	u5570
  3703   001A74  5178               	movf	(xtoa@p+1)& (0+255),w,b
  3704   001A76  E106               	bnz	u5571
  3705   001A78  0577               	decf	xtoa@p& (0+255),w,b
  3706   001A7A  B0D8               	btfsc	status,0,c
  3707   001A7C  EF42  F00D         	goto	u5571
  3708   001A80  EF44  F00D         	goto	u5570
  3709   001A84                     u5571:
  3710   001A84  EFA5  F00C         	goto	l7260
  3711   001A88                     u5570:
  3712   001A88                     
  3713                           ; BSR set to: 0
  3714   001A88  BF7B               	btfsc	(xtoa@w+1)& (0+255),7,b
  3715   001A8A  EF4F  F00D         	goto	u5581
  3716   001A8E  517B               	movf	(xtoa@w+1)& (0+255),w,b
  3717   001A90  E108               	bnz	u5580
  3718   001A92  057A               	decf	xtoa@w& (0+255),w,b
  3719   001A94  A0D8               	btfss	status,0,c
  3720   001A96  EF4F  F00D         	goto	u5581
  3721   001A9A  EF51  F00D         	goto	u5580
  3722   001A9E                     u5581:
  3723   001A9E  EF58  F00D         	goto	l7302
  3724   001AA2                     u5580:
  3725   001AA2                     
  3726                           ; BSR set to: 0
  3727   001AA2  B23C               	btfsc	_flags^0,1,c
  3728   001AA4  EF56  F00D         	goto	u5591
  3729   001AA8  EF58  F00D         	goto	u5590
  3730   001AAC                     u5591:
  3731   001AAC  EFA5  F00C         	goto	l7260
  3732   001AB0                     u5590:
  3733   001AB0                     l7302:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1008:     if (pre
      +                          c != 0 && (flags & (1 << 4)) && d_nonzero) {
  3737   001AB0  5036               	movf	_prec^0,w,c
  3738   001AB2  1037               	iorwf	(_prec+1)^0,w,c
  3739   001AB4  B4D8               	btfsc	status,2,c
  3740   001AB6  EF5F  F00D         	goto	u5601
  3741   001ABA  EF61  F00D         	goto	u5600
  3742   001ABE                     u5601:
  3743   001ABE  EF86  F00D         	goto	l7314
  3744   001AC2                     u5600:
  3745   001AC2                     
  3746                           ; BSR set to: 0
  3747   001AC2  A83C               	btfss	_flags^0,4,c
  3748   001AC4  EF66  F00D         	goto	u5611
  3749   001AC8  EF68  F00D         	goto	u5610
  3750   001ACC                     u5611:
  3751   001ACC  EF86  F00D         	goto	l7314
  3752   001AD0                     u5610:
  3753   001AD0                     
  3754                           ; BSR set to: 0
  3755   001AD0  5179               	movf	xtoa@d_nonzero& (0+255),w,b
  3756   001AD2  B4D8               	btfsc	status,2,c
  3757   001AD4  EF6E  F00D         	goto	u5621
  3758   001AD8  EF70  F00D         	goto	u5620
  3759   001ADC                     u5621:
  3760   001ADC  EF86  F00D         	goto	l7314
  3761   001AE0                     u5620:
  3762   001AE0                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1009:         --i
      +                          ;
  3765   001AE0  077C               	decf	xtoa@i& (0+255),f,b
  3766   001AE2  A0D8               	btfss	status,0,c
  3767   001AE4  077D               	decf	(xtoa@i+1)& (0+255),f,b
  3768   001AE6                     
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1011:         dbu
      +                          f[i] = x;
  3771   001AE6  0E0C               	movlw	low _dbuf
  3772   001AE8  257C               	addwf	xtoa@i& (0+255),w,b
  3773   001AEA  6ED9               	movwf	fsr2l,c
  3774   001AEC  0E01               	movlw	high _dbuf
  3775   001AEE  217D               	addwfc	(xtoa@i+1)& (0+255),w,b
  3776   001AF0  6EDA               	movwf	fsr2h,c
  3777   001AF2  C070  FFDF         	movff	xtoa@x,indf2
  3778   001AF6                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1017:         --i
      +                          ;
  3781   001AF6  077C               	decf	xtoa@i& (0+255),f,b
  3782   001AF8  A0D8               	btfss	status,0,c
  3783   001AFA  077D               	decf	(xtoa@i+1)& (0+255),f,b
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1018:         dbu
      +                          f[i] = '0';
  3786   001AFC  0E0C               	movlw	low _dbuf
  3787   001AFE  257C               	addwf	xtoa@i& (0+255),w,b
  3788   001B00  6ED9               	movwf	fsr2l,c
  3789   001B02  0E01               	movlw	high _dbuf
  3790   001B04  217D               	addwfc	(xtoa@i+1)& (0+255),w,b
  3791   001B06  6EDA               	movwf	fsr2h,c
  3792   001B08  0E30               	movlw	48
  3793   001B0A  6EDF               	movwf	indf2,c
  3794   001B0C                     l7314:
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1023:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  3798   001B0C  C06A  F060         	movff	xtoa@fp,pad@fp
  3799   001B10  C06B  F061         	movff	xtoa@fp+1,pad@fp+1
  3800   001B14  0E0C               	movlw	low _dbuf
  3801   001B16  257C               	addwf	xtoa@i& (0+255),w,b
  3802   001B18  6F62               	movwf	pad@buf& (0+255),b
  3803   001B1A  0E01               	movlw	high _dbuf
  3804   001B1C  217D               	addwfc	(xtoa@i+1)& (0+255),w,b
  3805   001B1E  6F63               	movwf	(pad@buf+1)& (0+255),b
  3806   001B20  C07A  F064         	movff	xtoa@w,pad@p
  3807   001B24  C07B  F065         	movff	xtoa@w+1,pad@p+1
  3808   001B28  EC26  F016         	call	_pad	;wreg free
  3809   001B2C  C060  F06A         	movff	?_pad,?_xtoa
  3810   001B30  C061  F06B         	movff	?_pad+1,?_xtoa+1
  3811   001B34  0012               	return		;funcret
  3812   001B36                     __end_of_xtoa:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _toupper *****************
  3816 ;; Defined at:
  3817 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\toupper.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  c               2   29[COMRAM] int 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  2   29[COMRAM] int 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;Total ram usage:        4 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 8
  3838 ;; This function calls:
  3839 ;;		_islower
  3840 ;; This function is called by:
  3841 ;;		_xtoa
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text9
  3846   00396E                     __ptext9:
  3847                           	callstack 0
  3848   00396E                     _toupper:
  3849                           	callstack 17
  3850   00396E  0E9F               	movlw	159
  3851   003970  241E               	addwf	toupper@c^0,w,c
  3852   003972  6E20               	movwf	??_toupper^0,c
  3853   003974  0EFF               	movlw	255
  3854   003976  201F               	addwfc	(toupper@c+1)^0,w,c
  3855   003978  6E21               	movwf	(??_toupper+1)^0,c
  3856   00397A  5021               	movf	(??_toupper+1)^0,w,c
  3857   00397C  E107               	bnz	u5061
  3858   00397E  0E1A               	movlw	26
  3859   003980  5C20               	subwf	??_toupper^0,w,c
  3860   003982  B0D8               	btfsc	status,0,c
  3861   003984  EFC6  F01C         	goto	u5061
  3862   003988  EFC8  F01C         	goto	u5060
  3863   00398C                     u5061:
  3864   00398C  EFCE  F01C         	goto	l2026
  3865   003990                     u5060:
  3866   003990  0E5F               	movlw	95
  3867   003992  141E               	andwf	toupper@c^0,w,c
  3868   003994  6E1E               	movwf	?_toupper^0,c
  3869   003996  6A1F               	clrf	(?_toupper+1)^0,c
  3870   003998  EFD2  F01C         	goto	l2029
  3871   00399C                     l2026:
  3872   00399C  C01E  F01E         	movff	toupper@c,?_toupper
  3873   0039A0  C01F  F01F         	movff	toupper@c+1,?_toupper+1
  3874   0039A4                     l2029:
  3875   0039A4  0012               	return		;funcret
  3876   0039A6                     __end_of_toupper:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _islower *****************
  3880 ;; Defined at:
  3881 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\islower.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  c               2   25[COMRAM] int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  2   25[COMRAM] int 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;Total ram usage:        4 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 7
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_toupper
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text10
  3910   003A74                     __ptext10:
  3911                           	callstack 0
  3912   003A74                     _islower:
  3913                           	callstack 17
  3914   003A74  0E9F               	movlw	159
  3915   003A76  241A               	addwf	islower@c^0,w,c
  3916   003A78  6E1C               	movwf	??_islower^0,c
  3917   003A7A  0EFF               	movlw	255
  3918   003A7C  201B               	addwfc	(islower@c+1)^0,w,c
  3919   003A7E  6E1D               	movwf	(??_islower+1)^0,c
  3920   003A80  501D               	movf	(??_islower+1)^0,w,c
  3921   003A82  E10A               	bnz	u4770
  3922   003A84  0E1A               	movlw	26
  3923   003A86  5C1C               	subwf	??_islower^0,w,c
  3924   003A88  A0D8               	btfss	status,0,c
  3925   003A8A  EF49  F01D         	goto	u4771
  3926   003A8E  EF4C  F01D         	goto	u4770
  3927   003A92                     u4771:
  3928   003A92  0E01               	movlw	1
  3929   003A94  EF4D  F01D         	goto	u4780
  3930   003A98                     u4770:
  3931   003A98  0E00               	movlw	0
  3932   003A9A                     u4780:
  3933   003A9A  6E1A               	movwf	?_islower^0,c
  3934   003A9C  6A1B               	clrf	(?_islower+1)^0,c
  3935   003A9E  0012               	return		;funcret
  3936   003AA0                     __end_of_islower:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _isupper *****************
  3940 ;; Defined at:
  3941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isupper.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  c               2   25[COMRAM] int 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2   25[COMRAM] int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        4 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 7
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_xtoa
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text11
  3970   003AA0                     __ptext11:
  3971                           	callstack 0
  3972   003AA0                     _isupper:
  3973                           	callstack 18
  3974   003AA0  0EBF               	movlw	191
  3975   003AA2  241A               	addwf	isupper@c^0,w,c
  3976   003AA4  6E1C               	movwf	??_isupper^0,c
  3977   003AA6  0EFF               	movlw	255
  3978   003AA8  201B               	addwfc	(isupper@c+1)^0,w,c
  3979   003AAA  6E1D               	movwf	(??_isupper+1)^0,c
  3980   003AAC  501D               	movf	(??_isupper+1)^0,w,c
  3981   003AAE  E10A               	bnz	u5020
  3982   003AB0  0E1A               	movlw	26
  3983   003AB2  5C1C               	subwf	??_isupper^0,w,c
  3984   003AB4  A0D8               	btfss	status,0,c
  3985   003AB6  EF5F  F01D         	goto	u5021
  3986   003ABA  EF62  F01D         	goto	u5020
  3987   003ABE                     u5021:
  3988   003ABE  0E01               	movlw	1
  3989   003AC0  EF63  F01D         	goto	u5030
  3990   003AC4                     u5020:
  3991   003AC4  0E00               	movlw	0
  3992   003AC6                     u5030:
  3993   003AC6  6E1A               	movwf	?_isupper^0,c
  3994   003AC8  6A1B               	clrf	(?_isupper+1)^0,c
  3995   003ACA  0012               	return		;funcret
  3996   003ACC                     __end_of_isupper:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function _isalpha *****************
  4000 ;; Defined at:
  4001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isalpha.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  c               2   25[COMRAM] int 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  2   25[COMRAM] int 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;Total ram usage:        6 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 7
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_xtoa
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text12
  4030   0039A6                     __ptext12:
  4031                           	callstack 0
  4032   0039A6                     _isalpha:
  4033                           	callstack 18
  4034   0039A6  0E20               	movlw	32
  4035   0039A8  101A               	iorwf	isalpha@c^0,w,c
  4036   0039AA  6E1C               	movwf	??_isalpha^0,c
  4037   0039AC  0E00               	movlw	0
  4038   0039AE  101B               	iorwf	(isalpha@c+1)^0,w,c
  4039   0039B0  6E1D               	movwf	(??_isalpha+1)^0,c
  4040   0039B2  0E9F               	movlw	159
  4041   0039B4  241C               	addwf	??_isalpha^0,w,c
  4042   0039B6  6E1E               	movwf	(??_isalpha+2)^0,c
  4043   0039B8  0EFF               	movlw	255
  4044   0039BA  201D               	addwfc	(??_isalpha+1)^0,w,c
  4045   0039BC  6E1F               	movwf	(??_isalpha+3)^0,c
  4046   0039BE  501F               	movf	(??_isalpha+3)^0,w,c
  4047   0039C0  E10A               	bnz	u5040
  4048   0039C2  0E1A               	movlw	26
  4049   0039C4  5C1E               	subwf	(??_isalpha+2)^0,w,c
  4050   0039C6  A0D8               	btfss	status,0,c
  4051   0039C8  EFE8  F01C         	goto	u5041
  4052   0039CC  EFEB  F01C         	goto	u5040
  4053   0039D0                     u5041:
  4054   0039D0  0E01               	movlw	1
  4055   0039D2  EFEC  F01C         	goto	u5050
  4056   0039D6                     u5040:
  4057   0039D6  0E00               	movlw	0
  4058   0039D8                     u5050:
  4059   0039D8  6E1A               	movwf	?_isalpha^0,c
  4060   0039DA  6A1B               	clrf	(?_isalpha+1)^0,c
  4061   0039DC  0012               	return		;funcret
  4062   0039DE                     __end_of_isalpha:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _utoa *****************
  4066 ;; Defined at:
  4067 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  4070 ;;		 -> sprintf@f(12), 
  4071 ;;  d               4   12[BANK0 ] unsigned long 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  i               2   20[BANK0 ] int 
  4074 ;;  w               2   18[BANK0 ] int 
  4075 ;;  p               2   16[BANK0 ] int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2   10[BANK0 ] int 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:       12 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 11
  4092 ;; This function calls:
  4093 ;;		___lldiv
  4094 ;;		___llmod
  4095 ;;		_pad
  4096 ;; This function is called by:
  4097 ;;		_vfpfcnvrt
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text13
  4102   002232                     __ptext13:
  4103                           	callstack 0
  4104   002232                     _utoa:
  4105                           	callstack 15
  4106   002232                     
  4107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static int u
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 923:     if (!(prec < 0)) {
  4108   002232  BE37               	btfsc	(_prec+1)^0,7,c
  4109   002234  EF1E  F011         	goto	u5381
  4110   002238  EF20  F011         	goto	u5380
  4111   00223C                     u5381:
  4112   00223C  EF21  F011         	goto	l7206
  4113   002240                     u5380:
  4114   002240                     
  4115                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 924:         flag
      +                          s &= ~(1 << 1);
  4116   002240  923C               	bcf	_flags^0,1,c
  4117   002242                     l7206:
  4118                           
  4119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 927:     p = (0 <
      +                          = prec) ? prec : 1;
  4120   002242  BE37               	btfsc	(_prec+1)^0,7,c
  4121   002244  EF28  F011         	goto	u5390
  4122   002248  EF26  F011         	goto	u5391
  4123   00224C                     u5391:
  4124   00224C  EF2F  F011         	goto	l1864
  4125   002250                     u5390:
  4126   002250  0E00               	movlw	0
  4127   002252  0100               	movlb	0	; () banked
  4128   002254  6F71               	movwf	(utoa@p+1)& (0+255),b
  4129   002256  0E01               	movlw	1
  4130   002258  6F70               	movwf	utoa@p& (0+255),b
  4131   00225A  EF33  F011         	goto	l1866
  4132   00225E                     l1864:
  4133   00225E  C036  F070         	movff	_prec,utoa@p
  4134   002262  C037  F071         	movff	_prec+1,utoa@p+1
  4135   002266                     l1866:
  4136                           
  4137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  4138   002266  C034  F072         	movff	_width,utoa@w
  4139   00226A  C035  F073         	movff	_width+1,utoa@w+1
  4140   00226E                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  4142   00226E  0E00               	movlw	0
  4143   002270  0100               	movlb	0	; () banked
  4144   002272  6F75               	movwf	(utoa@i+1)& (0+255),b
  4145   002274  0E1F               	movlw	31
  4146   002276  6F74               	movwf	utoa@i& (0+255),b
  4147   002278                     
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  4150   002278  0E00               	movlw	0
  4151   00227A  0101               	movlb	1	; () banked
  4152   00227C  6F2B               	movwf	(_dbuf+31)& (0+255),b
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  4155   00227E  EF80  F011         	goto	l7224
  4156   002282                     l7214:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  4160   002282  0774               	decf	utoa@i& (0+255),f,b
  4161   002284  A0D8               	btfss	status,0,c
  4162   002286  0775               	decf	(utoa@i+1)& (0+255),f,b
  4163   002288                     
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  4166   002288  0E0C               	movlw	low _dbuf
  4167   00228A  2574               	addwf	utoa@i& (0+255),w,b
  4168   00228C  6ED9               	movwf	fsr2l,c
  4169   00228E  0E01               	movlw	high _dbuf
  4170   002290  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  4171   002292  6EDA               	movwf	fsr2h,c
  4172   002294  C06C  F01A         	movff	utoa@d,___llmod@dividend
  4173   002298  C06D  F01B         	movff	utoa@d+1,___llmod@dividend+1
  4174   00229C  C06E  F01C         	movff	utoa@d+2,___llmod@dividend+2
  4175   0022A0  C06F  F01D         	movff	utoa@d+3,___llmod@dividend+3
  4176   0022A4  0E0A               	movlw	10
  4177   0022A6  6E1E               	movwf	___llmod@divisor^0,c
  4178   0022A8  0E00               	movlw	0
  4179   0022AA  6E1F               	movwf	(___llmod@divisor+1)^0,c
  4180   0022AC  0E00               	movlw	0
  4181   0022AE  6E20               	movwf	(___llmod@divisor+2)^0,c
  4182   0022B0  0E00               	movlw	0
  4183   0022B2  6E21               	movwf	(___llmod@divisor+3)^0,c
  4184   0022B4  EC6C  F018         	call	___llmod	;wreg free
  4185   0022B8  501A               	movf	?___llmod^0,w,c
  4186   0022BA  0F30               	addlw	48
  4187   0022BC  6EDF               	movwf	indf2,c
  4188   0022BE                     
  4189                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  4190   0022BE  0100               	movlb	0	; () banked
  4191   0022C0  0770               	decf	utoa@p& (0+255),f,b
  4192   0022C2  A0D8               	btfss	status,0,c
  4193   0022C4  0771               	decf	(utoa@p+1)& (0+255),f,b
  4194   0022C6                     
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  4197   0022C6  0772               	decf	utoa@w& (0+255),f,b
  4198   0022C8  A0D8               	btfss	status,0,c
  4199   0022CA  0773               	decf	(utoa@w+1)& (0+255),f,b
  4200   0022CC                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  4203   0022CC  C06C  F01A         	movff	utoa@d,___lldiv@dividend
  4204   0022D0  C06D  F01B         	movff	utoa@d+1,___lldiv@dividend+1
  4205   0022D4  C06E  F01C         	movff	utoa@d+2,___lldiv@dividend+2
  4206   0022D8  C06F  F01D         	movff	utoa@d+3,___lldiv@dividend+3
  4207   0022DC  0E0A               	movlw	10
  4208   0022DE  6E1E               	movwf	___lldiv@divisor^0,c
  4209   0022E0  0E00               	movlw	0
  4210   0022E2  6E1F               	movwf	(___lldiv@divisor+1)^0,c
  4211   0022E4  0E00               	movlw	0
  4212   0022E6  6E20               	movwf	(___lldiv@divisor+2)^0,c
  4213   0022E8  0E00               	movlw	0
  4214   0022EA  6E21               	movwf	(___lldiv@divisor+3)^0,c
  4215   0022EC  EC3F  F017         	call	___lldiv	;wreg free
  4216   0022F0  C01A  F06C         	movff	?___lldiv,utoa@d
  4217   0022F4  C01B  F06D         	movff	?___lldiv+1,utoa@d+1
  4218   0022F8  C01C  F06E         	movff	?___lldiv+2,utoa@d+2
  4219   0022FC  C01D  F06F         	movff	?___lldiv+3,utoa@d+3
  4220   002300                     l7224:
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  4223   002300  0100               	movlb	0	; () banked
  4224   002302  5174               	movf	utoa@i& (0+255),w,b
  4225   002304  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  4226   002306  B4D8               	btfsc	status,2,c
  4227   002308  EF88  F011         	goto	u5401
  4228   00230C  EF8A  F011         	goto	u5400
  4229   002310                     u5401:
  4230   002310  EFB6  F011         	goto	l7234
  4231   002314                     u5400:
  4232   002314                     
  4233                           ; BSR set to: 0
  4234   002314  516C               	movf	utoa@d& (0+255),w,b
  4235   002316  116D               	iorwf	(utoa@d+1)& (0+255),w,b
  4236   002318  116E               	iorwf	(utoa@d+2)& (0+255),w,b
  4237   00231A  116F               	iorwf	(utoa@d+3)& (0+255),w,b
  4238   00231C  A4D8               	btfss	status,2,c
  4239   00231E  EF93  F011         	goto	u5411
  4240   002322  EF95  F011         	goto	u5410
  4241   002326                     u5411:
  4242   002326  EF41  F011         	goto	l7214
  4243   00232A                     u5410:
  4244   00232A                     
  4245                           ; BSR set to: 0
  4246   00232A  BF71               	btfsc	(utoa@p+1)& (0+255),7,b
  4247   00232C  EFA2  F011         	goto	u5420
  4248   002330  5171               	movf	(utoa@p+1)& (0+255),w,b
  4249   002332  E106               	bnz	u5421
  4250   002334  0570               	decf	utoa@p& (0+255),w,b
  4251   002336  B0D8               	btfsc	status,0,c
  4252   002338  EFA0  F011         	goto	u5421
  4253   00233C  EFA2  F011         	goto	u5420
  4254   002340                     u5421:
  4255   002340  EF41  F011         	goto	l7214
  4256   002344                     u5420:
  4257   002344                     
  4258                           ; BSR set to: 0
  4259   002344  BF73               	btfsc	(utoa@w+1)& (0+255),7,b
  4260   002346  EFAD  F011         	goto	u5431
  4261   00234A  5173               	movf	(utoa@w+1)& (0+255),w,b
  4262   00234C  E108               	bnz	u5430
  4263   00234E  0572               	decf	utoa@w& (0+255),w,b
  4264   002350  A0D8               	btfss	status,0,c
  4265   002352  EFAD  F011         	goto	u5431
  4266   002356  EFAF  F011         	goto	u5430
  4267   00235A                     u5431:
  4268   00235A  EFB6  F011         	goto	l7234
  4269   00235E                     u5430:
  4270   00235E                     
  4271                           ; BSR set to: 0
  4272   00235E  B23C               	btfsc	_flags^0,1,c
  4273   002360  EFB4  F011         	goto	u5441
  4274   002364  EFB6  F011         	goto	u5440
  4275   002368                     u5441:
  4276   002368  EF41  F011         	goto	l7214
  4277   00236C                     u5440:
  4278   00236C                     l7234:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          int) pad(fp, &dbuf[i], w);
  4282   00236C  C06A  F060         	movff	utoa@fp,pad@fp
  4283   002370  C06B  F061         	movff	utoa@fp+1,pad@fp+1
  4284   002374  0E0C               	movlw	low _dbuf
  4285   002376  2574               	addwf	utoa@i& (0+255),w,b
  4286   002378  6F62               	movwf	pad@buf& (0+255),b
  4287   00237A  0E01               	movlw	high _dbuf
  4288   00237C  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  4289   00237E  6F63               	movwf	(pad@buf+1)& (0+255),b
  4290   002380  C072  F064         	movff	utoa@w,pad@p
  4291   002384  C073  F065         	movff	utoa@w+1,pad@p+1
  4292   002388  EC26  F016         	call	_pad	;wreg free
  4293   00238C  C060  F06A         	movff	?_pad,?_utoa
  4294   002390  C061  F06B         	movff	?_pad+1,?_utoa+1
  4295   002394  0012               	return		;funcret
  4296   002396                     __end_of_utoa:
  4297                           	callstack 0
  4298                           
  4299 ;; *************** function ___llmod *****************
  4300 ;; Defined at:
  4301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  dividend        4   25[COMRAM] unsigned long 
  4304 ;;  divisor         4   29[COMRAM] unsigned long 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  counter         1   33[COMRAM] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  4   25[COMRAM] unsigned long 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;Total ram usage:        9 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 7
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_utoa
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text14
  4331   0030D8                     __ptext14:
  4332                           	callstack 0
  4333   0030D8                     ___llmod:
  4334                           	callstack 18
  4335   0030D8  501E               	movf	___llmod@divisor^0,w,c
  4336   0030DA  101F               	iorwf	(___llmod@divisor+1)^0,w,c
  4337   0030DC  1020               	iorwf	(___llmod@divisor+2)^0,w,c
  4338   0030DE  1021               	iorwf	(___llmod@divisor+3)^0,w,c
  4339   0030E0  B4D8               	btfsc	status,2,c
  4340   0030E2  EF75  F018         	goto	u4941
  4341   0030E6  EF77  F018         	goto	u4940
  4342   0030EA                     u4941:
  4343   0030EA  EFA7  F018         	goto	l1509
  4344   0030EE                     u4940:
  4345   0030EE  0E01               	movlw	1
  4346   0030F0  6E22               	movwf	___llmod@counter^0,c
  4347   0030F2  EF81  F018         	goto	l7006
  4348   0030F6                     l7004:
  4349   0030F6  90D8               	bcf	status,0,c
  4350   0030F8  361E               	rlcf	___llmod@divisor^0,f,c
  4351   0030FA  361F               	rlcf	(___llmod@divisor+1)^0,f,c
  4352   0030FC  3620               	rlcf	(___llmod@divisor+2)^0,f,c
  4353   0030FE  3621               	rlcf	(___llmod@divisor+3)^0,f,c
  4354   003100  2A22               	incf	___llmod@counter^0,f,c
  4355   003102                     l7006:
  4356   003102  AE21               	btfss	(___llmod@divisor+3)^0,7,c
  4357   003104  EF86  F018         	goto	u4951
  4358   003108  EF88  F018         	goto	u4950
  4359   00310C                     u4951:
  4360   00310C  EF7B  F018         	goto	l7004
  4361   003110                     u4950:
  4362   003110                     l7008:
  4363   003110  501E               	movf	___llmod@divisor^0,w,c
  4364   003112  5C1A               	subwf	___llmod@dividend^0,w,c
  4365   003114  501F               	movf	(___llmod@divisor+1)^0,w,c
  4366   003116  581B               	subwfb	(___llmod@dividend+1)^0,w,c
  4367   003118  5020               	movf	(___llmod@divisor+2)^0,w,c
  4368   00311A  581C               	subwfb	(___llmod@dividend+2)^0,w,c
  4369   00311C  5021               	movf	(___llmod@divisor+3)^0,w,c
  4370   00311E  581D               	subwfb	(___llmod@dividend+3)^0,w,c
  4371   003120  A0D8               	btfss	status,0,c
  4372   003122  EF95  F018         	goto	u4961
  4373   003126  EF97  F018         	goto	u4960
  4374   00312A                     u4961:
  4375   00312A  EF9F  F018         	goto	l7012
  4376   00312E                     u4960:
  4377   00312E  501E               	movf	___llmod@divisor^0,w,c
  4378   003130  5E1A               	subwf	___llmod@dividend^0,f,c
  4379   003132  501F               	movf	(___llmod@divisor+1)^0,w,c
  4380   003134  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
  4381   003136  5020               	movf	(___llmod@divisor+2)^0,w,c
  4382   003138  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
  4383   00313A  5021               	movf	(___llmod@divisor+3)^0,w,c
  4384   00313C  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
  4385   00313E                     l7012:
  4386   00313E  90D8               	bcf	status,0,c
  4387   003140  3221               	rrcf	(___llmod@divisor+3)^0,f,c
  4388   003142  3220               	rrcf	(___llmod@divisor+2)^0,f,c
  4389   003144  321F               	rrcf	(___llmod@divisor+1)^0,f,c
  4390   003146  321E               	rrcf	___llmod@divisor^0,f,c
  4391   003148  2E22               	decfsz	___llmod@counter^0,f,c
  4392   00314A  EF88  F018         	goto	l7008
  4393   00314E                     l1509:
  4394   00314E  C01A  F01A         	movff	___llmod@dividend,?___llmod
  4395   003152  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  4396   003156  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  4397   00315A  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  4398   00315E  0012               	return		;funcret
  4399   003160                     __end_of___llmod:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function ___lldiv *****************
  4403 ;; Defined at:
  4404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  dividend        4   25[COMRAM] unsigned long 
  4407 ;;  divisor         4   29[COMRAM] unsigned long 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  quotient        4   33[COMRAM] unsigned long 
  4410 ;;  counter         1   37[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  4   25[COMRAM] unsigned long 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4420 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;Total ram usage:       13 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 7
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_utoa
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text15
  4435   002E7E                     __ptext15:
  4436                           	callstack 0
  4437   002E7E                     ___lldiv:
  4438                           	callstack 18
  4439   002E7E  0E00               	movlw	0
  4440   002E80  6E22               	movwf	___lldiv@quotient^0,c
  4441   002E82  0E00               	movlw	0
  4442   002E84  6E23               	movwf	(___lldiv@quotient+1)^0,c
  4443   002E86  0E00               	movlw	0
  4444   002E88  6E24               	movwf	(___lldiv@quotient+2)^0,c
  4445   002E8A  0E00               	movlw	0
  4446   002E8C  6E25               	movwf	(___lldiv@quotient+3)^0,c
  4447   002E8E  501E               	movf	___lldiv@divisor^0,w,c
  4448   002E90  101F               	iorwf	(___lldiv@divisor+1)^0,w,c
  4449   002E92  1020               	iorwf	(___lldiv@divisor+2)^0,w,c
  4450   002E94  1021               	iorwf	(___lldiv@divisor+3)^0,w,c
  4451   002E96  B4D8               	btfsc	status,2,c
  4452   002E98  EF50  F017         	goto	u4791
  4453   002E9C  EF52  F017         	goto	u4790
  4454   002EA0                     u4791:
  4455   002EA0  EF88  F017         	goto	l1116
  4456   002EA4                     u4790:
  4457   002EA4  0E01               	movlw	1
  4458   002EA6  6E26               	movwf	___lldiv@counter^0,c
  4459   002EA8  EF5C  F017         	goto	l6906
  4460   002EAC                     l6904:
  4461   002EAC  90D8               	bcf	status,0,c
  4462   002EAE  361E               	rlcf	___lldiv@divisor^0,f,c
  4463   002EB0  361F               	rlcf	(___lldiv@divisor+1)^0,f,c
  4464   002EB2  3620               	rlcf	(___lldiv@divisor+2)^0,f,c
  4465   002EB4  3621               	rlcf	(___lldiv@divisor+3)^0,f,c
  4466   002EB6  2A26               	incf	___lldiv@counter^0,f,c
  4467   002EB8                     l6906:
  4468   002EB8  AE21               	btfss	(___lldiv@divisor+3)^0,7,c
  4469   002EBA  EF61  F017         	goto	u4801
  4470   002EBE  EF63  F017         	goto	u4800
  4471   002EC2                     u4801:
  4472   002EC2  EF56  F017         	goto	l6904
  4473   002EC6                     u4800:
  4474   002EC6                     l6908:
  4475   002EC6  90D8               	bcf	status,0,c
  4476   002EC8  3622               	rlcf	___lldiv@quotient^0,f,c
  4477   002ECA  3623               	rlcf	(___lldiv@quotient+1)^0,f,c
  4478   002ECC  3624               	rlcf	(___lldiv@quotient+2)^0,f,c
  4479   002ECE  3625               	rlcf	(___lldiv@quotient+3)^0,f,c
  4480   002ED0  501E               	movf	___lldiv@divisor^0,w,c
  4481   002ED2  5C1A               	subwf	___lldiv@dividend^0,w,c
  4482   002ED4  501F               	movf	(___lldiv@divisor+1)^0,w,c
  4483   002ED6  581B               	subwfb	(___lldiv@dividend+1)^0,w,c
  4484   002ED8  5020               	movf	(___lldiv@divisor+2)^0,w,c
  4485   002EDA  581C               	subwfb	(___lldiv@dividend+2)^0,w,c
  4486   002EDC  5021               	movf	(___lldiv@divisor+3)^0,w,c
  4487   002EDE  581D               	subwfb	(___lldiv@dividend+3)^0,w,c
  4488   002EE0  A0D8               	btfss	status,0,c
  4489   002EE2  EF75  F017         	goto	u4811
  4490   002EE6  EF77  F017         	goto	u4810
  4491   002EEA                     u4811:
  4492   002EEA  EF80  F017         	goto	l6916
  4493   002EEE                     u4810:
  4494   002EEE  501E               	movf	___lldiv@divisor^0,w,c
  4495   002EF0  5E1A               	subwf	___lldiv@dividend^0,f,c
  4496   002EF2  501F               	movf	(___lldiv@divisor+1)^0,w,c
  4497   002EF4  5A1B               	subwfb	(___lldiv@dividend+1)^0,f,c
  4498   002EF6  5020               	movf	(___lldiv@divisor+2)^0,w,c
  4499   002EF8  5A1C               	subwfb	(___lldiv@dividend+2)^0,f,c
  4500   002EFA  5021               	movf	(___lldiv@divisor+3)^0,w,c
  4501   002EFC  5A1D               	subwfb	(___lldiv@dividend+3)^0,f,c
  4502   002EFE  8022               	bsf	___lldiv@quotient^0,0,c
  4503   002F00                     l6916:
  4504   002F00  90D8               	bcf	status,0,c
  4505   002F02  3221               	rrcf	(___lldiv@divisor+3)^0,f,c
  4506   002F04  3220               	rrcf	(___lldiv@divisor+2)^0,f,c
  4507   002F06  321F               	rrcf	(___lldiv@divisor+1)^0,f,c
  4508   002F08  321E               	rrcf	___lldiv@divisor^0,f,c
  4509   002F0A  2E26               	decfsz	___lldiv@counter^0,f,c
  4510   002F0C  EF63  F017         	goto	l6908
  4511   002F10                     l1116:
  4512   002F10  C022  F01A         	movff	___lldiv@quotient,?___lldiv
  4513   002F14  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
  4514   002F18  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
  4515   002F1C  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
  4516   002F20  0012               	return		;funcret
  4517   002F22                     __end_of___lldiv:
  4518                           	callstack 0
  4519                           
  4520 ;; *************** function _read_prec_or_width *****************
  4521 ;; Defined at:
  4522 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  fmt             2   31[COMRAM] PTR PTR const unsigned c
  4525 ;;		 -> vfprintf@cfmt(3), 
  4526 ;;  ap              2   33[COMRAM] PTR PTR void [1]
  4527 ;;		 -> sprintf@ap(2), 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  c               1   38[COMRAM] unsigned char 
  4530 ;;  n               2   39[COMRAM] int 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2   31[COMRAM] int 
  4533 ;; Registers used:
  4534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;Total ram usage:       10 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 8
  4547 ;; This function calls:
  4548 ;;		___wmul
  4549 ;; This function is called by:
  4550 ;;		_vfpfcnvrt
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text16
  4555   002A98                     __ptext16:
  4556                           	callstack 0
  4557   002A98                     _read_prec_or_width:
  4558                           	callstack 18
  4559   002A98                     
  4560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  4561   002A98  0E00               	movlw	0
  4562   002A9A  6E29               	movwf	(read_prec_or_width@n+1)^0,c
  4563   002A9C  0E00               	movlw	0
  4564   002A9E  6E28               	movwf	read_prec_or_width@n^0,c
  4565   002AA0                     
  4566                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  4567   002AA0  C020  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4568   002AA4  C021  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4569   002AA8  CFDE F024          	movff	postinc2,??_read_prec_or_width
  4570   002AAC  CFDE F025          	movff	postinc2,??_read_prec_or_width+1
  4571   002AB0  CFDE F026          	movff	postinc2,??_read_prec_or_width+2
  4572   002AB4  C024  FFF6         	movff	??_read_prec_or_width,tblptrl
  4573   002AB8  C025  FFF7         	movff	??_read_prec_or_width+1,tblptrh
  4574   002ABC  C026  FFF8         	movff	??_read_prec_or_width+2,tblptru
  4575   002AC0  0008               	tblrd		*
  4576   002AC2  50F5               	movf	tablat,w,c
  4577   002AC4  0A2A               	xorlw	42
  4578   002AC6  A4D8               	btfss	status,2,c
  4579   002AC8  EF68  F015         	goto	u5631
  4580   002ACC  EF6A  F015         	goto	u5630
  4581   002AD0                     u5631:
  4582   002AD0  EFA0  F015         	goto	l7328
  4583   002AD4                     u5630:
  4584   002AD4                     
  4585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  4586   002AD4  C020  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4587   002AD8  C021  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4588   002ADC  2ADE               	incf	postinc2,f,c
  4589   002ADE  0E00               	movlw	0
  4590   002AE0  22DE               	addwfc	postinc2,f,c
  4591   002AE2  22DE               	addwfc	postinc2,f,c
  4592                           
  4593                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4594   002AE4  C022  FFD9         	movff	read_prec_or_width@ap,fsr2l
  4595   002AE8  C023  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  4596   002AEC  CFDF F024          	movff	indf2,??_read_prec_or_width
  4597   002AF0  0E02               	movlw	2
  4598   002AF2  26DE               	addwf	postinc2,f,c
  4599   002AF4  CFDF F025          	movff	indf2,??_read_prec_or_width+1
  4600   002AF8  0E00               	movlw	0
  4601   002AFA  22DD               	addwfc	postdec2,f,c
  4602   002AFC  C024  FFD9         	movff	??_read_prec_or_width,fsr2l
  4603   002B00  C025  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  4604   002B04  CFDE F028          	movff	postinc2,read_prec_or_width@n
  4605   002B08  CFDD F029          	movff	postdec2,read_prec_or_width@n+1
  4606                           
  4607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  4608   002B0C  EFBC  F015         	goto	l1904
  4609   002B10                     l7324:
  4610                           
  4611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  4612   002B10  C028  F01A         	movff	read_prec_or_width@n,___wmul@multiplier
  4613   002B14  C029  F01B         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  4614   002B18  0E00               	movlw	0
  4615   002B1A  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  4616   002B1C  0E0A               	movlw	10
  4617   002B1E  6E1C               	movwf	___wmul@multiplicand^0,c
  4618   002B20  ECD4  F01D         	call	___wmul	;wreg free
  4619   002B24  5027               	movf	read_prec_or_width@c^0,w,c
  4620   002B26  241A               	addwf	?___wmul^0,w,c
  4621   002B28  6E28               	movwf	read_prec_or_width@n^0,c
  4622   002B2A  0E00               	movlw	0
  4623   002B2C  201B               	addwfc	(?___wmul+1)^0,w,c
  4624   002B2E  6E29               	movwf	(read_prec_or_width@n+1)^0,c
  4625   002B30                     
  4626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  4627   002B30  C020  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4628   002B34  C021  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4629   002B38  2ADE               	incf	postinc2,f,c
  4630   002B3A  0E00               	movlw	0
  4631   002B3C  22DE               	addwfc	postinc2,f,c
  4632   002B3E  22DE               	addwfc	postinc2,f,c
  4633   002B40                     l7328:
  4634                           
  4635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4636   002B40  C020  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4637   002B44  C021  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4638   002B48  CFDE F024          	movff	postinc2,??_read_prec_or_width
  4639   002B4C  CFDE F025          	movff	postinc2,??_read_prec_or_width+1
  4640   002B50  CFDE F026          	movff	postinc2,??_read_prec_or_width+2
  4641   002B54  C024  FFF6         	movff	??_read_prec_or_width,tblptrl
  4642   002B58  C025  FFF7         	movff	??_read_prec_or_width+1,tblptrh
  4643   002B5C  C026  FFF8         	movff	??_read_prec_or_width+2,tblptru
  4644   002B60  0008               	tblrd		*
  4645   002B62  50F5               	movf	tablat,w,c
  4646   002B64  0FD0               	addlw	208
  4647   002B66  6E27               	movwf	read_prec_or_width@c^0,c
  4648   002B68  0E09               	movlw	9
  4649   002B6A  6427               	cpfsgt	read_prec_or_width@c^0,c
  4650   002B6C  EFBA  F015         	goto	u5641
  4651   002B70  EFBC  F015         	goto	u5640
  4652   002B74                     u5641:
  4653   002B74  EF88  F015         	goto	l7324
  4654   002B78                     u5640:
  4655   002B78                     l1904:
  4656                           
  4657                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  4658   002B78  C028  F020         	movff	read_prec_or_width@n,?_read_prec_or_width
  4659   002B7C  C029  F021         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4660   002B80  0012               	return		;funcret
  4661   002B82                     __end_of_read_prec_or_width:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function ___wmul *****************
  4665 ;; Defined at:
  4666 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  multiplier      2   25[COMRAM] unsigned int 
  4669 ;;  multiplicand    2   27[COMRAM] unsigned int 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  product         2   29[COMRAM] unsigned int 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2   25[COMRAM] unsigned int 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, prodl, prodh
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        6 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 7
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_read_prec_or_width
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text17
  4696   003BA8                     __ptext17:
  4697                           	callstack 0
  4698   003BA8                     ___wmul:
  4699                           	callstack 18
  4700   003BA8  501A               	movf	___wmul@multiplier^0,w,c
  4701   003BAA  021C               	mulwf	___wmul@multiplicand^0,c
  4702   003BAC  CFF3 F01E          	movff	prodl,___wmul@product
  4703   003BB0  CFF4 F01F          	movff	prodh,___wmul@product+1
  4704   003BB4  501A               	movf	___wmul@multiplier^0,w,c
  4705   003BB6  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  4706   003BB8  50F3               	movf	243,w,c
  4707   003BBA  261F               	addwf	(___wmul@product+1)^0,f,c
  4708   003BBC  501B               	movf	(___wmul@multiplier+1)^0,w,c
  4709   003BBE  021C               	mulwf	___wmul@multiplicand^0,c
  4710   003BC0  50F3               	movf	243,w,c
  4711   003BC2  261F               	addwf	(___wmul@product+1)^0,f,c
  4712   003BC4  C01E  F01A         	movff	___wmul@product,?___wmul
  4713   003BC8  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  4714   003BCC  0012               	return		;funcret
  4715   003BCE                     __end_of___wmul:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _otoa *****************
  4719 ;; Defined at:
  4720 ;;		line 816 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  4723 ;;		 -> sprintf@f(12), 
  4724 ;;  d               4   12[BANK0 ] unsigned long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  i               2   25[BANK0 ] int 
  4727 ;;  w               2   23[BANK0 ] int 
  4728 ;;  p               2   20[BANK0 ] int 
  4729 ;;  t               1   22[BANK0 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2   10[BANK0 ] int 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4739 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;Total ram usage:       17 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 11
  4746 ;; This function calls:
  4747 ;;		_pad
  4748 ;; This function is called by:
  4749 ;;		_vfpfcnvrt
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text18
  4754   001F1E                     __ptext18:
  4755                           	callstack 0
  4756   001F1E                     _otoa:
  4757                           	callstack 15
  4758   001F1E                     
  4759                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 816: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 817: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          818:  char t;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 819:
      +                               int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          823:     if (!(prec < 0)) {
  4760   001F1E  BE37               	btfsc	(_prec+1)^0,7,c
  4761   001F20  EF94  F00F         	goto	u5271
  4762   001F24  EF96  F00F         	goto	u5270
  4763   001F28                     u5271:
  4764   001F28  EF97  F00F         	goto	l7156
  4765   001F2C                     u5270:
  4766   001F2C                     
  4767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 824:         flag
      +                          s &= ~(1 << 1);
  4768   001F2C  923C               	bcf	_flags^0,1,c
  4769   001F2E                     l7156:
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 827:     p = (0 <
      +                          = prec) ? prec : 1;
  4772   001F2E  BE37               	btfsc	(_prec+1)^0,7,c
  4773   001F30  EF9E  F00F         	goto	u5280
  4774   001F34  EF9C  F00F         	goto	u5281
  4775   001F38                     u5281:
  4776   001F38  EFA5  F00F         	goto	l1846
  4777   001F3C                     u5280:
  4778   001F3C  0E00               	movlw	0
  4779   001F3E  0100               	movlb	0	; () banked
  4780   001F40  6F75               	movwf	(otoa@p+1)& (0+255),b
  4781   001F42  0E01               	movlw	1
  4782   001F44  6F74               	movwf	otoa@p& (0+255),b
  4783   001F46  EFA9  F00F         	goto	l1848
  4784   001F4A                     l1846:
  4785   001F4A  C036  F074         	movff	_prec,otoa@p
  4786   001F4E  C037  F075         	movff	_prec+1,otoa@p+1
  4787   001F52                     l1848:
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 828:     w = widt
      +                          h;
  4790   001F52  C034  F077         	movff	_width,otoa@w
  4791   001F56  C035  F078         	movff	_width+1,otoa@w+1
  4792   001F5A                     
  4793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 831:     i = size
      +                          of(dbuf) - 1;
  4794   001F5A  0E00               	movlw	0
  4795   001F5C  0100               	movlb	0	; () banked
  4796   001F5E  6F7A               	movwf	(otoa@i+1)& (0+255),b
  4797   001F60  0E1F               	movlw	31
  4798   001F62  6F79               	movwf	otoa@i& (0+255),b
  4799   001F64                     
  4800                           ; BSR set to: 0
  4801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 832:     dbuf[i] 
      +                          = '\0';
  4802   001F64  0E00               	movlw	0
  4803   001F66  0101               	movlb	1	; () banked
  4804   001F68  6F2B               	movwf	(_dbuf+31)& (0+255),b
  4805   001F6A                     
  4806                           ; BSR set to: 1
  4807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 833:     t = 0;
  4808   001F6A  0E00               	movlw	0
  4809   001F6C  0100               	movlb	0	; () banked
  4810   001F6E  6F76               	movwf	otoa@t& (0+255),b
  4811                           
  4812                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 834:     while (!
      +                          (i < 1) && (d || (0 < p)
  4813   001F70  EFEA  F00F         	goto	l7178
  4814   001F74                     l7166:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 838:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 839:         --i;
  4818   001F74  0779               	decf	otoa@i& (0+255),f,b
  4819   001F76  A0D8               	btfss	status,0,c
  4820   001F78  077A               	decf	(otoa@i+1)& (0+255),f,b
  4821   001F7A                     
  4822                           ; BSR set to: 0
  4823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 840:         t = 
      +                          d & 07;
  4824   001F7A  516C               	movf	otoa@d& (0+255),w,b
  4825   001F7C  0B07               	andlw	7
  4826   001F7E  6F76               	movwf	otoa@t& (0+255),b
  4827   001F80                     
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 841:         dbuf
      +                          [i] = (char)((int)'0' + t);
  4830   001F80  0E0C               	movlw	low _dbuf
  4831   001F82  2579               	addwf	otoa@i& (0+255),w,b
  4832   001F84  6ED9               	movwf	fsr2l,c
  4833   001F86  0E01               	movlw	high _dbuf
  4834   001F88  217A               	addwfc	(otoa@i+1)& (0+255),w,b
  4835   001F8A  6EDA               	movwf	fsr2h,c
  4836   001F8C  5176               	movf	otoa@t& (0+255),w,b
  4837   001F8E  0F30               	addlw	48
  4838   001F90  6EDF               	movwf	indf2,c
  4839   001F92                     
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 842:         --p;
  4842   001F92  0774               	decf	otoa@p& (0+255),f,b
  4843   001F94  A0D8               	btfss	status,0,c
  4844   001F96  0775               	decf	(otoa@p+1)& (0+255),f,b
  4845   001F98                     
  4846                           ; BSR set to: 0
  4847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 843:         --w;
  4848   001F98  0777               	decf	otoa@w& (0+255),f,b
  4849   001F9A  A0D8               	btfss	status,0,c
  4850   001F9C  0778               	decf	(otoa@w+1)& (0+255),f,b
  4851   001F9E                     
  4852                           ; BSR set to: 0
  4853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 844:         d = 
      +                          d >> 3;
  4854   001F9E  C06C  F070         	movff	otoa@d,??_otoa
  4855   001FA2  C06D  F071         	movff	otoa@d+1,??_otoa+1
  4856   001FA6  C06E  F072         	movff	otoa@d+2,??_otoa+2
  4857   001FAA  C06F  F073         	movff	otoa@d+3,??_otoa+3
  4858   001FAE  0E04               	movlw	4
  4859   001FB0  EFDF  F00F         	goto	u5290
  4860   001FB4                     u5295:
  4861   001FB4  90D8               	bcf	status,0,c
  4862   001FB6  3373               	rrcf	(??_otoa+3)& (0+255),f,b
  4863   001FB8  3372               	rrcf	(??_otoa+2)& (0+255),f,b
  4864   001FBA  3371               	rrcf	(??_otoa+1)& (0+255),f,b
  4865   001FBC  3370               	rrcf	??_otoa& (0+255),f,b
  4866   001FBE                     u5290:
  4867   001FBE  2EE8               	decfsz	wreg,f,c
  4868   001FC0  EFDA  F00F         	goto	u5295
  4869   001FC4  C070  F06C         	movff	??_otoa,otoa@d
  4870   001FC8  C071  F06D         	movff	??_otoa+1,otoa@d+1
  4871   001FCC  C072  F06E         	movff	??_otoa+2,otoa@d+2
  4872   001FD0  C073  F06F         	movff	??_otoa+3,otoa@d+3
  4873   001FD4                     l7178:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 834:     while (!
      +                          (i < 1) && (d || (0 < p)
  4877   001FD4  BF7A               	btfsc	(otoa@i+1)& (0+255),7,b
  4878   001FD6  EFF5  F00F         	goto	u5301
  4879   001FDA  517A               	movf	(otoa@i+1)& (0+255),w,b
  4880   001FDC  E108               	bnz	u5300
  4881   001FDE  0579               	decf	otoa@i& (0+255),w,b
  4882   001FE0  A0D8               	btfss	status,0,c
  4883   001FE2  EFF5  F00F         	goto	u5301
  4884   001FE6  EFF7  F00F         	goto	u5300
  4885   001FEA                     u5301:
  4886   001FEA  EF23  F010         	goto	l7188
  4887   001FEE                     u5300:
  4888   001FEE                     
  4889                           ; BSR set to: 0
  4890   001FEE  516C               	movf	otoa@d& (0+255),w,b
  4891   001FF0  116D               	iorwf	(otoa@d+1)& (0+255),w,b
  4892   001FF2  116E               	iorwf	(otoa@d+2)& (0+255),w,b
  4893   001FF4  116F               	iorwf	(otoa@d+3)& (0+255),w,b
  4894   001FF6  A4D8               	btfss	status,2,c
  4895   001FF8  EF00  F010         	goto	u5311
  4896   001FFC  EF02  F010         	goto	u5310
  4897   002000                     u5311:
  4898   002000  EFBA  F00F         	goto	l7166
  4899   002004                     u5310:
  4900   002004                     
  4901                           ; BSR set to: 0
  4902   002004  BF75               	btfsc	(otoa@p+1)& (0+255),7,b
  4903   002006  EF0F  F010         	goto	u5320
  4904   00200A  5175               	movf	(otoa@p+1)& (0+255),w,b
  4905   00200C  E106               	bnz	u5321
  4906   00200E  0574               	decf	otoa@p& (0+255),w,b
  4907   002010  B0D8               	btfsc	status,0,c
  4908   002012  EF0D  F010         	goto	u5321
  4909   002016  EF0F  F010         	goto	u5320
  4910   00201A                     u5321:
  4911   00201A  EFBA  F00F         	goto	l7166
  4912   00201E                     u5320:
  4913   00201E                     
  4914                           ; BSR set to: 0
  4915   00201E  BF78               	btfsc	(otoa@w+1)& (0+255),7,b
  4916   002020  EF1A  F010         	goto	u5331
  4917   002024  5178               	movf	(otoa@w+1)& (0+255),w,b
  4918   002026  E108               	bnz	u5330
  4919   002028  0577               	decf	otoa@w& (0+255),w,b
  4920   00202A  A0D8               	btfss	status,0,c
  4921   00202C  EF1A  F010         	goto	u5331
  4922   002030  EF1C  F010         	goto	u5330
  4923   002034                     u5331:
  4924   002034  EF23  F010         	goto	l7188
  4925   002038                     u5330:
  4926   002038                     
  4927                           ; BSR set to: 0
  4928   002038  B23C               	btfsc	_flags^0,1,c
  4929   00203A  EF21  F010         	goto	u5341
  4930   00203E  EF23  F010         	goto	u5340
  4931   002042                     u5341:
  4932   002042  EFBA  F00F         	goto	l7166
  4933   002046                     u5340:
  4934   002046                     l7188:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 849:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
  4938   002046  5176               	movf	otoa@t& (0+255),w,b
  4939   002048  A4D8               	btfss	status,2,c
  4940   00204A  EF29  F010         	goto	u5351
  4941   00204E  EF2B  F010         	goto	u5350
  4942   002052                     u5351:
  4943   002052  EF34  F010         	goto	l1858
  4944   002056                     u5350:
  4945   002056                     
  4946                           ; BSR set to: 0
  4947   002056  5036               	movf	_prec^0,w,c
  4948   002058  1037               	iorwf	(_prec+1)^0,w,c
  4949   00205A  A4D8               	btfss	status,2,c
  4950   00205C  EF32  F010         	goto	u5361
  4951   002060  EF34  F010         	goto	u5360
  4952   002064                     u5361:
  4953   002064  EF49  F010         	goto	l7198
  4954   002068                     u5360:
  4955   002068                     l1858:
  4956                           
  4957                           ; BSR set to: 0
  4958   002068  A83C               	btfss	_flags^0,4,c
  4959   00206A  EF39  F010         	goto	u5371
  4960   00206E  EF3B  F010         	goto	u5370
  4961   002072                     u5371:
  4962   002072  EF49  F010         	goto	l7198
  4963   002076                     u5370:
  4964   002076                     
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 850:         --i;
  4967   002076  0779               	decf	otoa@i& (0+255),f,b
  4968   002078  A0D8               	btfss	status,0,c
  4969   00207A  077A               	decf	(otoa@i+1)& (0+255),f,b
  4970   00207C                     
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 851:         dbuf
      +                          [i] = '0';
  4973   00207C  0E0C               	movlw	low _dbuf
  4974   00207E  2579               	addwf	otoa@i& (0+255),w,b
  4975   002080  6ED9               	movwf	fsr2l,c
  4976   002082  0E01               	movlw	high _dbuf
  4977   002084  217A               	addwfc	(otoa@i+1)& (0+255),w,b
  4978   002086  6EDA               	movwf	fsr2h,c
  4979   002088  0E30               	movlw	48
  4980   00208A  6EDF               	movwf	indf2,c
  4981   00208C                     
  4982                           ; BSR set to: 0
  4983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 852:         --w;
  4984   00208C  0777               	decf	otoa@w& (0+255),f,b
  4985   00208E  A0D8               	btfss	status,0,c
  4986   002090  0778               	decf	(otoa@w+1)& (0+255),f,b
  4987   002092                     l7198:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 857:     return (
      +                          int) pad(fp, &dbuf[i], w);
  4991   002092  C06A  F060         	movff	otoa@fp,pad@fp
  4992   002096  C06B  F061         	movff	otoa@fp+1,pad@fp+1
  4993   00209A  0E0C               	movlw	low _dbuf
  4994   00209C  2579               	addwf	otoa@i& (0+255),w,b
  4995   00209E  6F62               	movwf	pad@buf& (0+255),b
  4996   0020A0  0E01               	movlw	high _dbuf
  4997   0020A2  217A               	addwfc	(otoa@i+1)& (0+255),w,b
  4998   0020A4  6F63               	movwf	(pad@buf+1)& (0+255),b
  4999   0020A6  C077  F064         	movff	otoa@w,pad@p
  5000   0020AA  C078  F065         	movff	otoa@w+1,pad@p+1
  5001   0020AE  EC26  F016         	call	_pad	;wreg free
  5002   0020B2  C060  F06A         	movff	?_pad,?_otoa
  5003   0020B6  C061  F06B         	movff	?_pad+1,?_otoa+1
  5004   0020BA  0012               	return		;funcret
  5005   0020BC                     __end_of_otoa:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function _dtoa *****************
  5009 ;; Defined at:
  5010 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  5013 ;;		 -> sprintf@f(12), 
  5014 ;;  d               4   12[BANK0 ] long 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  i               2   22[BANK0 ] int 
  5017 ;;  w               2   20[BANK0 ] int 
  5018 ;;  p               2   18[BANK0 ] int 
  5019 ;;  s               1   24[BANK0 ] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  2   10[BANK0 ] int 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5029 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;Total ram usage:       15 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 11
  5036 ;; This function calls:
  5037 ;;		___aldiv
  5038 ;;		___almod
  5039 ;;		_abs
  5040 ;;		_pad
  5041 ;; This function is called by:
  5042 ;;		_vfpfcnvrt
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text19
  5047   001B36                     __ptext19:
  5048                           	callstack 0
  5049   001B36                     _dtoa:
  5050                           	callstack 15
  5051   001B36                     
  5052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473:
      +                               int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 
      +                          476:     s = d < 0 ? 1 : 0;
  5053   001B36  0100               	movlb	0	; () banked
  5054   001B38  BF6F               	btfsc	(dtoa@d+3)& (0+255),7,b
  5055   001B3A  EFA1  F00D         	goto	u5121
  5056   001B3E  EFA4  F00D         	goto	u5120
  5057   001B42                     u5121:
  5058   001B42  0E01               	movlw	1
  5059   001B44  EFA5  F00D         	goto	u5130
  5060   001B48                     u5120:
  5061   001B48  0E00               	movlw	0
  5062   001B4A                     u5130:
  5063   001B4A  6F78               	movwf	dtoa@s& (0+255),b
  5064   001B4C                     
  5065                           ; BSR set to: 0
  5066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  5067   001B4C  5178               	movf	dtoa@s& (0+255),w,b
  5068   001B4E  B4D8               	btfsc	status,2,c
  5069   001B50  EFAC  F00D         	goto	u5141
  5070   001B54  EFAE  F00D         	goto	u5140
  5071   001B58                     u5141:
  5072   001B58  EFB6  F00D         	goto	l7092
  5073   001B5C                     u5140:
  5074   001B5C                     
  5075                           ; BSR set to: 0
  5076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  5077   001B5C  1F6F               	comf	(dtoa@d+3)& (0+255),f,b
  5078   001B5E  1F6E               	comf	(dtoa@d+2)& (0+255),f,b
  5079   001B60  1F6D               	comf	(dtoa@d+1)& (0+255),f,b
  5080   001B62  6D6C               	negf	dtoa@d& (0+255),b
  5081   001B64  0E00               	movlw	0
  5082   001B66  236D               	addwfc	(dtoa@d+1)& (0+255),f,b
  5083   001B68  236E               	addwfc	(dtoa@d+2)& (0+255),f,b
  5084   001B6A  236F               	addwfc	(dtoa@d+3)& (0+255),f,b
  5085   001B6C                     l7092:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  5089   001B6C  BE37               	btfsc	(_prec+1)^0,7,c
  5090   001B6E  EFBB  F00D         	goto	u5151
  5091   001B72  EFBD  F00D         	goto	u5150
  5092   001B76                     u5151:
  5093   001B76  EFBE  F00D         	goto	l7096
  5094   001B7A                     u5150:
  5095   001B7A                     
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  5098   001B7A  923C               	bcf	_flags^0,1,c
  5099   001B7C                     l7096:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  5103   001B7C  BE37               	btfsc	(_prec+1)^0,7,c
  5104   001B7E  EFC5  F00D         	goto	u5160
  5105   001B82  EFC3  F00D         	goto	u5161
  5106   001B86                     u5161:
  5107   001B86  EFCB  F00D         	goto	l1821
  5108   001B8A                     u5160:
  5109   001B8A                     
  5110                           ; BSR set to: 0
  5111   001B8A  0E00               	movlw	0
  5112   001B8C  6F73               	movwf	(dtoa@p+1)& (0+255),b
  5113   001B8E  0E01               	movlw	1
  5114   001B90  6F72               	movwf	dtoa@p& (0+255),b
  5115   001B92  EFCF  F00D         	goto	l1823
  5116   001B96                     l1821:
  5117                           
  5118                           ; BSR set to: 0
  5119   001B96  C036  F072         	movff	_prec,dtoa@p
  5120   001B9A  C037  F073         	movff	_prec+1,dtoa@p+1
  5121   001B9E                     l1823:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  5125   001B9E  C034  F074         	movff	_width,dtoa@w
  5126   001BA2  C035  F075         	movff	_width+1,dtoa@w+1
  5127   001BA6                     
  5128                           ; BSR set to: 0
  5129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  5130   001BA6  5178               	movf	dtoa@s& (0+255),w,b
  5131   001BA8  A4D8               	btfss	status,2,c
  5132   001BAA  EFD9  F00D         	goto	u5171
  5133   001BAE  EFDB  F00D         	goto	u5170
  5134   001BB2                     u5171:
  5135   001BB2  EFE2  F00D         	goto	l7104
  5136   001BB6                     u5170:
  5137   001BB6                     
  5138                           ; BSR set to: 0
  5139   001BB6  A43C               	btfss	_flags^0,2,c
  5140   001BB8  EFE0  F00D         	goto	u5181
  5141   001BBC  EFE2  F00D         	goto	u5180
  5142   001BC0                     u5181:
  5143   001BC0  EFFB  F00D         	goto	l1824
  5144   001BC4                     u5180:
  5145   001BC4                     l7104:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  5149   001BC4  0774               	decf	dtoa@w& (0+255),f,b
  5150   001BC6  A0D8               	btfss	status,0,c
  5151   001BC8  0775               	decf	(dtoa@w+1)& (0+255),f,b
  5152   001BCA                     
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  5155   001BCA  5178               	movf	dtoa@s& (0+255),w,b
  5156   001BCC  A4D8               	btfss	status,2,c
  5157   001BCE  EFEB  F00D         	goto	u5191
  5158   001BD2  EFED  F00D         	goto	u5190
  5159   001BD6                     u5191:
  5160   001BD6  EFF3  F00D         	goto	l7110
  5161   001BDA                     u5190:
  5162   001BDA                     
  5163                           ; BSR set to: 0
  5164   001BDA  0E00               	movlw	0
  5165   001BDC  6F71               	movwf	(_dtoa$2892+1)& (0+255),b
  5166   001BDE  0E2B               	movlw	43
  5167   001BE0  6F70               	movwf	_dtoa$2892& (0+255),b
  5168   001BE2  EFF7  F00D         	goto	l7112
  5169   001BE6                     l7110:
  5170                           
  5171                           ; BSR set to: 0
  5172   001BE6  0E00               	movlw	0
  5173   001BE8  6F71               	movwf	(_dtoa$2892+1)& (0+255),b
  5174   001BEA  0E2D               	movlw	45
  5175   001BEC  6F70               	movwf	_dtoa$2892& (0+255),b
  5176   001BEE                     l7112:
  5177                           
  5178                           ; BSR set to: 0
  5179   001BEE  C070  F078         	movff	_dtoa$2892,dtoa@s
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  5182   001BF2  EF07  F00E         	goto	l7118
  5183   001BF6                     l1824:
  5184                           
  5185                           ; BSR set to: 0
  5186   001BF6  A63C               	btfss	_flags^0,3,c
  5187   001BF8  EF00  F00E         	goto	u5201
  5188   001BFC  EF02  F00E         	goto	u5200
  5189   001C00                     u5201:
  5190   001C00  EF07  F00E         	goto	l7118
  5191   001C04                     u5200:
  5192   001C04                     
  5193                           ; BSR set to: 0
  5194                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 499:         --w;
  5195   001C04  0774               	decf	dtoa@w& (0+255),f,b
  5196   001C06  A0D8               	btfss	status,0,c
  5197   001C08  0775               	decf	(dtoa@w+1)& (0+255),f,b
  5198   001C0A                     
  5199                           ; BSR set to: 0
  5200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 500:   s = ' ';
  5201   001C0A  0E20               	movlw	32
  5202   001C0C  6F78               	movwf	dtoa@s& (0+255),b
  5203   001C0E                     l7118:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  5207   001C0E  0E00               	movlw	0
  5208   001C10  6F77               	movwf	(dtoa@i+1)& (0+255),b
  5209   001C12  0E1F               	movlw	31
  5210   001C14  6F76               	movwf	dtoa@i& (0+255),b
  5211   001C16                     
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  5214   001C16  0E00               	movlw	0
  5215   001C18  0101               	movlb	1	; () banked
  5216   001C1A  6F2B               	movwf	(_dbuf+31)& (0+255),b
  5217                           
  5218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5219   001C1C  EF55  F00E         	goto	l7132
  5220   001C20                     l7122:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  5224   001C20  0776               	decf	dtoa@i& (0+255),f,b
  5225   001C22  A0D8               	btfss	status,0,c
  5226   001C24  0777               	decf	(dtoa@i+1)& (0+255),f,b
  5227   001C26                     
  5228                           ; BSR set to: 0
  5229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5230   001C26  0E0C               	movlw	low _dbuf
  5231   001C28  2576               	addwf	dtoa@i& (0+255),w,b
  5232   001C2A  6ED9               	movwf	fsr2l,c
  5233   001C2C  0E01               	movlw	high _dbuf
  5234   001C2E  2177               	addwfc	(dtoa@i+1)& (0+255),w,b
  5235   001C30  6EDA               	movwf	fsr2h,c
  5236   001C32  C06C  F01A         	movff	dtoa@d,___almod@dividend
  5237   001C36  C06D  F01B         	movff	dtoa@d+1,___almod@dividend+1
  5238   001C3A  C06E  F01C         	movff	dtoa@d+2,___almod@dividend+2
  5239   001C3E  C06F  F01D         	movff	dtoa@d+3,___almod@dividend+3
  5240   001C42  0E0A               	movlw	10
  5241   001C44  6E1E               	movwf	___almod@divisor^0,c
  5242   001C46  0E00               	movlw	0
  5243   001C48  6E1F               	movwf	(___almod@divisor+1)^0,c
  5244   001C4A  0E00               	movlw	0
  5245   001C4C  6E20               	movwf	(___almod@divisor+2)^0,c
  5246   001C4E  0E00               	movlw	0
  5247   001C50  6E21               	movwf	(___almod@divisor+3)^0,c
  5248   001C52  ECD6  F014         	call	___almod	;wreg free
  5249   001C56  C01A  F024         	movff	?___almod,abs@a
  5250   001C5A  C01B  F025         	movff	?___almod+1,abs@a+1
  5251   001C5E  EC1B  F01C         	call	_abs	;wreg free
  5252   001C62  5024               	movf	?_abs^0,w,c
  5253   001C64  0F30               	addlw	48
  5254   001C66  6EDF               	movwf	indf2,c
  5255   001C68                     
  5256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  5257   001C68  0100               	movlb	0	; () banked
  5258   001C6A  0772               	decf	dtoa@p& (0+255),f,b
  5259   001C6C  A0D8               	btfss	status,0,c
  5260   001C6E  0773               	decf	(dtoa@p+1)& (0+255),f,b
  5261   001C70                     
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  5264   001C70  0774               	decf	dtoa@w& (0+255),f,b
  5265   001C72  A0D8               	btfss	status,0,c
  5266   001C74  0775               	decf	(dtoa@w+1)& (0+255),f,b
  5267   001C76                     
  5268                           ; BSR set to: 0
  5269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  5270   001C76  C06C  F01A         	movff	dtoa@d,___aldiv@dividend
  5271   001C7A  C06D  F01B         	movff	dtoa@d+1,___aldiv@dividend+1
  5272   001C7E  C06E  F01C         	movff	dtoa@d+2,___aldiv@dividend+2
  5273   001C82  C06F  F01D         	movff	dtoa@d+3,___aldiv@dividend+3
  5274   001C86  0E0A               	movlw	10
  5275   001C88  6E1E               	movwf	___aldiv@divisor^0,c
  5276   001C8A  0E00               	movlw	0
  5277   001C8C  6E1F               	movwf	(___aldiv@divisor+1)^0,c
  5278   001C8E  0E00               	movlw	0
  5279   001C90  6E20               	movwf	(___aldiv@divisor+2)^0,c
  5280   001C92  0E00               	movlw	0
  5281   001C94  6E21               	movwf	(___aldiv@divisor+3)^0,c
  5282   001C96  ECD2  F013         	call	___aldiv	;wreg free
  5283   001C9A  C01A  F06C         	movff	?___aldiv,dtoa@d
  5284   001C9E  C01B  F06D         	movff	?___aldiv+1,dtoa@d+1
  5285   001CA2  C01C  F06E         	movff	?___aldiv+2,dtoa@d+2
  5286   001CA6  C01D  F06F         	movff	?___aldiv+3,dtoa@d+3
  5287   001CAA                     l7132:
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5290   001CAA  0100               	movlb	0	; () banked
  5291   001CAC  BF77               	btfsc	(dtoa@i+1)& (0+255),7,b
  5292   001CAE  EF61  F00E         	goto	u5211
  5293   001CB2  5177               	movf	(dtoa@i+1)& (0+255),w,b
  5294   001CB4  E108               	bnz	u5210
  5295   001CB6  0576               	decf	dtoa@i& (0+255),w,b
  5296   001CB8  A0D8               	btfss	status,0,c
  5297   001CBA  EF61  F00E         	goto	u5211
  5298   001CBE  EF63  F00E         	goto	u5210
  5299   001CC2                     u5211:
  5300   001CC2  EF8F  F00E         	goto	l7142
  5301   001CC6                     u5210:
  5302   001CC6                     
  5303                           ; BSR set to: 0
  5304   001CC6  516C               	movf	dtoa@d& (0+255),w,b
  5305   001CC8  116D               	iorwf	(dtoa@d+1)& (0+255),w,b
  5306   001CCA  116E               	iorwf	(dtoa@d+2)& (0+255),w,b
  5307   001CCC  116F               	iorwf	(dtoa@d+3)& (0+255),w,b
  5308   001CCE  A4D8               	btfss	status,2,c
  5309   001CD0  EF6C  F00E         	goto	u5221
  5310   001CD4  EF6E  F00E         	goto	u5220
  5311   001CD8                     u5221:
  5312   001CD8  EF10  F00E         	goto	l7122
  5313   001CDC                     u5220:
  5314   001CDC                     
  5315                           ; BSR set to: 0
  5316   001CDC  BF73               	btfsc	(dtoa@p+1)& (0+255),7,b
  5317   001CDE  EF7B  F00E         	goto	u5230
  5318   001CE2  5173               	movf	(dtoa@p+1)& (0+255),w,b
  5319   001CE4  E106               	bnz	u5231
  5320   001CE6  0572               	decf	dtoa@p& (0+255),w,b
  5321   001CE8  B0D8               	btfsc	status,0,c
  5322   001CEA  EF79  F00E         	goto	u5231
  5323   001CEE  EF7B  F00E         	goto	u5230
  5324   001CF2                     u5231:
  5325   001CF2  EF10  F00E         	goto	l7122
  5326   001CF6                     u5230:
  5327   001CF6                     
  5328                           ; BSR set to: 0
  5329   001CF6  BF75               	btfsc	(dtoa@w+1)& (0+255),7,b
  5330   001CF8  EF86  F00E         	goto	u5241
  5331   001CFC  5175               	movf	(dtoa@w+1)& (0+255),w,b
  5332   001CFE  E108               	bnz	u5240
  5333   001D00  0574               	decf	dtoa@w& (0+255),w,b
  5334   001D02  A0D8               	btfss	status,0,c
  5335   001D04  EF86  F00E         	goto	u5241
  5336   001D08  EF88  F00E         	goto	u5240
  5337   001D0C                     u5241:
  5338   001D0C  EF8F  F00E         	goto	l7142
  5339   001D10                     u5240:
  5340   001D10                     
  5341                           ; BSR set to: 0
  5342   001D10  B23C               	btfsc	_flags^0,1,c
  5343   001D12  EF8D  F00E         	goto	u5251
  5344   001D16  EF8F  F00E         	goto	u5250
  5345   001D1A                     u5251:
  5346   001D1A  EF10  F00E         	goto	l7122
  5347   001D1E                     u5250:
  5348   001D1E                     l7142:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  5352   001D1E  5178               	movf	dtoa@s& (0+255),w,b
  5353   001D20  B4D8               	btfsc	status,2,c
  5354   001D22  EF95  F00E         	goto	u5261
  5355   001D26  EF97  F00E         	goto	u5260
  5356   001D2A                     u5261:
  5357   001D2A  EFA2  F00E         	goto	l7148
  5358   001D2E                     u5260:
  5359   001D2E                     
  5360                           ; BSR set to: 0
  5361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  5362   001D2E  0776               	decf	dtoa@i& (0+255),f,b
  5363   001D30  A0D8               	btfss	status,0,c
  5364   001D32  0777               	decf	(dtoa@i+1)& (0+255),f,b
  5365   001D34                     
  5366                           ; BSR set to: 0
  5367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  5368   001D34  0E0C               	movlw	low _dbuf
  5369   001D36  2576               	addwf	dtoa@i& (0+255),w,b
  5370   001D38  6ED9               	movwf	fsr2l,c
  5371   001D3A  0E01               	movlw	high _dbuf
  5372   001D3C  2177               	addwfc	(dtoa@i+1)& (0+255),w,b
  5373   001D3E  6EDA               	movwf	fsr2h,c
  5374   001D40  C078  FFDF         	movff	dtoa@s,indf2
  5375   001D44                     l7148:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          int) pad(fp, &dbuf[i], w);
  5379   001D44  C06A  F060         	movff	dtoa@fp,pad@fp
  5380   001D48  C06B  F061         	movff	dtoa@fp+1,pad@fp+1
  5381   001D4C  0E0C               	movlw	low _dbuf
  5382   001D4E  2576               	addwf	dtoa@i& (0+255),w,b
  5383   001D50  6F62               	movwf	pad@buf& (0+255),b
  5384   001D52  0E01               	movlw	high _dbuf
  5385   001D54  2177               	addwfc	(dtoa@i+1)& (0+255),w,b
  5386   001D56  6F63               	movwf	(pad@buf+1)& (0+255),b
  5387   001D58  C074  F064         	movff	dtoa@w,pad@p
  5388   001D5C  C075  F065         	movff	dtoa@w+1,pad@p+1
  5389   001D60  EC26  F016         	call	_pad	;wreg free
  5390   001D64  C060  F06A         	movff	?_pad,?_dtoa
  5391   001D68  C061  F06B         	movff	?_pad+1,?_dtoa+1
  5392   001D6C  0012               	return		;funcret
  5393   001D6E                     __end_of_dtoa:
  5394                           	callstack 0
  5395                           
  5396 ;; *************** function _pad *****************
  5397 ;; Defined at:
  5398 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5401 ;;		 -> sprintf@f(12), 
  5402 ;;  buf             2    2[BANK0 ] PTR unsigned char 
  5403 ;;		 -> dbuf(32), 
  5404 ;;  p               2    4[BANK0 ] int 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  w               2    8[BANK0 ] int 
  5407 ;;  i               2    6[BANK0 ] int 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  2    0[BANK0 ] int 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:       11 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; Hardware stack levels required when called: 10
  5424 ;; This function calls:
  5425 ;;		_fputc
  5426 ;;		_fputs
  5427 ;;		_strlen
  5428 ;; This function is called by:
  5429 ;;		_dtoa
  5430 ;;		_otoa
  5431 ;;		_utoa
  5432 ;;		_xtoa
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text20
  5437   002C4C                     __ptext20:
  5438                           	callstack 0
  5439   002C4C                     _pad:
  5440                           	callstack 15
  5441   002C4C                     
  5442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c
      +                          : 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 158:     if (flags & (1 << 0)) {
  5443   002C4C  A03C               	btfss	_flags^0,0,c
  5444   002C4E  EF2B  F016         	goto	u4971
  5445   002C52  EF2D  F016         	goto	u4970
  5446   002C56                     u4971:
  5447   002C56  EF37  F016         	goto	l7020
  5448   002C5A                     u4970:
  5449   002C5A                     
  5450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  5451   002C5A  C062  F023         	movff	pad@buf,fputs@s
  5452   002C5E  C063  F024         	movff	pad@buf+1,fputs@s+1
  5453   002C62  C060  F025         	movff	pad@fp,fputs@fp
  5454   002C66  C061  F026         	movff	pad@fp+1,fputs@fp+1
  5455   002C6A  ECF9  F01B         	call	_fputs	;wreg free
  5456   002C6E                     l7020:
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  5459   002C6E  0100               	movlb	0	; () banked
  5460   002C70  BF65               	btfsc	(pad@p+1)& (0+255),7,b
  5461   002C72  EF3D  F016         	goto	u4981
  5462   002C76  EF3F  F016         	goto	u4980
  5463   002C7A                     u4981:
  5464   002C7A  EF45  F016         	goto	l7024
  5465   002C7E                     u4980:
  5466   002C7E                     
  5467                           ; BSR set to: 0
  5468   002C7E  C064  F068         	movff	pad@p,pad@w
  5469   002C82  C065  F069         	movff	pad@p+1,pad@w+1
  5470   002C86  EF49  F016         	goto	l1810
  5471   002C8A                     l7024:
  5472                           
  5473                           ; BSR set to: 0
  5474   002C8A  0E00               	movlw	0
  5475   002C8C  6F69               	movwf	(pad@w+1)& (0+255),b
  5476   002C8E  0E00               	movlw	0
  5477   002C90  6F68               	movwf	pad@w& (0+255),b
  5478   002C92                     l1810:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  5482   002C92  0E00               	movlw	0
  5483   002C94  6F67               	movwf	(pad@i+1)& (0+255),b
  5484   002C96  0E00               	movlw	0
  5485   002C98  6F66               	movwf	pad@i& (0+255),b
  5486                           
  5487                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5488   002C9A  EF5C  F016         	goto	l7030
  5489   002C9E                     l7026:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  5493   002C9E  0E00               	movlw	0
  5494   002CA0  6E1B               	movwf	(fputc@c+1)^0,c
  5495   002CA2  0E20               	movlw	32
  5496   002CA4  6E1A               	movwf	fputc@c^0,c
  5497   002CA6  C060  F01C         	movff	pad@fp,fputc@fp
  5498   002CAA  C061  F01D         	movff	pad@fp+1,fputc@fp+1
  5499   002CAE  ECC1  F015         	call	_fputc	;wreg free
  5500   002CB2                     
  5501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  5502   002CB2  0100               	movlb	0	; () banked
  5503   002CB4  4B66               	infsnz	pad@i& (0+255),f,b
  5504   002CB6  2B67               	incf	(pad@i+1)& (0+255),f,b
  5505   002CB8                     l7030:
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5509   002CB8  5168               	movf	pad@w& (0+255),w,b
  5510   002CBA  5D66               	subwf	pad@i& (0+255),w,b
  5511   002CBC  5167               	movf	(pad@i+1)& (0+255),w,b
  5512   002CBE  0A80               	xorlw	128
  5513   002CC0  6E2A               	movwf	??_pad^0,c
  5514   002CC2  5169               	movf	(pad@w+1)& (0+255),w,b
  5515   002CC4  0A80               	xorlw	128
  5516   002CC6  582A               	subwfb	??_pad^0,w,c
  5517   002CC8  A0D8               	btfss	status,0,c
  5518   002CCA  EF69  F016         	goto	u4991
  5519   002CCE  EF6B  F016         	goto	u4990
  5520   002CD2                     u4991:
  5521   002CD2  EF4F  F016         	goto	l7026
  5522   002CD6                     u4990:
  5523   002CD6                     
  5524                           ; BSR set to: 0
  5525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  5526   002CD6  B03C               	btfsc	_flags^0,0,c
  5527   002CD8  EF70  F016         	goto	u5001
  5528   002CDC  EF72  F016         	goto	u5000
  5529   002CE0                     u5001:
  5530   002CE0  EF7C  F016         	goto	l7034
  5531   002CE4                     u5000:
  5532   002CE4                     
  5533                           ; BSR set to: 0
  5534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  5535   002CE4  C062  F023         	movff	pad@buf,fputs@s
  5536   002CE8  C063  F024         	movff	pad@buf+1,fputs@s+1
  5537   002CEC  C060  F025         	movff	pad@fp,fputs@fp
  5538   002CF0  C061  F026         	movff	pad@fp+1,fputs@fp+1
  5539   002CF4  ECF9  F01B         	call	_fputs	;wreg free
  5540   002CF8                     l7034:
  5541                           
  5542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 181:     return (
      +                          int)(strlen(buf) + (size_t)w);
  5543   002CF8  C062  F01A         	movff	pad@buf,strlen@s
  5544   002CFC  C063  F01B         	movff	pad@buf+1,strlen@s+1
  5545   002D00  ECEF  F01C         	call	_strlen	;wreg free
  5546   002D04  0100               	movlb	0	; () banked
  5547   002D06  5168               	movf	pad@w& (0+255),w,b
  5548   002D08  241A               	addwf	?_strlen^0,w,c
  5549   002D0A  6F60               	movwf	?_pad& (0+255),b
  5550   002D0C  5169               	movf	(pad@w+1)& (0+255),w,b
  5551   002D0E  201B               	addwfc	(?_strlen+1)^0,w,c
  5552   002D10  6F61               	movwf	(?_pad+1)& (0+255),b
  5553   002D12                     
  5554                           ; BSR set to: 0
  5555   002D12  0012               	return		;funcret
  5556   002D14                     __end_of_pad:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _strlen *****************
  5560 ;; Defined at:
  5561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5564 ;;		 -> dbuf(32), 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  a               2   27[COMRAM] PTR const unsigned char 
  5567 ;;		 -> dbuf(32), 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  2   25[COMRAM] unsigned int 
  5570 ;; Registers used:
  5571 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;Total ram usage:        4 bytes
  5582 ;; Hardware stack levels used: 1
  5583 ;; Hardware stack levels required when called: 7
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_pad
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text21
  5592   0039DE                     __ptext21:
  5593                           	callstack 0
  5594   0039DE                     _strlen:
  5595                           	callstack 17
  5596   0039DE  C01A  F01C         	movff	strlen@s,strlen@a
  5597   0039E2  C01B  F01D         	movff	strlen@s+1,strlen@a+1
  5598   0039E6  EFF7  F01C         	goto	l6882
  5599   0039EA                     l6880:
  5600   0039EA  4A1A               	infsnz	strlen@s^0,f,c
  5601   0039EC  2A1B               	incf	(strlen@s+1)^0,f,c
  5602   0039EE                     l6882:
  5603   0039EE  C01A  FFD9         	movff	strlen@s,fsr2l
  5604   0039F2  C01B  FFDA         	movff	strlen@s+1,fsr2h
  5605   0039F6  50DF               	movf	indf2,w,c
  5606   0039F8  A4D8               	btfss	status,2,c
  5607   0039FA  EF01  F01D         	goto	u4761
  5608   0039FE  EF03  F01D         	goto	u4760
  5609   003A02                     u4761:
  5610   003A02  EFF5  F01C         	goto	l6880
  5611   003A06                     u4760:
  5612   003A06  501C               	movf	strlen@a^0,w,c
  5613   003A08  5C1A               	subwf	strlen@s^0,w,c
  5614   003A0A  6E1A               	movwf	?_strlen^0,c
  5615   003A0C  501D               	movf	(strlen@a+1)^0,w,c
  5616   003A0E  581B               	subwfb	(strlen@s+1)^0,w,c
  5617   003A10  6E1B               	movwf	(?_strlen+1)^0,c
  5618   003A12  0012               	return		;funcret
  5619   003A14                     __end_of_strlen:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _fputs *****************
  5623 ;; Defined at:
  5624 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  s               2   34[COMRAM] PTR const unsigned char 
  5627 ;;		 -> dbuf(32), 
  5628 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  5629 ;;		 -> sprintf@f(12), 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  i               2   39[COMRAM] int 
  5632 ;;  c               1   38[COMRAM] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2   34[COMRAM] int 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;Total ram usage:        7 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 9
  5649 ;; This function calls:
  5650 ;;		_fputc
  5651 ;; This function is called by:
  5652 ;;		_pad
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text22
  5657   0037F2                     __ptext22:
  5658                           	callstack 0
  5659   0037F2                     _fputs:
  5660                           	callstack 15
  5661   0037F2  0E00               	movlw	0
  5662   0037F4  6E29               	movwf	(fputs@i+1)^0,c
  5663   0037F6  0E00               	movlw	0
  5664   0037F8  6E28               	movwf	fputs@i^0,c
  5665   0037FA  EF0A  F01C         	goto	l6876
  5666   0037FE                     l6872:
  5667   0037FE  C027  F01A         	movff	fputs@c,fputc@c
  5668   003802  6A1B               	clrf	(fputc@c+1)^0,c
  5669   003804  C025  F01C         	movff	fputs@fp,fputc@fp
  5670   003808  C026  F01D         	movff	fputs@fp+1,fputc@fp+1
  5671   00380C  ECC1  F015         	call	_fputc	;wreg free
  5672   003810  4A28               	infsnz	fputs@i^0,f,c
  5673   003812  2A29               	incf	(fputs@i+1)^0,f,c
  5674   003814                     l6876:
  5675   003814  5028               	movf	fputs@i^0,w,c
  5676   003816  2423               	addwf	fputs@s^0,w,c
  5677   003818  6ED9               	movwf	fsr2l,c
  5678   00381A  5029               	movf	(fputs@i+1)^0,w,c
  5679   00381C  2024               	addwfc	(fputs@s+1)^0,w,c
  5680   00381E  6EDA               	movwf	fsr2h,c
  5681   003820  50DF               	movf	indf2,w,c
  5682   003822  6E27               	movwf	fputs@c^0,c
  5683   003824  5027               	movf	fputs@c^0,w,c
  5684   003826  A4D8               	btfss	status,2,c
  5685   003828  EF18  F01C         	goto	u4751
  5686   00382C  EF1A  F01C         	goto	u4750
  5687   003830                     u4751:
  5688   003830  EFFF  F01B         	goto	l6872
  5689   003834                     u4750:
  5690   003834  0012               	return		;funcret
  5691   003836                     __end_of_fputs:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function _fputc *****************
  5695 ;; Defined at:
  5696 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  c               2   25[COMRAM] int 
  5699 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5700 ;;		 -> sprintf@f(12), 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  2   25[COMRAM] int 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;Total ram usage:        9 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 8
  5719 ;; This function calls:
  5720 ;;		_putch
  5721 ;; This function is called by:
  5722 ;;		_pad
  5723 ;;		_vfpfcnvrt
  5724 ;;		_fputs
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text23
  5729   002B82                     __ptext23:
  5730                           	callstack 0
  5731   002B82                     _fputc:
  5732                           	callstack 15
  5733   002B82  501C               	movf	fputc@fp^0,w,c
  5734   002B84  101D               	iorwf	(fputc@fp+1)^0,w,c
  5735   002B86  B4D8               	btfsc	status,2,c
  5736   002B88  EFC8  F015         	goto	u4711
  5737   002B8C  EFCA  F015         	goto	u4710
  5738   002B90                     u4711:
  5739   002B90  EFD3  F015         	goto	l6860
  5740   002B94                     u4710:
  5741   002B94  501C               	movf	fputc@fp^0,w,c
  5742   002B96  101D               	iorwf	(fputc@fp+1)^0,w,c
  5743   002B98  A4D8               	btfss	status,2,c
  5744   002B9A  EFD1  F015         	goto	u4721
  5745   002B9E  EFD3  F015         	goto	u4720
  5746   002BA2                     u4721:
  5747   002BA2  EFD8  F015         	goto	l6862
  5748   002BA6                     u4720:
  5749   002BA6                     l6860:
  5750   002BA6  501A               	movf	fputc@c^0,w,c
  5751   002BA8  EC18  F01F         	call	_putch
  5752   002BAC  EF25  F016         	goto	l2004
  5753   002BB0                     l6862:
  5754   002BB0  EE20 F00A          	lfsr	2,10
  5755   002BB4  501C               	movf	fputc@fp^0,w,c
  5756   002BB6  26D9               	addwf	fsr2l,f,c
  5757   002BB8  501D               	movf	(fputc@fp+1)^0,w,c
  5758   002BBA  22DA               	addwfc	fsr2h,f,c
  5759   002BBC  50DE               	movf	postinc2,w,c
  5760   002BBE  10DE               	iorwf	postinc2,w,c
  5761   002BC0  B4D8               	btfsc	status,2,c
  5762   002BC2  EFE5  F015         	goto	u4731
  5763   002BC6  EFE7  F015         	goto	u4730
  5764   002BCA                     u4731:
  5765   002BCA  EF02  F016         	goto	l6866
  5766   002BCE                     u4730:
  5767   002BCE  EE20 F00A          	lfsr	2,10
  5768   002BD2  501C               	movf	fputc@fp^0,w,c
  5769   002BD4  26D9               	addwf	fsr2l,f,c
  5770   002BD6  501D               	movf	(fputc@fp+1)^0,w,c
  5771   002BD8  22DA               	addwfc	fsr2h,f,c
  5772   002BDA  EE10 F003          	lfsr	1,3
  5773   002BDE  501C               	movf	fputc@fp^0,w,c
  5774   002BE0  26E1               	addwf	fsr1l,f,c
  5775   002BE2  501D               	movf	(fputc@fp+1)^0,w,c
  5776   002BE4  22E2               	addwfc	fsr1h,f,c
  5777   002BE6  50DE               	movf	postinc2,w,c
  5778   002BE8  5CE6               	subwf	postinc1,w,c
  5779   002BEA  50E6               	movf	postinc1,w,c
  5780   002BEC  0A80               	xorlw	128
  5781   002BEE  6E22               	movwf	(??_fputc+4)^0,c
  5782   002BF0  50DE               	movf	postinc2,w,c
  5783   002BF2  0A80               	xorlw	128
  5784   002BF4  5822               	subwfb	(??_fputc+4)^0,w,c
  5785   002BF6  B0D8               	btfsc	status,0,c
  5786   002BF8  EF00  F016         	goto	u4741
  5787   002BFC  EF02  F016         	goto	u4740
  5788   002C00                     u4741:
  5789   002C00  EF25  F016         	goto	l2004
  5790   002C04                     u4740:
  5791   002C04                     l6866:
  5792   002C04  EE20 F003          	lfsr	2,3
  5793   002C08  501C               	movf	fputc@fp^0,w,c
  5794   002C0A  26D9               	addwf	fsr2l,f,c
  5795   002C0C  501D               	movf	(fputc@fp+1)^0,w,c
  5796   002C0E  22DA               	addwfc	fsr2h,f,c
  5797   002C10  CFDE F01E          	movff	postinc2,??_fputc
  5798   002C14  CFDD F01F          	movff	postdec2,??_fputc+1
  5799   002C18  C01C  FFD9         	movff	fputc@fp,fsr2l
  5800   002C1C  C01D  FFDA         	movff	fputc@fp+1,fsr2h
  5801   002C20  CFDE F020          	movff	postinc2,??_fputc+2
  5802   002C24  CFDD F021          	movff	postdec2,??_fputc+3
  5803   002C28  501E               	movf	??_fputc^0,w,c
  5804   002C2A  2420               	addwf	(??_fputc+2)^0,w,c
  5805   002C2C  6ED9               	movwf	fsr2l,c
  5806   002C2E  501F               	movf	(??_fputc+1)^0,w,c
  5807   002C30  2021               	addwfc	(??_fputc+3)^0,w,c
  5808   002C32  6EDA               	movwf	fsr2h,c
  5809   002C34  C01A  FFDF         	movff	fputc@c,indf2
  5810   002C38  EE20 F003          	lfsr	2,3
  5811   002C3C  501C               	movf	fputc@fp^0,w,c
  5812   002C3E  26D9               	addwf	fsr2l,f,c
  5813   002C40  501D               	movf	(fputc@fp+1)^0,w,c
  5814   002C42  22DA               	addwfc	fsr2h,f,c
  5815   002C44  2ADE               	incf	postinc2,f,c
  5816   002C46  0E00               	movlw	0
  5817   002C48  22DD               	addwfc	postdec2,f,c
  5818   002C4A                     l2004:
  5819   002C4A  0012               	return		;funcret
  5820   002C4C                     __end_of_fputc:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function _putch *****************
  5824 ;; Defined at:
  5825 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  c               1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  c               1    0[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 7
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_fputc
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text24
  5854   003E30                     __ptext24:
  5855                           	callstack 0
  5856   003E30                     _putch:
  5857                           	callstack 15
  5858   003E30  0012               	return		;funcret
  5859   003E32                     __end_of_putch:
  5860                           	callstack 0
  5861                           
  5862 ;; *************** function _abs *****************
  5863 ;; Defined at:
  5864 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  a               2   35[COMRAM] int 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  2   35[COMRAM] int 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;Total ram usage:        4 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 7
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_dtoa
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text25
  5893   003836                     __ptext25:
  5894                           	callstack 0
  5895   003836                     _abs:
  5896                           	callstack 18
  5897   003836  BE25               	btfsc	(abs@a+1)^0,7,c
  5898   003838  EF28  F01C         	goto	u5010
  5899   00383C  5025               	movf	(abs@a+1)^0,w,c
  5900   00383E  E106               	bnz	u5011
  5901   003840  0424               	decf	abs@a^0,w,c
  5902   003842  B0D8               	btfsc	status,0,c
  5903   003844  EF26  F01C         	goto	u5011
  5904   003848  EF28  F01C         	goto	u5010
  5905   00384C                     u5011:
  5906   00384C  EF36  F01C         	goto	l1977
  5907   003850                     u5010:
  5908   003850  C024  F026         	movff	abs@a,??_abs
  5909   003854  C025  F027         	movff	abs@a+1,??_abs+1
  5910   003858  1E26               	comf	??_abs^0,f,c
  5911   00385A  1E27               	comf	(??_abs+1)^0,f,c
  5912   00385C  4A26               	infsnz	??_abs^0,f,c
  5913   00385E  2A27               	incf	(??_abs+1)^0,f,c
  5914   003860  C026  F024         	movff	??_abs,?_abs
  5915   003864  C027  F025         	movff	??_abs+1,?_abs+1
  5916   003868  EF3A  F01C         	goto	l1980
  5917   00386C                     l1977:
  5918   00386C  C024  F024         	movff	abs@a,?_abs
  5919   003870  C025  F025         	movff	abs@a+1,?_abs+1
  5920   003874                     l1980:
  5921   003874  0012               	return		;funcret
  5922   003876                     __end_of_abs:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function ___almod *****************
  5926 ;; Defined at:
  5927 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\almod.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  dividend        4   25[COMRAM] long 
  5930 ;;  divisor         4   29[COMRAM] long 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  sign            1   34[COMRAM] unsigned char 
  5933 ;;  counter         1   33[COMRAM] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  4   25[COMRAM] long 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5943 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;Total ram usage:       10 bytes
  5948 ;; Hardware stack levels used: 1
  5949 ;; Hardware stack levels required when called: 7
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_dtoa
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text26
  5958   0029AC                     __ptext26:
  5959                           	callstack 0
  5960   0029AC                     ___almod:
  5961                           	callstack 18
  5962   0029AC  0E00               	movlw	0
  5963   0029AE  6E23               	movwf	___almod@sign^0,c
  5964   0029B0  BE1D               	btfsc	(___almod@dividend+3)^0,7,c
  5965   0029B2  EFDF  F014         	goto	u4880
  5966   0029B6  EFDD  F014         	goto	u4881
  5967   0029BA                     u4881:
  5968   0029BA  EFE9  F014         	goto	l6972
  5969   0029BE                     u4880:
  5970   0029BE  1E1D               	comf	(___almod@dividend+3)^0,f,c
  5971   0029C0  1E1C               	comf	(___almod@dividend+2)^0,f,c
  5972   0029C2  1E1B               	comf	(___almod@dividend+1)^0,f,c
  5973   0029C4  6C1A               	negf	___almod@dividend^0,c
  5974   0029C6  0E00               	movlw	0
  5975   0029C8  221B               	addwfc	(___almod@dividend+1)^0,f,c
  5976   0029CA  221C               	addwfc	(___almod@dividend+2)^0,f,c
  5977   0029CC  221D               	addwfc	(___almod@dividend+3)^0,f,c
  5978   0029CE  0E01               	movlw	1
  5979   0029D0  6E23               	movwf	___almod@sign^0,c
  5980   0029D2                     l6972:
  5981   0029D2  BE21               	btfsc	(___almod@divisor+3)^0,7,c
  5982   0029D4  EFF0  F014         	goto	u4890
  5983   0029D8  EFEE  F014         	goto	u4891
  5984   0029DC                     u4891:
  5985   0029DC  EFF8  F014         	goto	l6976
  5986   0029E0                     u4890:
  5987   0029E0  1E21               	comf	(___almod@divisor+3)^0,f,c
  5988   0029E2  1E20               	comf	(___almod@divisor+2)^0,f,c
  5989   0029E4  1E1F               	comf	(___almod@divisor+1)^0,f,c
  5990   0029E6  6C1E               	negf	___almod@divisor^0,c
  5991   0029E8  0E00               	movlw	0
  5992   0029EA  221F               	addwfc	(___almod@divisor+1)^0,f,c
  5993   0029EC  2220               	addwfc	(___almod@divisor+2)^0,f,c
  5994   0029EE  2221               	addwfc	(___almod@divisor+3)^0,f,c
  5995   0029F0                     l6976:
  5996   0029F0  501E               	movf	___almod@divisor^0,w,c
  5997   0029F2  101F               	iorwf	(___almod@divisor+1)^0,w,c
  5998   0029F4  1020               	iorwf	(___almod@divisor+2)^0,w,c
  5999   0029F6  1021               	iorwf	(___almod@divisor+3)^0,w,c
  6000   0029F8  B4D8               	btfsc	status,2,c
  6001   0029FA  EF01  F015         	goto	u4901
  6002   0029FE  EF03  F015         	goto	u4900
  6003   002A02                     u4901:
  6004   002A02  EF33  F015         	goto	l6992
  6005   002A06                     u4900:
  6006   002A06  0E01               	movlw	1
  6007   002A08  6E22               	movwf	___almod@counter^0,c
  6008   002A0A  EF0D  F015         	goto	l6982
  6009   002A0E                     l6980:
  6010   002A0E  90D8               	bcf	status,0,c
  6011   002A10  361E               	rlcf	___almod@divisor^0,f,c
  6012   002A12  361F               	rlcf	(___almod@divisor+1)^0,f,c
  6013   002A14  3620               	rlcf	(___almod@divisor+2)^0,f,c
  6014   002A16  3621               	rlcf	(___almod@divisor+3)^0,f,c
  6015   002A18  2A22               	incf	___almod@counter^0,f,c
  6016   002A1A                     l6982:
  6017   002A1A  AE21               	btfss	(___almod@divisor+3)^0,7,c
  6018   002A1C  EF12  F015         	goto	u4911
  6019   002A20  EF14  F015         	goto	u4910
  6020   002A24                     u4911:
  6021   002A24  EF07  F015         	goto	l6980
  6022   002A28                     u4910:
  6023   002A28                     l6984:
  6024   002A28  501E               	movf	___almod@divisor^0,w,c
  6025   002A2A  5C1A               	subwf	___almod@dividend^0,w,c
  6026   002A2C  501F               	movf	(___almod@divisor+1)^0,w,c
  6027   002A2E  581B               	subwfb	(___almod@dividend+1)^0,w,c
  6028   002A30  5020               	movf	(___almod@divisor+2)^0,w,c
  6029   002A32  581C               	subwfb	(___almod@dividend+2)^0,w,c
  6030   002A34  5021               	movf	(___almod@divisor+3)^0,w,c
  6031   002A36  581D               	subwfb	(___almod@dividend+3)^0,w,c
  6032   002A38  A0D8               	btfss	status,0,c
  6033   002A3A  EF21  F015         	goto	u4921
  6034   002A3E  EF23  F015         	goto	u4920
  6035   002A42                     u4921:
  6036   002A42  EF2B  F015         	goto	l6988
  6037   002A46                     u4920:
  6038   002A46  501E               	movf	___almod@divisor^0,w,c
  6039   002A48  5E1A               	subwf	___almod@dividend^0,f,c
  6040   002A4A  501F               	movf	(___almod@divisor+1)^0,w,c
  6041   002A4C  5A1B               	subwfb	(___almod@dividend+1)^0,f,c
  6042   002A4E  5020               	movf	(___almod@divisor+2)^0,w,c
  6043   002A50  5A1C               	subwfb	(___almod@dividend+2)^0,f,c
  6044   002A52  5021               	movf	(___almod@divisor+3)^0,w,c
  6045   002A54  5A1D               	subwfb	(___almod@dividend+3)^0,f,c
  6046   002A56                     l6988:
  6047   002A56  90D8               	bcf	status,0,c
  6048   002A58  3221               	rrcf	(___almod@divisor+3)^0,f,c
  6049   002A5A  3220               	rrcf	(___almod@divisor+2)^0,f,c
  6050   002A5C  321F               	rrcf	(___almod@divisor+1)^0,f,c
  6051   002A5E  321E               	rrcf	___almod@divisor^0,f,c
  6052   002A60  2E22               	decfsz	___almod@counter^0,f,c
  6053   002A62  EF14  F015         	goto	l6984
  6054   002A66                     l6992:
  6055   002A66  5023               	movf	___almod@sign^0,w,c
  6056   002A68  B4D8               	btfsc	status,2,c
  6057   002A6A  EF39  F015         	goto	u4931
  6058   002A6E  EF3B  F015         	goto	u4930
  6059   002A72                     u4931:
  6060   002A72  EF43  F015         	goto	l6996
  6061   002A76                     u4930:
  6062   002A76  1E1D               	comf	(___almod@dividend+3)^0,f,c
  6063   002A78  1E1C               	comf	(___almod@dividend+2)^0,f,c
  6064   002A7A  1E1B               	comf	(___almod@dividend+1)^0,f,c
  6065   002A7C  6C1A               	negf	___almod@dividend^0,c
  6066   002A7E  0E00               	movlw	0
  6067   002A80  221B               	addwfc	(___almod@dividend+1)^0,f,c
  6068   002A82  221C               	addwfc	(___almod@dividend+2)^0,f,c
  6069   002A84  221D               	addwfc	(___almod@dividend+3)^0,f,c
  6070   002A86                     l6996:
  6071   002A86  C01A  F01A         	movff	___almod@dividend,?___almod
  6072   002A8A  C01B  F01B         	movff	___almod@dividend+1,?___almod+1
  6073   002A8E  C01C  F01C         	movff	___almod@dividend+2,?___almod+2
  6074   002A92  C01D  F01D         	movff	___almod@dividend+3,?___almod+3
  6075   002A96  0012               	return		;funcret
  6076   002A98                     __end_of___almod:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function ___aldiv *****************
  6080 ;; Defined at:
  6081 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  dividend        4   25[COMRAM] long 
  6084 ;;  divisor         4   29[COMRAM] long 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  quotient        4   35[COMRAM] long 
  6087 ;;  sign            1   34[COMRAM] unsigned char 
  6088 ;;  counter         1   33[COMRAM] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  4   25[COMRAM] long 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6098 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;Total ram usage:       14 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; Hardware stack levels required when called: 7
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_dtoa
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text27
  6113   0027A4                     __ptext27:
  6114                           	callstack 0
  6115   0027A4                     ___aldiv:
  6116                           	callstack 18
  6117   0027A4  0E00               	movlw	0
  6118   0027A6  6E23               	movwf	___aldiv@sign^0,c
  6119   0027A8  BE21               	btfsc	(___aldiv@divisor+3)^0,7,c
  6120   0027AA  EFDB  F013         	goto	u4820
  6121   0027AE  EFD9  F013         	goto	u4821
  6122   0027B2                     u4821:
  6123   0027B2  EFE5  F013         	goto	l6928
  6124   0027B6                     u4820:
  6125   0027B6  1E21               	comf	(___aldiv@divisor+3)^0,f,c
  6126   0027B8  1E20               	comf	(___aldiv@divisor+2)^0,f,c
  6127   0027BA  1E1F               	comf	(___aldiv@divisor+1)^0,f,c
  6128   0027BC  6C1E               	negf	___aldiv@divisor^0,c
  6129   0027BE  0E00               	movlw	0
  6130   0027C0  221F               	addwfc	(___aldiv@divisor+1)^0,f,c
  6131   0027C2  2220               	addwfc	(___aldiv@divisor+2)^0,f,c
  6132   0027C4  2221               	addwfc	(___aldiv@divisor+3)^0,f,c
  6133   0027C6  0E01               	movlw	1
  6134   0027C8  6E23               	movwf	___aldiv@sign^0,c
  6135   0027CA                     l6928:
  6136   0027CA  BE1D               	btfsc	(___aldiv@dividend+3)^0,7,c
  6137   0027CC  EFEC  F013         	goto	u4830
  6138   0027D0  EFEA  F013         	goto	u4831
  6139   0027D4                     u4831:
  6140   0027D4  EFF6  F013         	goto	l6934
  6141   0027D8                     u4830:
  6142   0027D8  1E1D               	comf	(___aldiv@dividend+3)^0,f,c
  6143   0027DA  1E1C               	comf	(___aldiv@dividend+2)^0,f,c
  6144   0027DC  1E1B               	comf	(___aldiv@dividend+1)^0,f,c
  6145   0027DE  6C1A               	negf	___aldiv@dividend^0,c
  6146   0027E0  0E00               	movlw	0
  6147   0027E2  221B               	addwfc	(___aldiv@dividend+1)^0,f,c
  6148   0027E4  221C               	addwfc	(___aldiv@dividend+2)^0,f,c
  6149   0027E6  221D               	addwfc	(___aldiv@dividend+3)^0,f,c
  6150   0027E8  0E01               	movlw	1
  6151   0027EA  1A23               	xorwf	___aldiv@sign^0,f,c
  6152   0027EC                     l6934:
  6153   0027EC  0E00               	movlw	0
  6154   0027EE  6E24               	movwf	___aldiv@quotient^0,c
  6155   0027F0  0E00               	movlw	0
  6156   0027F2  6E25               	movwf	(___aldiv@quotient+1)^0,c
  6157   0027F4  0E00               	movlw	0
  6158   0027F6  6E26               	movwf	(___aldiv@quotient+2)^0,c
  6159   0027F8  0E00               	movlw	0
  6160   0027FA  6E27               	movwf	(___aldiv@quotient+3)^0,c
  6161   0027FC  501E               	movf	___aldiv@divisor^0,w,c
  6162   0027FE  101F               	iorwf	(___aldiv@divisor+1)^0,w,c
  6163   002800  1020               	iorwf	(___aldiv@divisor+2)^0,w,c
  6164   002802  1021               	iorwf	(___aldiv@divisor+3)^0,w,c
  6165   002804  B4D8               	btfsc	status,2,c
  6166   002806  EF07  F014         	goto	u4841
  6167   00280A  EF09  F014         	goto	u4840
  6168   00280E                     u4841:
  6169   00280E  EF3F  F014         	goto	l6956
  6170   002812                     u4840:
  6171   002812  0E01               	movlw	1
  6172   002814  6E22               	movwf	___aldiv@counter^0,c
  6173   002816  EF13  F014         	goto	l6942
  6174   00281A                     l6940:
  6175   00281A  90D8               	bcf	status,0,c
  6176   00281C  361E               	rlcf	___aldiv@divisor^0,f,c
  6177   00281E  361F               	rlcf	(___aldiv@divisor+1)^0,f,c
  6178   002820  3620               	rlcf	(___aldiv@divisor+2)^0,f,c
  6179   002822  3621               	rlcf	(___aldiv@divisor+3)^0,f,c
  6180   002824  2A22               	incf	___aldiv@counter^0,f,c
  6181   002826                     l6942:
  6182   002826  AE21               	btfss	(___aldiv@divisor+3)^0,7,c
  6183   002828  EF18  F014         	goto	u4851
  6184   00282C  EF1A  F014         	goto	u4850
  6185   002830                     u4851:
  6186   002830  EF0D  F014         	goto	l6940
  6187   002834                     u4850:
  6188   002834                     l6944:
  6189   002834  90D8               	bcf	status,0,c
  6190   002836  3624               	rlcf	___aldiv@quotient^0,f,c
  6191   002838  3625               	rlcf	(___aldiv@quotient+1)^0,f,c
  6192   00283A  3626               	rlcf	(___aldiv@quotient+2)^0,f,c
  6193   00283C  3627               	rlcf	(___aldiv@quotient+3)^0,f,c
  6194   00283E  501E               	movf	___aldiv@divisor^0,w,c
  6195   002840  5C1A               	subwf	___aldiv@dividend^0,w,c
  6196   002842  501F               	movf	(___aldiv@divisor+1)^0,w,c
  6197   002844  581B               	subwfb	(___aldiv@dividend+1)^0,w,c
  6198   002846  5020               	movf	(___aldiv@divisor+2)^0,w,c
  6199   002848  581C               	subwfb	(___aldiv@dividend+2)^0,w,c
  6200   00284A  5021               	movf	(___aldiv@divisor+3)^0,w,c
  6201   00284C  581D               	subwfb	(___aldiv@dividend+3)^0,w,c
  6202   00284E  A0D8               	btfss	status,0,c
  6203   002850  EF2C  F014         	goto	u4861
  6204   002854  EF2E  F014         	goto	u4860
  6205   002858                     u4861:
  6206   002858  EF37  F014         	goto	l6952
  6207   00285C                     u4860:
  6208   00285C  501E               	movf	___aldiv@divisor^0,w,c
  6209   00285E  5E1A               	subwf	___aldiv@dividend^0,f,c
  6210   002860  501F               	movf	(___aldiv@divisor+1)^0,w,c
  6211   002862  5A1B               	subwfb	(___aldiv@dividend+1)^0,f,c
  6212   002864  5020               	movf	(___aldiv@divisor+2)^0,w,c
  6213   002866  5A1C               	subwfb	(___aldiv@dividend+2)^0,f,c
  6214   002868  5021               	movf	(___aldiv@divisor+3)^0,w,c
  6215   00286A  5A1D               	subwfb	(___aldiv@dividend+3)^0,f,c
  6216   00286C  8024               	bsf	___aldiv@quotient^0,0,c
  6217   00286E                     l6952:
  6218   00286E  90D8               	bcf	status,0,c
  6219   002870  3221               	rrcf	(___aldiv@divisor+3)^0,f,c
  6220   002872  3220               	rrcf	(___aldiv@divisor+2)^0,f,c
  6221   002874  321F               	rrcf	(___aldiv@divisor+1)^0,f,c
  6222   002876  321E               	rrcf	___aldiv@divisor^0,f,c
  6223   002878  2E22               	decfsz	___aldiv@counter^0,f,c
  6224   00287A  EF1A  F014         	goto	l6944
  6225   00287E                     l6956:
  6226   00287E  5023               	movf	___aldiv@sign^0,w,c
  6227   002880  B4D8               	btfsc	status,2,c
  6228   002882  EF45  F014         	goto	u4871
  6229   002886  EF47  F014         	goto	u4870
  6230   00288A                     u4871:
  6231   00288A  EF4F  F014         	goto	l6960
  6232   00288E                     u4870:
  6233   00288E  1E27               	comf	(___aldiv@quotient+3)^0,f,c
  6234   002890  1E26               	comf	(___aldiv@quotient+2)^0,f,c
  6235   002892  1E25               	comf	(___aldiv@quotient+1)^0,f,c
  6236   002894  6C24               	negf	___aldiv@quotient^0,c
  6237   002896  0E00               	movlw	0
  6238   002898  2225               	addwfc	(___aldiv@quotient+1)^0,f,c
  6239   00289A  2226               	addwfc	(___aldiv@quotient+2)^0,f,c
  6240   00289C  2227               	addwfc	(___aldiv@quotient+3)^0,f,c
  6241   00289E                     l6960:
  6242   00289E  C024  F01A         	movff	___aldiv@quotient,?___aldiv
  6243   0028A2  C025  F01B         	movff	___aldiv@quotient+1,?___aldiv+1
  6244   0028A6  C026  F01C         	movff	___aldiv@quotient+2,?___aldiv+2
  6245   0028AA  C027  F01D         	movff	___aldiv@quotient+3,?___aldiv+3
  6246   0028AE  0012               	return		;funcret
  6247   0028B0                     __end_of___aldiv:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function _memset *****************
  6251 ;; Defined at:
  6252 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  dest            2   25[COMRAM] PTR void 
  6255 ;;		 -> data(4), 
  6256 ;;  c               2   27[COMRAM] int 
  6257 ;;  n               2   29[COMRAM] unsigned int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  s               2   35[COMRAM] PTR unsigned char 
  6260 ;;		 -> data(4), 
  6261 ;;  k               2   33[COMRAM] unsigned int 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  2   25[COMRAM] PTR void 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;Total ram usage:       12 bytes
  6276 ;; Hardware stack levels used: 1
  6277 ;; Hardware stack levels required when called: 7
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_convert_byte_to_string
  6282 ;;		_convert_short_to_string
  6283 ;;		_convert_int_to_string
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text28
  6288   0020BC                     __ptext28:
  6289                           	callstack 0
  6290   0020BC                     _memset:
  6291                           	callstack 22
  6292   0020BC  C01A  F024         	movff	memset@dest,memset@s
  6293   0020C0  C01B  F025         	movff	memset@dest+1,memset@s+1
  6294   0020C4  501E               	movf	memset@n^0,w,c
  6295   0020C6  101F               	iorwf	(memset@n+1)^0,w,c
  6296   0020C8  A4D8               	btfss	status,2,c
  6297   0020CA  EF69  F010         	goto	u6021
  6298   0020CE  EF6B  F010         	goto	u6020
  6299   0020D2                     u6021:
  6300   0020D2  EF6D  F010         	goto	l7720
  6301   0020D6                     u6020:
  6302   0020D6  EF18  F011         	goto	l1764
  6303   0020DA                     l7720:
  6304   0020DA  C024  FFD9         	movff	memset@s,fsr2l
  6305   0020DE  C025  FFDA         	movff	memset@s+1,fsr2h
  6306   0020E2  C01C  FFDF         	movff	memset@c,indf2
  6307   0020E6  501E               	movf	memset@n^0,w,c
  6308   0020E8  2424               	addwf	memset@s^0,w,c
  6309   0020EA  6E20               	movwf	??_memset^0,c
  6310   0020EC  501F               	movf	(memset@n+1)^0,w,c
  6311   0020EE  2025               	addwfc	(memset@s+1)^0,w,c
  6312   0020F0  6E21               	movwf	(??_memset+1)^0,c
  6313   0020F2  0EFF               	movlw	255
  6314   0020F4  2420               	addwf	??_memset^0,w,c
  6315   0020F6  6ED9               	movwf	fsr2l,c
  6316   0020F8  0EFF               	movlw	255
  6317   0020FA  2021               	addwfc	(??_memset+1)^0,w,c
  6318   0020FC  6EDA               	movwf	fsr2h,c
  6319   0020FE  C01C  FFDF         	movff	memset@c,indf2
  6320   002102  501F               	movf	(memset@n+1)^0,w,c
  6321   002104  E107               	bnz	u6031
  6322   002106  0E03               	movlw	3
  6323   002108  5C1E               	subwf	memset@n^0,w,c
  6324   00210A  B0D8               	btfsc	status,0,c
  6325   00210C  EF8A  F010         	goto	u6031
  6326   002110  EF8C  F010         	goto	u6030
  6327   002114                     u6031:
  6328   002114  EF8E  F010         	goto	l7726
  6329   002118                     u6030:
  6330   002118  EF18  F011         	goto	l1764
  6331   00211C                     l7726:
  6332   00211C  EE20 F001          	lfsr	2,1
  6333   002120  5024               	movf	memset@s^0,w,c
  6334   002122  26D9               	addwf	fsr2l,f,c
  6335   002124  5025               	movf	(memset@s+1)^0,w,c
  6336   002126  22DA               	addwfc	fsr2h,f,c
  6337   002128  C01C  FFDF         	movff	memset@c,indf2
  6338   00212C  EE20 F002          	lfsr	2,2
  6339   002130  5024               	movf	memset@s^0,w,c
  6340   002132  26D9               	addwf	fsr2l,f,c
  6341   002134  5025               	movf	(memset@s+1)^0,w,c
  6342   002136  22DA               	addwfc	fsr2h,f,c
  6343   002138  C01C  FFDF         	movff	memset@c,indf2
  6344   00213C  501E               	movf	memset@n^0,w,c
  6345   00213E  2424               	addwf	memset@s^0,w,c
  6346   002140  6E20               	movwf	??_memset^0,c
  6347   002142  501F               	movf	(memset@n+1)^0,w,c
  6348   002144  2025               	addwfc	(memset@s+1)^0,w,c
  6349   002146  6E21               	movwf	(??_memset+1)^0,c
  6350   002148  0EFE               	movlw	254
  6351   00214A  2420               	addwf	??_memset^0,w,c
  6352   00214C  6ED9               	movwf	fsr2l,c
  6353   00214E  0EFF               	movlw	255
  6354   002150  2021               	addwfc	(??_memset+1)^0,w,c
  6355   002152  6EDA               	movwf	fsr2h,c
  6356   002154  C01C  FFDF         	movff	memset@c,indf2
  6357   002158  501E               	movf	memset@n^0,w,c
  6358   00215A  2424               	addwf	memset@s^0,w,c
  6359   00215C  6E20               	movwf	??_memset^0,c
  6360   00215E  501F               	movf	(memset@n+1)^0,w,c
  6361   002160  2025               	addwfc	(memset@s+1)^0,w,c
  6362   002162  6E21               	movwf	(??_memset+1)^0,c
  6363   002164  0EFD               	movlw	253
  6364   002166  2420               	addwf	??_memset^0,w,c
  6365   002168  6ED9               	movwf	fsr2l,c
  6366   00216A  0EFF               	movlw	255
  6367   00216C  2021               	addwfc	(??_memset+1)^0,w,c
  6368   00216E  6EDA               	movwf	fsr2h,c
  6369   002170  C01C  FFDF         	movff	memset@c,indf2
  6370   002174  501F               	movf	(memset@n+1)^0,w,c
  6371   002176  E107               	bnz	u6041
  6372   002178  0E07               	movlw	7
  6373   00217A  5C1E               	subwf	memset@n^0,w,c
  6374   00217C  B0D8               	btfsc	status,0,c
  6375   00217E  EFC3  F010         	goto	u6041
  6376   002182  EFC5  F010         	goto	u6040
  6377   002186                     u6041:
  6378   002186  EFC7  F010         	goto	l7732
  6379   00218A                     u6040:
  6380   00218A  EF18  F011         	goto	l1764
  6381   00218E                     l7732:
  6382   00218E  EE20 F003          	lfsr	2,3
  6383   002192  5024               	movf	memset@s^0,w,c
  6384   002194  26D9               	addwf	fsr2l,f,c
  6385   002196  5025               	movf	(memset@s+1)^0,w,c
  6386   002198  22DA               	addwfc	fsr2h,f,c
  6387   00219A  C01C  FFDF         	movff	memset@c,indf2
  6388   00219E  501E               	movf	memset@n^0,w,c
  6389   0021A0  2424               	addwf	memset@s^0,w,c
  6390   0021A2  6E20               	movwf	??_memset^0,c
  6391   0021A4  501F               	movf	(memset@n+1)^0,w,c
  6392   0021A6  2025               	addwfc	(memset@s+1)^0,w,c
  6393   0021A8  6E21               	movwf	(??_memset+1)^0,c
  6394   0021AA  0EFC               	movlw	252
  6395   0021AC  2420               	addwf	??_memset^0,w,c
  6396   0021AE  6ED9               	movwf	fsr2l,c
  6397   0021B0  0EFF               	movlw	255
  6398   0021B2  2021               	addwfc	(??_memset+1)^0,w,c
  6399   0021B4  6EDA               	movwf	fsr2h,c
  6400   0021B6  C01C  FFDF         	movff	memset@c,indf2
  6401   0021BA  501F               	movf	(memset@n+1)^0,w,c
  6402   0021BC  E107               	bnz	u6051
  6403   0021BE  0E09               	movlw	9
  6404   0021C0  5C1E               	subwf	memset@n^0,w,c
  6405   0021C2  B0D8               	btfsc	status,0,c
  6406   0021C4  EFE6  F010         	goto	u6051
  6407   0021C8  EFE8  F010         	goto	u6050
  6408   0021CC                     u6051:
  6409   0021CC  EFEA  F010         	goto	l7738
  6410   0021D0                     u6050:
  6411   0021D0  EF18  F011         	goto	l1764
  6412   0021D4                     l7738:
  6413   0021D4  C024  F020         	movff	memset@s,??_memset
  6414   0021D8  C025  F021         	movff	memset@s+1,??_memset+1
  6415   0021DC  1E20               	comf	??_memset^0,f,c
  6416   0021DE  1E21               	comf	(??_memset+1)^0,f,c
  6417   0021E0  4A20               	infsnz	??_memset^0,f,c
  6418   0021E2  2A21               	incf	(??_memset+1)^0,f,c
  6419   0021E4  0E03               	movlw	3
  6420   0021E6  1420               	andwf	??_memset^0,w,c
  6421   0021E8  6E22               	movwf	memset@k^0,c
  6422   0021EA  6A23               	clrf	(memset@k+1)^0,c
  6423   0021EC  5022               	movf	memset@k^0,w,c
  6424   0021EE  2624               	addwf	memset@s^0,f,c
  6425   0021F0  5023               	movf	(memset@k+1)^0,w,c
  6426   0021F2  2225               	addwfc	(memset@s+1)^0,f,c
  6427   0021F4  5022               	movf	memset@k^0,w,c
  6428   0021F6  5E1E               	subwf	memset@n^0,f,c
  6429   0021F8  5023               	movf	(memset@k+1)^0,w,c
  6430   0021FA  5A1F               	subwfb	(memset@n+1)^0,f,c
  6431   0021FC  0EFC               	movlw	252
  6432   0021FE  161E               	andwf	memset@n^0,f,c
  6433   002200  0EFF               	movlw	255
  6434   002202  161F               	andwf	(memset@n+1)^0,f,c
  6435   002204  EF0F  F011         	goto	l7746
  6436   002208                     l7740:
  6437   002208  C024  FFD9         	movff	memset@s,fsr2l
  6438   00220C  C025  FFDA         	movff	memset@s+1,fsr2h
  6439   002210  C01C  FFDF         	movff	memset@c,indf2
  6440   002214  061E               	decf	memset@n^0,f,c
  6441   002216  A0D8               	btfss	status,0,c
  6442   002218  061F               	decf	(memset@n+1)^0,f,c
  6443   00221A  4A24               	infsnz	memset@s^0,f,c
  6444   00221C  2A25               	incf	(memset@s+1)^0,f,c
  6445   00221E                     l7746:
  6446   00221E  501E               	movf	memset@n^0,w,c
  6447   002220  101F               	iorwf	(memset@n+1)^0,w,c
  6448   002222  A4D8               	btfss	status,2,c
  6449   002224  EF16  F011         	goto	u6061
  6450   002228  EF18  F011         	goto	u6060
  6451   00222C                     u6061:
  6452   00222C  EF04  F011         	goto	l7740
  6453   002230                     u6060:
  6454   002230                     l1764:
  6455   002230  0012               	return		;funcret
  6456   002232                     __end_of_memset:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function _Set_RTC_Date_Time *****************
  6460 ;; Defined at:
  6461 ;;		line 4 in file "Modules/RTC/RTC.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  6   37[COMRAM] struct .
  6468 ;; Registers used:
  6469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6475 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;Total ram usage:        6 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 11
  6482 ;; This function calls:
  6483 ;;		_I2C_Read1ByteRegister
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text29
  6490   00373C                     __ptext29:
  6491                           	callstack 0
  6492   00373C                     _Set_RTC_Date_Time:
  6493                           	callstack 19
  6494   00373C                     
  6495                           ;Modules/RTC/RTC.c: 5:     rtc.Seconds = I2C_Read1ByteRegister(0xD0,0x00);
  6496   00373C  0E00               	movlw	0
  6497   00373E  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  6498   003740  0ED0               	movlw	208
  6499   003742  EC2C  F01A         	call	_I2C_Read1ByteRegister
  6500   003746  6E2E               	movwf	_rtc^0,c
  6501                           
  6502                           ;Modules/RTC/RTC.c: 6:     rtc.Minutes = I2C_Read1ByteRegister(0xD0,0x01);
  6503   003748  0E01               	movlw	1
  6504   00374A  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  6505   00374C  0ED0               	movlw	208
  6506   00374E  EC2C  F01A         	call	_I2C_Read1ByteRegister
  6507   003752  6E2F               	movwf	(_rtc+1)^0,c
  6508                           
  6509                           ;Modules/RTC/RTC.c: 7:     rtc.Hours = I2C_Read1ByteRegister(0xD0,0x02);
  6510   003754  0E02               	movlw	2
  6511   003756  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  6512   003758  0ED0               	movlw	208
  6513   00375A  EC2C  F01A         	call	_I2C_Read1ByteRegister
  6514   00375E  6E30               	movwf	(_rtc+2)^0,c
  6515                           
  6516                           ;Modules/RTC/RTC.c: 8:     rtc.Day = I2C_Read1ByteRegister(0xD0,0x04);
  6517   003760  0E04               	movlw	4
  6518   003762  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  6519   003764  0ED0               	movlw	208
  6520   003766  EC2C  F01A         	call	_I2C_Read1ByteRegister
  6521   00376A  6E31               	movwf	(_rtc+3)^0,c
  6522                           
  6523                           ;Modules/RTC/RTC.c: 9:     rtc.Month = I2C_Read1ByteRegister(0xD0,0x05);
  6524   00376C  0E05               	movlw	5
  6525   00376E  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  6526   003770  0ED0               	movlw	208
  6527   003772  EC2C  F01A         	call	_I2C_Read1ByteRegister
  6528   003776  6E32               	movwf	(_rtc+4)^0,c
  6529                           
  6530                           ;Modules/RTC/RTC.c: 10:     rtc.Year = I2C_Read1ByteRegister(0xD0,0x06);
  6531   003778  0E06               	movlw	6
  6532   00377A  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  6533   00377C  0ED0               	movlw	208
  6534   00377E  EC2C  F01A         	call	_I2C_Read1ByteRegister
  6535   003782  6E33               	movwf	(_rtc+5)^0,c
  6536   003784                     
  6537                           ;Modules/RTC/RTC.c: 11:     return rtc;
  6538   003784  EE20  F02E         	lfsr	2,_rtc
  6539   003788  EE00  F026         	lfsr	0,?_Set_RTC_Date_Time
  6540   00378C  0E05               	movlw	5
  6541   00378E                     u4061:
  6542   00378E  CFDB FFEB          	movff	plusw2,plusw0
  6543   003792  06E8               	decf	wreg,f,c
  6544   003794  E2FC               	bc	u4061
  6545   003796  0012               	return		;funcret
  6546   003798                     __end_of_Set_RTC_Date_Time:
  6547                           	callstack 0
  6548                           
  6549 ;; *************** function _SYSTEM_Initialize *****************
  6550 ;; Defined at:
  6551 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;Total ram usage:        0 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 9
  6572 ;; This function calls:
  6573 ;;		_EUSART_Initialize
  6574 ;;		_I2C_Initialize
  6575 ;;		_INTERRUPT_Initialize
  6576 ;;		_OSCILLATOR_Initialize
  6577 ;;		_PIN_MANAGER_Initialize
  6578 ;; This function is called by:
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text30
  6584   003C80                     __ptext30:
  6585                           	callstack 0
  6586   003C80                     _SYSTEM_Initialize:
  6587                           	callstack 21
  6588   003C80                     
  6589                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6590   003C80  ECCA  F01E         	call	_INTERRUPT_Initialize	;wreg free
  6591   003C84                     
  6592                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  6593   003C84  EC60  F01E         	call	_I2C_Initialize	;wreg free
  6594   003C88                     
  6595                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6596   003C88  EC0A  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
  6597   003C8C                     
  6598                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6599   003C8C  ECB1  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  6600   003C90                     
  6601                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6602   003C90  EC7B  F01C         	call	_EUSART_Initialize	;wreg free
  6603   003C94  0012               	return		;funcret
  6604   003C96                     __end_of_SYSTEM_Initialize:
  6605                           	callstack 0
  6606                           
  6607 ;; *************** function _PIN_MANAGER_Initialize *****************
  6608 ;; Defined at:
  6609 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;		None
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;Total ram usage:        0 bytes
  6628 ;; Hardware stack levels used: 1
  6629 ;; Hardware stack levels required when called: 7
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_SYSTEM_Initialize
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text31
  6638   003A14                     __ptext31:
  6639                           	callstack 0
  6640   003A14                     _PIN_MANAGER_Initialize:
  6641                           	callstack 22
  6642   003A14                     
  6643                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6644   003A14  0E00               	movlw	0
  6645   003A16  6E8D               	movwf	141,c	;volatile
  6646                           
  6647                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6648   003A18  0E00               	movlw	0
  6649   003A1A  6E8C               	movwf	140,c	;volatile
  6650                           
  6651                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6652   003A1C  0E00               	movlw	0
  6653   003A1E  6E89               	movwf	137,c	;volatile
  6654                           
  6655                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6656   003A20  0E00               	movlw	0
  6657   003A22  6E8A               	movwf	138,c	;volatile
  6658                           
  6659                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6660   003A24  0E00               	movlw	0
  6661   003A26  6E8B               	movwf	139,c	;volatile
  6662                           
  6663                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6664   003A28  0E07               	movlw	7
  6665   003A2A  6E96               	movwf	150,c	;volatile
  6666   003A2C                     
  6667                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6668   003A2C  6892               	setf	146,c	;volatile
  6669   003A2E                     
  6670                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6671   003A2E  6893               	setf	147,c	;volatile
  6672                           
  6673                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6674   003A30  0EBF               	movlw	191
  6675   003A32  6E94               	movwf	148,c	;volatile
  6676   003A34                     
  6677                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6678   003A34  6895               	setf	149,c	;volatile
  6679   003A36                     
  6680                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  6681   003A36  687E               	setf	126,c	;volatile
  6682                           
  6683                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  6684   003A38  0E1F               	movlw	31
  6685   003A3A  6E7F               	movwf	127,c	;volatile
  6686                           
  6687                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  6688   003A3C  0E00               	movlw	0
  6689   003A3E  6E7C               	movwf	124,c	;volatile
  6690   003A40                     
  6691                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  6692   003A40  8EF1               	bsf	241,7,c	;volatile
  6693   003A42  0012               	return		;funcret
  6694   003A44                     __end_of_PIN_MANAGER_Initialize:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _OSCILLATOR_Initialize *****************
  6698 ;; Defined at:
  6699 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;Total ram usage:        0 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 7
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_SYSTEM_Initialize
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text32
  6728   003D62                     __ptext32:
  6729                           	callstack 0
  6730   003D62                     _OSCILLATOR_Initialize:
  6731                           	callstack 22
  6732   003D62                     
  6733                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x40;
  6734   003D62  0E40               	movlw	64
  6735   003D64  6ED3               	movwf	211,c	;volatile
  6736                           
  6737                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  6738   003D66  0E00               	movlw	0
  6739   003D68  6E9B               	movwf	155,c	;volatile
  6740   003D6A  0012               	return		;funcret
  6741   003D6C                     __end_of_OSCILLATOR_Initialize:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function _INTERRUPT_Initialize *****************
  6745 ;; Defined at:
  6746 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;		None
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		None
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;Total ram usage:        0 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 7
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_SYSTEM_Initialize
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text33
  6775   003D94                     __ptext33:
  6776                           	callstack 0
  6777   003D94                     _INTERRUPT_Initialize:
  6778                           	callstack 22
  6779   003D94                     
  6780                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  6781   003D94  8ED0               	bsf	208,7,c	;volatile
  6782                           
  6783                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR2bits.BCLIP = 1;
  6784   003D96  86A2               	bsf	162,3,c	;volatile
  6785                           
  6786                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SSPIP = 1;
  6787   003D98  869F               	bsf	159,3,c	;volatile
  6788   003D9A  0012               	return		;funcret
  6789   003D9C                     __end_of_INTERRUPT_Initialize:
  6790                           	callstack 0
  6791                           
  6792 ;; *************** function _I2C_Initialize *****************
  6793 ;; Defined at:
  6794 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;		None
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      void 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;Total ram usage:        0 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; Hardware stack levels required when called: 7
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_SYSTEM_Initialize
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text34
  6823   003CC0                     __ptext34:
  6824                           	callstack 0
  6825   003CC0                     _I2C_Initialize:
  6826                           	callstack 22
  6827   003CC0                     
  6828                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  6829   003CC0  0E80               	movlw	128
  6830   003CC2  6EC7               	movwf	199,c	;volatile
  6831                           
  6832                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  6833   003CC4  0E08               	movlw	8
  6834   003CC6  6EC6               	movwf	198,c	;volatile
  6835                           
  6836                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  6837   003CC8  0E00               	movlw	0
  6838   003CCA  6EC5               	movwf	197,c	;volatile
  6839                           
  6840                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  6841   003CCC  0E27               	movlw	39
  6842   003CCE  6EC8               	movwf	200,c	;volatile
  6843   003CD0                     
  6844                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  6845   003CD0  9AC6               	bcf	198,5,c	;volatile
  6846   003CD2  0012               	return		;funcret
  6847   003CD4                     __end_of_I2C_Initialize:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function _EUSART_Initialize *****************
  6851 ;; Defined at:
  6852 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 8
  6873 ;; This function calls:
  6874 ;;		_EUSART_SetErrorHandler
  6875 ;;		_EUSART_SetFramingErrorHandler
  6876 ;;		_EUSART_SetOverrunErrorHandler
  6877 ;; This function is called by:
  6878 ;;		_SYSTEM_Initialize
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text35
  6883   0038F6                     __ptext35:
  6884                           	callstack 0
  6885   0038F6                     _EUSART_Initialize:
  6886                           	callstack 21
  6887   0038F6                     
  6888                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6889   0038F6  0E08               	movlw	8
  6890   0038F8  6EB8               	movwf	184,c	;volatile
  6891                           
  6892                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6893   0038FA  0E90               	movlw	144
  6894   0038FC  6EAB               	movwf	171,c	;volatile
  6895                           
  6896                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6897   0038FE  0E24               	movlw	36
  6898   003900  6EAC               	movwf	172,c	;volatile
  6899                           
  6900                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xA0;
  6901   003902  0EA0               	movlw	160
  6902   003904  6EAF               	movwf	175,c	;volatile
  6903                           
  6904                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  6905   003906  0E01               	movlw	1
  6906   003908  6EB0               	movwf	176,c	;volatile
  6907   00390A                     
  6908                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6909   00390A  0E00               	movlw	0
  6910   00390C  6E1A               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  6911   00390E  0E00               	movlw	0
  6912   003910  6E1B               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  6913   003912  ECBB  F01E         	call	_EUSART_SetFramingErrorHandler	;wreg free
  6914   003916                     
  6915                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6916   003916  0E00               	movlw	0
  6917   003918  6E1A               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  6918   00391A  0E00               	movlw	0
  6919   00391C  6E1B               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6920   00391E  ECB6  F01E         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  6921   003922                     
  6922                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6923   003922  0E00               	movlw	0
  6924   003924  6E1A               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  6925   003926  0E00               	movlw	0
  6926   003928  6E1B               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  6927   00392A  ECC0  F01E         	call	_EUSART_SetErrorHandler	;wreg free
  6928   00392E                     
  6929                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6930   00392E  0E00               	movlw	0
  6931   003930  6E3F               	movwf	_eusartRxLastError^0,c	;volatile
  6932   003932  0012               	return		;funcret
  6933   003934                     __end_of_EUSART_Initialize:
  6934                           	callstack 0
  6935                           
  6936 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6937 ;; Defined at:
  6938 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  interruptHan    2   25[COMRAM] PTR FTN()void 
  6941 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;Total ram usage:        2 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; Hardware stack levels required when called: 7
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_EUSART_Initialize
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text36
  6968   003D6C                     __ptext36:
  6969                           	callstack 0
  6970   003D6C                     _EUSART_SetOverrunErrorHandler:
  6971                           	callstack 21
  6972   003D6C                     
  6973                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6974   003D6C  C01A  F0FB         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  6975   003D70  C01B  F0FC         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  6976   003D74  0012               	return		;funcret
  6977   003D76                     __end_of_EUSART_SetOverrunErrorHandler:
  6978                           	callstack 0
  6979                           
  6980 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6981 ;; Defined at:
  6982 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  interruptHan    2   25[COMRAM] PTR FTN()void 
  6985 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;Total ram usage:        2 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 7
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_EUSART_Initialize
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text37
  7012   003D76                     __ptext37:
  7013                           	callstack 0
  7014   003D76                     _EUSART_SetFramingErrorHandler:
  7015                           	callstack 21
  7016   003D76                     
  7017                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7018   003D76  C01A  F0FD         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  7019   003D7A  C01B  F0FE         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  7020   003D7E  0012               	return		;funcret
  7021   003D80                     __end_of_EUSART_SetFramingErrorHandler:
  7022                           	callstack 0
  7023                           
  7024 ;; *************** function _EUSART_SetErrorHandler *****************
  7025 ;; Defined at:
  7026 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  interruptHan    2   25[COMRAM] PTR FTN()void 
  7029 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, status,2, status,0
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;Total ram usage:        2 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; Hardware stack levels required when called: 7
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_EUSART_Initialize
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text38
  7056   003D80                     __ptext38:
  7057                           	callstack 0
  7058   003D80                     _EUSART_SetErrorHandler:
  7059                           	callstack 21
  7060   003D80                     
  7061                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7062   003D80  C01A  F148         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  7063   003D84  C01B  F149         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  7064   003D88  0012               	return		;funcret
  7065   003D8A                     __end_of_EUSART_SetErrorHandler:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _Read_Temprature *****************
  7069 ;; Defined at:
  7070 ;;		line 2 in file "Modules/Temprature_Sensor/Temp_Sensor.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  address         1    wreg     unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  address         1   37[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;Total ram usage:        1 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; Hardware stack levels required when called: 11
  7091 ;; This function calls:
  7092 ;;		_I2C_Read1ByteRegister
  7093 ;; This function is called by:
  7094 ;;		_main
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text39
  7099   003D0A                     __ptext39:
  7100                           	callstack 0
  7101   003D0A                     _Read_Temprature:
  7102                           	callstack 19
  7103                           
  7104                           ;incstack = 0
  7105                           ;Read_Temprature@address stored from wreg
  7106   003D0A  6E26               	movwf	Read_Temprature@address^0,c
  7107   003D0C                     
  7108                           ;Modules/Temprature_Sensor/Temp_Sensor.c: 3:     return I2C_Read1ByteRegister(address,0x
      +                          00);
  7109   003D0C  0E00               	movlw	0
  7110   003D0E  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  7111   003D10  5026               	movf	Read_Temprature@address^0,w,c
  7112   003D12  EC2C  F01A         	call	_I2C_Read1ByteRegister
  7113   003D16  0012               	return		;funcret
  7114   003D18                     __end_of_Read_Temprature:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _Print_RTC_Date_Time *****************
  7118 ;; Defined at:
  7119 ;;		line 13 in file "Modules/RTC/RTC.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  rtc_obj         6    9[BANK0 ] struct .
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  i               2   17[BANK0 ] int 
  7124 ;;  i               2   15[BANK0 ] int 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      void 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7134 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;Total ram usage:       10 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; Hardware stack levels required when called: 11
  7141 ;; This function calls:
  7142 ;;		_EUART_Send_String
  7143 ;;		_EUSART_Write
  7144 ;;		_lcd_4bit_send_char_data
  7145 ;;		_lcd_4bit_send_command
  7146 ;;		_lcd_4bit_send_string
  7147 ;; This function is called by:
  7148 ;;		_main
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text40
  7153   001D6E                     __ptext40:
  7154                           	callstack 0
  7155   001D6E                     _Print_RTC_Date_Time:
  7156                           	callstack 19
  7157   001D6E                     
  7158                           ;Modules/RTC/RTC.c: 14:     date_time[0] = (rtc_obj.Hours>>4)+'0';
  7159   001D6E  0100               	movlb	0	; () banked
  7160   001D70  396B               	swapf	(Print_RTC_Date_Time@rtc_obj+2)& (0+255),w,b
  7161   001D72  0B0F               	andlw	15
  7162   001D74  0F30               	addlw	48
  7163   001D76  6FCD               	movwf	_date_time& (0+255),b
  7164                           
  7165                           ;Modules/RTC/RTC.c: 15:     date_time[1] = (rtc_obj.Hours&0x0F)+'0';
  7166   001D78  516B               	movf	(Print_RTC_Date_Time@rtc_obj+2)& (0+255),w,b
  7167   001D7A  0B0F               	andlw	15
  7168   001D7C  0F30               	addlw	48
  7169   001D7E  6FCE               	movwf	(_date_time+1)& (0+255),b
  7170   001D80                     
  7171                           ; BSR set to: 0
  7172                           ;Modules/RTC/RTC.c: 16:     date_time[2] = ':';
  7173   001D80  0E3A               	movlw	58
  7174   001D82  6FCF               	movwf	(_date_time+2)& (0+255),b
  7175   001D84                     
  7176                           ; BSR set to: 0
  7177                           ;Modules/RTC/RTC.c: 17:     date_time[3] = (rtc_obj.Minutes>>4)+'0';
  7178   001D84  396A               	swapf	(Print_RTC_Date_Time@rtc_obj+1)& (0+255),w,b
  7179   001D86  0B0F               	andlw	15
  7180   001D88  0F30               	addlw	48
  7181   001D8A  6FD0               	movwf	(_date_time+3)& (0+255),b
  7182   001D8C                     
  7183                           ; BSR set to: 0
  7184                           ;Modules/RTC/RTC.c: 18:     date_time[4] = (rtc_obj.Minutes&0x0F)+'0';
  7185   001D8C  516A               	movf	(Print_RTC_Date_Time@rtc_obj+1)& (0+255),w,b
  7186   001D8E  0B0F               	andlw	15
  7187   001D90  0F30               	addlw	48
  7188   001D92  6FD1               	movwf	(_date_time+4)& (0+255),b
  7189   001D94                     
  7190                           ; BSR set to: 0
  7191                           ;Modules/RTC/RTC.c: 19:     date_time[5] = ':';
  7192   001D94  0E3A               	movlw	58
  7193   001D96  6FD2               	movwf	(_date_time+5)& (0+255),b
  7194                           
  7195                           ;Modules/RTC/RTC.c: 20:     date_time[6] = (rtc_obj.Seconds>>4)+'0';
  7196   001D98  3969               	swapf	Print_RTC_Date_Time@rtc_obj& (0+255),w,b
  7197   001D9A  0B0F               	andlw	15
  7198   001D9C  0F30               	addlw	48
  7199   001D9E  6FD3               	movwf	(_date_time+6)& (0+255),b
  7200                           
  7201                           ;Modules/RTC/RTC.c: 21:     date_time[7] = (rtc_obj.Seconds&0x0F)+'0';
  7202   001DA0  5169               	movf	Print_RTC_Date_Time@rtc_obj& (0+255),w,b
  7203   001DA2  0B0F               	andlw	15
  7204   001DA4  0F30               	addlw	48
  7205   001DA6  6FD4               	movwf	(_date_time+7)& (0+255),b
  7206   001DA8                     
  7207                           ; BSR set to: 0
  7208                           ;Modules/RTC/RTC.c: 22:     date_time[8] = '\r';
  7209   001DA8  0E0D               	movlw	13
  7210   001DAA  6FD5               	movwf	(_date_time+8)& (0+255),b
  7211   001DAC                     
  7212                           ; BSR set to: 0
  7213                           ;Modules/RTC/RTC.c: 23:     date_time[9] = (rtc_obj.Day>>4)+'0';
  7214   001DAC  396C               	swapf	(Print_RTC_Date_Time@rtc_obj+3)& (0+255),w,b
  7215   001DAE  0B0F               	andlw	15
  7216   001DB0  0F30               	addlw	48
  7217   001DB2  6FD6               	movwf	(_date_time+9)& (0+255),b
  7218   001DB4                     
  7219                           ; BSR set to: 0
  7220                           ;Modules/RTC/RTC.c: 24:     date_time[10] = (rtc_obj.Day&0x0F)+'0';
  7221   001DB4  516C               	movf	(Print_RTC_Date_Time@rtc_obj+3)& (0+255),w,b
  7222   001DB6  0B0F               	andlw	15
  7223   001DB8  0F30               	addlw	48
  7224   001DBA  6FD7               	movwf	(_date_time+10)& (0+255),b
  7225   001DBC                     
  7226                           ; BSR set to: 0
  7227                           ;Modules/RTC/RTC.c: 25:     date_time[11] = ':';
  7228   001DBC  0E3A               	movlw	58
  7229   001DBE  6FD8               	movwf	(_date_time+11)& (0+255),b
  7230                           
  7231                           ;Modules/RTC/RTC.c: 26:     date_time[12] = (rtc_obj.Month>>4)+'0';
  7232   001DC0  396D               	swapf	(Print_RTC_Date_Time@rtc_obj+4)& (0+255),w,b
  7233   001DC2  0B0F               	andlw	15
  7234   001DC4  0F30               	addlw	48
  7235   001DC6  6FD9               	movwf	(_date_time+12)& (0+255),b
  7236                           
  7237                           ;Modules/RTC/RTC.c: 27:     date_time[13] = (rtc_obj.Month&0x0F)+'0';
  7238   001DC8  516D               	movf	(Print_RTC_Date_Time@rtc_obj+4)& (0+255),w,b
  7239   001DCA  0B0F               	andlw	15
  7240   001DCC  0F30               	addlw	48
  7241   001DCE  6FDA               	movwf	(_date_time+13)& (0+255),b
  7242   001DD0                     
  7243                           ; BSR set to: 0
  7244                           ;Modules/RTC/RTC.c: 28:     date_time[14] = ':';
  7245   001DD0  0E3A               	movlw	58
  7246   001DD2  6FDB               	movwf	(_date_time+14)& (0+255),b
  7247   001DD4                     
  7248                           ; BSR set to: 0
  7249                           ;Modules/RTC/RTC.c: 29:     date_time[15] = (rtc_obj.Year>>4)+'0';
  7250   001DD4  396E               	swapf	(Print_RTC_Date_Time@rtc_obj+5)& (0+255),w,b
  7251   001DD6  0B0F               	andlw	15
  7252   001DD8  0F30               	addlw	48
  7253   001DDA  6FDC               	movwf	(_date_time+15)& (0+255),b
  7254   001DDC                     
  7255                           ; BSR set to: 0
  7256                           ;Modules/RTC/RTC.c: 30:     date_time[16] = (rtc_obj.Year&0x0F)+'0';
  7257   001DDC  516E               	movf	(Print_RTC_Date_Time@rtc_obj+5)& (0+255),w,b
  7258   001DDE  0B0F               	andlw	15
  7259   001DE0  0F30               	addlw	48
  7260   001DE2  6FDD               	movwf	(_date_time+16)& (0+255),b
  7261   001DE4                     
  7262                           ; BSR set to: 0
  7263                           ;Modules/RTC/RTC.c: 31:     date_time[17] = '\r';
  7264   001DE4  0E0D               	movlw	13
  7265   001DE6  6FDE               	movwf	(_date_time+17)& (0+255),b
  7266   001DE8                     
  7267                           ; BSR set to: 0
  7268                           ;Modules/RTC/RTC.c: 32:     EUART_Send_String("Time: ");
  7269   001DE8  0E4C               	movlw	low STR_5
  7270   001DEA  6E1B               	movwf	EUART_Send_String@text^0,c
  7271   001DEC  0E10               	movlw	high STR_5
  7272   001DEE  6E1C               	movwf	(EUART_Send_String@text+1)^0,c
  7273   001DF0  EC9A  F01C         	call	_EUART_Send_String	;wreg free
  7274   001DF4                     
  7275                           ;Modules/RTC/RTC.c: 33:     lcd_4bit_send_string(&lcd_obj,"Time: ");
  7276   001DF4  0E40               	movlw	low _lcd_obj
  7277   001DF6  0100               	movlb	0	; () banked
  7278   001DF8  6F65               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  7279   001DFA  0E00               	movlw	high _lcd_obj
  7280   001DFC  6F66               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  7281   001DFE  0E4C               	movlw	low STR_5
  7282   001E00  6F67               	movwf	lcd_4bit_send_string@str& (0+255),b
  7283   001E02  0E10               	movlw	high STR_5
  7284   001E04  6F68               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  7285   001E06  EC36  F019         	call	_lcd_4bit_send_string	;wreg free
  7286   001E0A                     
  7287                           ;Modules/RTC/RTC.c: 34:     for(int i=0;i<9;i++){
  7288   001E0A  0E00               	movlw	0
  7289   001E0C  0100               	movlb	0	; () banked
  7290   001E0E  6F70               	movwf	(Print_RTC_Date_Time@i+1)& (0+255),b
  7291   001E10  0E00               	movlw	0
  7292   001E12  6F6F               	movwf	Print_RTC_Date_Time@i& (0+255),b
  7293   001E14                     l7828:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;Modules/RTC/RTC.c: 35:         EUSART_Write(date_time[i]);
  7297   001E14  0ECD               	movlw	low _date_time
  7298   001E16  256F               	addwf	Print_RTC_Date_Time@i& (0+255),w,b
  7299   001E18  6ED9               	movwf	fsr2l,c
  7300   001E1A  0E00               	movlw	high _date_time
  7301   001E1C  2170               	addwfc	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  7302   001E1E  6EDA               	movwf	fsr2h,c
  7303   001E20  50DF               	movf	indf2,w,c
  7304   001E22  EC4B  F01E         	call	_EUSART_Write
  7305   001E26                     
  7306                           ;Modules/RTC/RTC.c: 36:         if(i!=8)
  7307   001E26  0E08               	movlw	8
  7308   001E28  0100               	movlb	0	; () banked
  7309   001E2A  196F               	xorwf	Print_RTC_Date_Time@i& (0+255),w,b
  7310   001E2C  1170               	iorwf	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  7311   001E2E  B4D8               	btfsc	status,2,c
  7312   001E30  EF1C  F00F         	goto	u6091
  7313   001E34  EF1E  F00F         	goto	u6090
  7314   001E38                     u6091:
  7315   001E38  EF2C  F00F         	goto	l7834
  7316   001E3C                     u6090:
  7317   001E3C                     
  7318                           ; BSR set to: 0
  7319                           ;Modules/RTC/RTC.c: 37:             lcd_4bit_send_char_data(&lcd_obj,date_time[i]);
  7320   001E3C  0E40               	movlw	low _lcd_obj
  7321   001E3E  6F60               	movwf	lcd_4bit_send_char_data@lcd& (0+255),b
  7322   001E40  0E00               	movlw	high _lcd_obj
  7323   001E42  6F61               	movwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),b
  7324   001E44  0ECD               	movlw	low _date_time
  7325   001E46  256F               	addwf	Print_RTC_Date_Time@i& (0+255),w,b
  7326   001E48  6ED9               	movwf	fsr2l,c
  7327   001E4A  0E00               	movlw	high _date_time
  7328   001E4C  2170               	addwfc	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  7329   001E4E  6EDA               	movwf	fsr2h,c
  7330   001E50  50DF               	movf	indf2,w,c
  7331   001E52  6F62               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  7332   001E54  ECB0  F018         	call	_lcd_4bit_send_char_data	;wreg free
  7333   001E58                     l7834:
  7334                           
  7335                           ;Modules/RTC/RTC.c: 38:     }
  7336   001E58  0100               	movlb	0	; () banked
  7337   001E5A  4B6F               	infsnz	Print_RTC_Date_Time@i& (0+255),f,b
  7338   001E5C  2B70               	incf	(Print_RTC_Date_Time@i+1)& (0+255),f,b
  7339   001E5E                     
  7340                           ; BSR set to: 0
  7341   001E5E  BF70               	btfsc	(Print_RTC_Date_Time@i+1)& (0+255),7,b
  7342   001E60  EF3B  F00F         	goto	u6101
  7343   001E64  5170               	movf	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  7344   001E66  E109               	bnz	u6100
  7345   001E68  0E09               	movlw	9
  7346   001E6A  5D6F               	subwf	Print_RTC_Date_Time@i& (0+255),w,b
  7347   001E6C  A0D8               	btfss	status,0,c
  7348   001E6E  EF3B  F00F         	goto	u6101
  7349   001E72  EF3D  F00F         	goto	u6100
  7350   001E76                     u6101:
  7351   001E76  EF0A  F00F         	goto	l7828
  7352   001E7A                     u6100:
  7353   001E7A                     
  7354                           ; BSR set to: 0
  7355                           ;Modules/RTC/RTC.c: 39:     lcd_4bit_send_command(&lcd_obj,0xc0);
  7356   001E7A  0E40               	movlw	low _lcd_obj
  7357   001E7C  6F60               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  7358   001E7E  0E00               	movlw	high _lcd_obj
  7359   001E80  6F61               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  7360   001E82  0EC0               	movlw	192
  7361   001E84  6F62               	movwf	lcd_4bit_send_command@command& (0+255),b
  7362   001E86  ECF3  F018         	call	_lcd_4bit_send_command	;wreg free
  7363   001E8A                     
  7364                           ;Modules/RTC/RTC.c: 40:     EUART_Send_String("Date: ");
  7365   001E8A  0E53               	movlw	low STR_7
  7366   001E8C  6E1B               	movwf	EUART_Send_String@text^0,c
  7367   001E8E  0E10               	movlw	high STR_7
  7368   001E90  6E1C               	movwf	(EUART_Send_String@text+1)^0,c
  7369   001E92  EC9A  F01C         	call	_EUART_Send_String	;wreg free
  7370   001E96                     
  7371                           ;Modules/RTC/RTC.c: 41:     lcd_4bit_send_string(&lcd_obj,"Date: ");
  7372   001E96  0E40               	movlw	low _lcd_obj
  7373   001E98  0100               	movlb	0	; () banked
  7374   001E9A  6F65               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  7375   001E9C  0E00               	movlw	high _lcd_obj
  7376   001E9E  6F66               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  7377   001EA0  0E53               	movlw	low STR_7
  7378   001EA2  6F67               	movwf	lcd_4bit_send_string@str& (0+255),b
  7379   001EA4  0E10               	movlw	high STR_7
  7380   001EA6  6F68               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  7381   001EA8  EC36  F019         	call	_lcd_4bit_send_string	;wreg free
  7382   001EAC                     
  7383                           ;Modules/RTC/RTC.c: 42:     for(int i=9;i<18;i++){
  7384   001EAC  0E00               	movlw	0
  7385   001EAE  0100               	movlb	0	; () banked
  7386   001EB0  6F72               	movwf	(Print_RTC_Date_Time@i_2233+1)& (0+255),b
  7387   001EB2  0E09               	movlw	9
  7388   001EB4  6F71               	movwf	Print_RTC_Date_Time@i_2233& (0+255),b
  7389   001EB6                     l7850:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;Modules/RTC/RTC.c: 43:         EUSART_Write(date_time[i]);
  7393   001EB6  0ECD               	movlw	low _date_time
  7394   001EB8  2571               	addwf	Print_RTC_Date_Time@i_2233& (0+255),w,b
  7395   001EBA  6ED9               	movwf	fsr2l,c
  7396   001EBC  0E00               	movlw	high _date_time
  7397   001EBE  2172               	addwfc	(Print_RTC_Date_Time@i_2233+1)& (0+255),w,b
  7398   001EC0  6EDA               	movwf	fsr2h,c
  7399   001EC2  50DF               	movf	indf2,w,c
  7400   001EC4  EC4B  F01E         	call	_EUSART_Write
  7401   001EC8                     
  7402                           ;Modules/RTC/RTC.c: 44:         if(i!=17)
  7403   001EC8  0E11               	movlw	17
  7404   001ECA  0100               	movlb	0	; () banked
  7405   001ECC  1971               	xorwf	Print_RTC_Date_Time@i_2233& (0+255),w,b
  7406   001ECE  1172               	iorwf	(Print_RTC_Date_Time@i_2233+1)& (0+255),w,b
  7407   001ED0  B4D8               	btfsc	status,2,c
  7408   001ED2  EF6D  F00F         	goto	u6111
  7409   001ED6  EF6F  F00F         	goto	u6110
  7410   001EDA                     u6111:
  7411   001EDA  EF7D  F00F         	goto	l7856
  7412   001EDE                     u6110:
  7413   001EDE                     
  7414                           ; BSR set to: 0
  7415                           ;Modules/RTC/RTC.c: 45:             lcd_4bit_send_char_data(&lcd_obj,date_time[i]);
  7416   001EDE  0E40               	movlw	low _lcd_obj
  7417   001EE0  6F60               	movwf	lcd_4bit_send_char_data@lcd& (0+255),b
  7418   001EE2  0E00               	movlw	high _lcd_obj
  7419   001EE4  6F61               	movwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),b
  7420   001EE6  0ECD               	movlw	low _date_time
  7421   001EE8  2571               	addwf	Print_RTC_Date_Time@i_2233& (0+255),w,b
  7422   001EEA  6ED9               	movwf	fsr2l,c
  7423   001EEC  0E00               	movlw	high _date_time
  7424   001EEE  2172               	addwfc	(Print_RTC_Date_Time@i_2233+1)& (0+255),w,b
  7425   001EF0  6EDA               	movwf	fsr2h,c
  7426   001EF2  50DF               	movf	indf2,w,c
  7427   001EF4  6F62               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  7428   001EF6  ECB0  F018         	call	_lcd_4bit_send_char_data	;wreg free
  7429   001EFA                     l7856:
  7430                           
  7431                           ;Modules/RTC/RTC.c: 46:     }
  7432   001EFA  0100               	movlb	0	; () banked
  7433   001EFC  4B71               	infsnz	Print_RTC_Date_Time@i_2233& (0+255),f,b
  7434   001EFE  2B72               	incf	(Print_RTC_Date_Time@i_2233+1)& (0+255),f,b
  7435   001F00                     
  7436                           ; BSR set to: 0
  7437   001F00  BF72               	btfsc	(Print_RTC_Date_Time@i_2233+1)& (0+255),7,b
  7438   001F02  EF8C  F00F         	goto	u6121
  7439   001F06  5172               	movf	(Print_RTC_Date_Time@i_2233+1)& (0+255),w,b
  7440   001F08  E109               	bnz	u6120
  7441   001F0A  0E12               	movlw	18
  7442   001F0C  5D71               	subwf	Print_RTC_Date_Time@i_2233& (0+255),w,b
  7443   001F0E  A0D8               	btfss	status,0,c
  7444   001F10  EF8C  F00F         	goto	u6121
  7445   001F14  EF8E  F00F         	goto	u6120
  7446   001F18                     u6121:
  7447   001F18  EF5B  F00F         	goto	l7850
  7448   001F1C                     u6120:
  7449   001F1C                     
  7450                           ; BSR set to: 0
  7451   001F1C  0012               	return		;funcret
  7452   001F1E                     __end_of_Print_RTC_Date_Time:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function _lcd_4bit_send_string *****************
  7456 ;; Defined at:
  7457 ;;		line 78 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  lcd             2    5[BANK0 ] PTR const struct .
  7460 ;;		 -> lcd_obj(6), 
  7461 ;;  str             2    7[BANK0 ] PTR unsigned char 
  7462 ;;		 -> STR_8(7), STR_6(7), data(4), STR_2(14), 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  ret             1    0        unsigned char 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  1    wreg      unsigned char 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;Total ram usage:        4 bytes
  7479 ;; Hardware stack levels used: 1
  7480 ;; Hardware stack levels required when called: 10
  7481 ;; This function calls:
  7482 ;;		_lcd_4bit_send_char_data
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;;		_Print_RTC_Date_Time
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text41
  7490   00326C                     __ptext41:
  7491                           	callstack 0
  7492   00326C                     _lcd_4bit_send_string:
  7493                           	callstack 20
  7494   00326C                     
  7495                           ;Modules/chr_LCD/ecu_chr_lcd.c: 80:     if (((void*)0) == lcd) {
  7496   00326C  0100               	movlb	0	; () banked
  7497   00326E  5165               	movf	lcd_4bit_send_string@lcd& (0+255),w,b
  7498   003270  1166               	iorwf	(lcd_4bit_send_string@lcd+1)& (0+255),w,b
  7499   003272  A4D8               	btfss	status,2,c
  7500   003274  EF3E  F019         	goto	u5921
  7501   003278  EF40  F019         	goto	u5920
  7502   00327C                     u5921:
  7503   00327C  EF5E  F019         	goto	l7658
  7504   003280                     u5920:
  7505   003280                     
  7506                           ; BSR set to: 0
  7507                           ;Modules/chr_LCD/ecu_chr_lcd.c: 82:     } else {
  7508   003280  EF77  F019         	goto	l790
  7509   003284                     l7654:
  7510   003284  C065  F060         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  7511   003288  C066  F061         	movff	lcd_4bit_send_string@lcd+1,lcd_4bit_send_char_data@lcd+1
  7512   00328C  C067  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  7513   003290  C068  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  7514   003294  0E00               	movlw	low (__smallconst shr (0+16))
  7515   003296  6EF8               	movwf	tblptru,c
  7516   003298  0E0F               	movlw	(high __ramtop+-1)
  7517   00329A  64F7               	cpfsgt	tblptrh,c
  7518   00329C  D003               	bra	u5937
  7519   00329E  0008               	tblrd		*
  7520   0032A0  50F5               	movf	tablat,w,c
  7521   0032A2  D005               	bra	u5930
  7522   0032A4                     u5937:
  7523   0032A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7524   0032A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7525   0032AC  50EF               	movf	indf0,w,c
  7526   0032AE                     u5930:
  7527   0032AE  0100               	movlb	0	; () banked
  7528   0032B0  6F62               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  7529   0032B2  ECB0  F018         	call	_lcd_4bit_send_char_data	;wreg free
  7530   0032B6  0100               	movlb	0	; () banked
  7531   0032B8  4B67               	infsnz	lcd_4bit_send_string@str& (0+255),f,b
  7532   0032BA  2B68               	incf	(lcd_4bit_send_string@str+1)& (0+255),f,b
  7533   0032BC                     l7658:
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;Modules/chr_LCD/ecu_chr_lcd.c: 83:         while (*str) {
  7537   0032BC  C067  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  7538   0032C0  C068  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  7539   0032C4  0E00               	movlw	low (__smallconst shr (0+16))
  7540   0032C6  6EF8               	movwf	tblptru,c
  7541   0032C8  0E0F               	movlw	(high __ramtop+-1)
  7542   0032CA  64F7               	cpfsgt	tblptrh,c
  7543   0032CC  D003               	bra	u5947
  7544   0032CE  0008               	tblrd		*
  7545   0032D0  50F5               	movf	tablat,w,c
  7546   0032D2  D005               	bra	u5940
  7547   0032D4                     u5947:
  7548   0032D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7549   0032D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7550   0032DC  50EF               	movf	indf0,w,c
  7551   0032DE                     u5940:
  7552   0032DE  0900               	iorlw	0
  7553   0032E0  A4D8               	btfss	status,2,c
  7554   0032E2  EF75  F019         	goto	u5951
  7555   0032E6  EF77  F019         	goto	u5950
  7556   0032EA                     u5951:
  7557   0032EA  EF42  F019         	goto	l7654
  7558   0032EE                     u5950:
  7559   0032EE                     l790:
  7560   0032EE  0012               	return		;funcret
  7561   0032F0                     __end_of_lcd_4bit_send_string:
  7562                           	callstack 0
  7563                           
  7564 ;; *************** function _lcd_4bit_send_char_data *****************
  7565 ;; Defined at:
  7566 ;;		line 52 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  lcd             2    0[BANK0 ] PTR const struct .
  7569 ;;		 -> lcd_obj(6), 
  7570 ;;  data            1    2[BANK0 ] unsigned char 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  ret             1    4[BANK0 ] unsigned char 
  7573 ;;  l_counter       1    3[BANK0 ] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      unsigned char 
  7576 ;; Registers used:
  7577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7583 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;Total ram usage:        5 bytes
  7588 ;; Hardware stack levels used: 1
  7589 ;; Hardware stack levels required when called: 9
  7590 ;; This function calls:
  7591 ;;		_gpio_pin_write_logic
  7592 ;;		_send_4bit_data
  7593 ;;		_send_4bit_enable_signal
  7594 ;; This function is called by:
  7595 ;;		_lcd_4bit_send_string
  7596 ;;		_Print_RTC_Date_Time
  7597 ;;		_lcd_4bit_send_char_data_pos
  7598 ;;		_lcd_4bit_send_string_pos
  7599 ;;		_lcd_4bit_send_custom_char
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text42
  7604   003160                     __ptext42:
  7605                           	callstack 0
  7606   003160                     _lcd_4bit_send_char_data:
  7607                           	callstack 20
  7608   003160                     
  7609                           ;Modules/chr_LCD/ecu_chr_lcd.c: 54:     uint8 l_counter = 0;
  7610   003160  0E00               	movlw	0
  7611   003162  0100               	movlb	0	; () banked
  7612   003164  6F63               	movwf	lcd_4bit_send_char_data@l_counter& (0+255),b
  7613   003166                     
  7614                           ; BSR set to: 0
  7615                           ;Modules/chr_LCD/ecu_chr_lcd.c: 55:     if (((void*)0) == lcd) {
  7616   003166  5160               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  7617   003168  1161               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  7618   00316A  A4D8               	btfss	status,2,c
  7619   00316C  EFBA  F018         	goto	u5811
  7620   003170  EFBC  F018         	goto	u5810
  7621   003174                     u5811:
  7622   003174  EFC0  F018         	goto	l7584
  7623   003178                     u5810:
  7624   003178                     
  7625                           ; BSR set to: 0
  7626                           ;Modules/chr_LCD/ecu_chr_lcd.c: 56:         ret = (Std_ReturnType)0x00;
  7627   003178  0E00               	movlw	0
  7628   00317A  6F64               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  7629                           
  7630                           ;Modules/chr_LCD/ecu_chr_lcd.c: 57:     } else {
  7631   00317C  EFF1  F018         	goto	l7586
  7632   003180                     l7584:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;Modules/chr_LCD/ecu_chr_lcd.c: 58:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), G
      +                          PIO_HIGH);
  7636   003180  0E01               	movlw	1
  7637   003182  2560               	addwf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  7638   003184  6E1A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  7639   003186  0E00               	movlw	0
  7640   003188  2161               	addwfc	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  7641   00318A  6E1B               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  7642   00318C  0E01               	movlw	1
  7643   00318E  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  7644   003190  EC2D  F013         	call	_gpio_pin_write_logic	;wreg free
  7645   003194  0100               	movlb	0	; () banked
  7646   003196  6F64               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  7647                           
  7648                           ;Modules/chr_LCD/ecu_chr_lcd.c: 59:         ret = send_4bit_data(lcd, data >> 4);
  7649   003198  C060  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_data@lcd
  7650   00319C  C061  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_data@lcd+1
  7651   0031A0  3962               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  7652   0031A2  0B0F               	andlw	15
  7653   0031A4  6E26               	movwf	send_4bit_data@data^0,c
  7654   0031A6  ECCC  F01B         	call	_send_4bit_data	;wreg free
  7655   0031AA  0100               	movlb	0	; () banked
  7656   0031AC  6F64               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  7657                           
  7658                           ;Modules/chr_LCD/ecu_chr_lcd.c: 60:         ret = send_4bit_enable_signal(lcd);
  7659   0031AE  C060  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_enable_signal@lcd
  7660   0031B2  C061  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_enable_signal@lcd+1
  7661   0031B6  EC22  F01D         	call	_send_4bit_enable_signal	;wreg free
  7662   0031BA  0100               	movlb	0	; () banked
  7663   0031BC  6F64               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  7664                           
  7665                           ;Modules/chr_LCD/ecu_chr_lcd.c: 61:         ret = send_4bit_data(lcd, data);
  7666   0031BE  C060  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_data@lcd
  7667   0031C2  C061  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_data@lcd+1
  7668   0031C6  C062  F026         	movff	lcd_4bit_send_char_data@data,send_4bit_data@data
  7669   0031CA  ECCC  F01B         	call	_send_4bit_data	;wreg free
  7670   0031CE  0100               	movlb	0	; () banked
  7671   0031D0  6F64               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  7672                           
  7673                           ;Modules/chr_LCD/ecu_chr_lcd.c: 62:         ret = send_4bit_enable_signal(lcd);
  7674   0031D2  C060  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_enable_signal@lcd
  7675   0031D6  C061  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_enable_signal@lcd+1
  7676   0031DA  EC22  F01D         	call	_send_4bit_enable_signal	;wreg free
  7677   0031DE  0100               	movlb	0	; () banked
  7678   0031E0  6F64               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  7679   0031E2                     l7586:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;Modules/chr_LCD/ecu_chr_lcd.c: 64:     return ret;
  7683   0031E2  5164               	movf	lcd_4bit_send_char_data@ret& (0+255),w,b
  7684   0031E4                     
  7685                           ; BSR set to: 0
  7686   0031E4  0012               	return		;funcret
  7687   0031E6                     __end_of_lcd_4bit_send_char_data:
  7688                           	callstack 0
  7689                           
  7690 ;; *************** function _lcd_4bit_send_command *****************
  7691 ;; Defined at:
  7692 ;;		line 37 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  lcd             2    0[BANK0 ] PTR const struct .
  7695 ;;		 -> lcd_obj(6), 
  7696 ;;  command         1    2[BANK0 ] unsigned char 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  ret             1    4[BANK0 ] unsigned char 
  7699 ;;  l_counter       1    3[BANK0 ] unsigned char 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  1    wreg      unsigned char 
  7702 ;; Registers used:
  7703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7709 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;Total ram usage:        5 bytes
  7714 ;; Hardware stack levels used: 1
  7715 ;; Hardware stack levels required when called: 9
  7716 ;; This function calls:
  7717 ;;		_gpio_pin_write_logic
  7718 ;;		_send_4bit_data
  7719 ;;		_send_4bit_enable_signal
  7720 ;; This function is called by:
  7721 ;;		_main
  7722 ;;		_lcd_4bit_intialize
  7723 ;;		_Print_RTC_Date_Time
  7724 ;;		_lcd_4bit_send_custom_char
  7725 ;;		_lcd_4bit_set_cursor
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text43
  7730   0031E6                     __ptext43:
  7731                           	callstack 0
  7732   0031E6                     _lcd_4bit_send_command:
  7733                           	callstack 21
  7734   0031E6                     
  7735                           ;Modules/chr_LCD/ecu_chr_lcd.c: 39:     uint8 l_counter = 0;
  7736   0031E6  0E00               	movlw	0
  7737   0031E8  0100               	movlb	0	; () banked
  7738   0031EA  6F63               	movwf	lcd_4bit_send_command@l_counter& (0+255),b
  7739   0031EC                     
  7740                           ; BSR set to: 0
  7741                           ;Modules/chr_LCD/ecu_chr_lcd.c: 40:     if (((void*)0) == lcd) {
  7742   0031EC  5160               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  7743   0031EE  1161               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  7744   0031F0  A4D8               	btfss	status,2,c
  7745   0031F2  EFFD  F018         	goto	u5911
  7746   0031F6  EFFF  F018         	goto	u5910
  7747   0031FA                     u5911:
  7748   0031FA  EF03  F019         	goto	l7642
  7749   0031FE                     u5910:
  7750   0031FE                     
  7751                           ; BSR set to: 0
  7752                           ;Modules/chr_LCD/ecu_chr_lcd.c: 41:         ret = (Std_ReturnType)0x00;
  7753   0031FE  0E00               	movlw	0
  7754   003200  6F64               	movwf	lcd_4bit_send_command@ret& (0+255),b
  7755                           
  7756                           ;Modules/chr_LCD/ecu_chr_lcd.c: 42:     } else {
  7757   003202  EF34  F019         	goto	l7644
  7758   003206                     l7642:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;Modules/chr_LCD/ecu_chr_lcd.c: 43:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), G
      +                          PIO_LOW);
  7762   003206  0E01               	movlw	1
  7763   003208  2560               	addwf	lcd_4bit_send_command@lcd& (0+255),w,b
  7764   00320A  6E1A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  7765   00320C  0E00               	movlw	0
  7766   00320E  2161               	addwfc	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  7767   003210  6E1B               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  7768   003212  0E00               	movlw	0
  7769   003214  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  7770   003216  EC2D  F013         	call	_gpio_pin_write_logic	;wreg free
  7771   00321A  0100               	movlb	0	; () banked
  7772   00321C  6F64               	movwf	lcd_4bit_send_command@ret& (0+255),b
  7773                           
  7774                           ;Modules/chr_LCD/ecu_chr_lcd.c: 44:         ret = send_4bit_data(lcd, command >> 4);
  7775   00321E  C060  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_data@lcd
  7776   003222  C061  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_data@lcd+1
  7777   003226  3962               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  7778   003228  0B0F               	andlw	15
  7779   00322A  6E26               	movwf	send_4bit_data@data^0,c
  7780   00322C  ECCC  F01B         	call	_send_4bit_data	;wreg free
  7781   003230  0100               	movlb	0	; () banked
  7782   003232  6F64               	movwf	lcd_4bit_send_command@ret& (0+255),b
  7783                           
  7784                           ;Modules/chr_LCD/ecu_chr_lcd.c: 45:         ret = send_4bit_enable_signal(lcd);
  7785   003234  C060  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_enable_signal@lcd
  7786   003238  C061  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_enable_signal@lcd+1
  7787   00323C  EC22  F01D         	call	_send_4bit_enable_signal	;wreg free
  7788   003240  0100               	movlb	0	; () banked
  7789   003242  6F64               	movwf	lcd_4bit_send_command@ret& (0+255),b
  7790                           
  7791                           ;Modules/chr_LCD/ecu_chr_lcd.c: 46:         ret = send_4bit_data(lcd, command);
  7792   003244  C060  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_data@lcd
  7793   003248  C061  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_data@lcd+1
  7794   00324C  C062  F026         	movff	lcd_4bit_send_command@command,send_4bit_data@data
  7795   003250  ECCC  F01B         	call	_send_4bit_data	;wreg free
  7796   003254  0100               	movlb	0	; () banked
  7797   003256  6F64               	movwf	lcd_4bit_send_command@ret& (0+255),b
  7798                           
  7799                           ;Modules/chr_LCD/ecu_chr_lcd.c: 47:         ret = send_4bit_enable_signal(lcd);
  7800   003258  C060  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_enable_signal@lcd
  7801   00325C  C061  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_enable_signal@lcd+1
  7802   003260  EC22  F01D         	call	_send_4bit_enable_signal	;wreg free
  7803   003264  0100               	movlb	0	; () banked
  7804   003266  6F64               	movwf	lcd_4bit_send_command@ret& (0+255),b
  7805   003268                     l7644:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;Modules/chr_LCD/ecu_chr_lcd.c: 49:     return ret;
  7809   003268  5164               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  7810   00326A                     
  7811                           ; BSR set to: 0
  7812   00326A  0012               	return		;funcret
  7813   00326C                     __end_of_lcd_4bit_send_command:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function _send_4bit_enable_signal *****************
  7817 ;; Defined at:
  7818 ;;		line 278 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  lcd             2   35[COMRAM] PTR const struct .
  7821 ;;		 -> lcd_obj(6), 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  ret             1   37[COMRAM] unsigned char 
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  1    wreg      unsigned char 
  7826 ;; Registers used:
  7827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;Total ram usage:        3 bytes
  7838 ;; Hardware stack levels used: 1
  7839 ;; Hardware stack levels required when called: 8
  7840 ;; This function calls:
  7841 ;;		_gpio_pin_write_logic
  7842 ;; This function is called by:
  7843 ;;		_lcd_4bit_send_command
  7844 ;;		_lcd_4bit_send_char_data
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text44
  7849   003A44                     __ptext44:
  7850                           	callstack 0
  7851   003A44                     _send_4bit_enable_signal:
  7852                           	callstack 20
  7853   003A44  C024  F01A         	movff	send_4bit_enable_signal@lcd,gpio_pin_write_logic@_pin_config
  7854   003A48  C025  F01B         	movff	send_4bit_enable_signal@lcd+1,gpio_pin_write_logic@_pin_config+1
  7855   003A4C  0E01               	movlw	1
  7856   003A4E  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  7857   003A50  EC2D  F013         	call	_gpio_pin_write_logic	;wreg free
  7858   003A54                     
  7859                           ;Modules/chr_LCD/ecu_chr_lcd.c: 281:     _delay((unsigned long)((5)*(16000000/4000000.0)
      +                          ));
  7860   003A54  0E06               	movlw	6
  7861   003A56                     u6407:
  7862   003A56  2EE8               	decfsz	wreg,f,c
  7863   003A58  D7FE               	bra	u6407
  7864   003A5A  F000 F000          	nop2	
  7865   003A5E                     
  7866                           ;Modules/chr_LCD/ecu_chr_lcd.c: 282:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO
      +                          _LOW);
  7867   003A5E  C024  F01A         	movff	send_4bit_enable_signal@lcd,gpio_pin_write_logic@_pin_config
  7868   003A62  C025  F01B         	movff	send_4bit_enable_signal@lcd+1,gpio_pin_write_logic@_pin_config+1
  7869   003A66  0E00               	movlw	0
  7870   003A68  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  7871   003A6A  EC2D  F013         	call	_gpio_pin_write_logic	;wreg free
  7872   003A6E  6E26               	movwf	send_4bit_enable_signal@ret^0,c
  7873   003A70                     
  7874                           ;Modules/chr_LCD/ecu_chr_lcd.c: 283:     return ret;
  7875   003A70  5026               	movf	send_4bit_enable_signal@ret^0,w,c
  7876   003A72  0012               	return		;funcret
  7877   003A74                     __end_of_send_4bit_enable_signal:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _send_4bit_data *****************
  7881 ;; Defined at:
  7882 ;;		line 260 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  lcd             2   35[COMRAM] PTR const struct .
  7885 ;;		 -> lcd_obj(6), 
  7886 ;;  data            1   37[COMRAM] unsigned char 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  l_counter       1   43[COMRAM] unsigned char 
  7889 ;;  ret             1   42[COMRAM] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      unsigned char 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7899 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;Total ram usage:        9 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 8
  7906 ;; This function calls:
  7907 ;;		_gpio_pin_write_logic
  7908 ;; This function is called by:
  7909 ;;		_lcd_4bit_send_command
  7910 ;;		_lcd_4bit_send_char_data
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text45
  7915   003798                     __ptext45:
  7916                           	callstack 0
  7917   003798                     _send_4bit_data:
  7918                           	callstack 20
  7919   003798                     
  7920                           ;Modules/chr_LCD/ecu_chr_lcd.c: 262:     uint8 l_counter = 0;
  7921   003798  0E00               	movlw	0
  7922   00379A  6E2C               	movwf	send_4bit_data@l_counter^0,c
  7923                           
  7924                           ;Modules/chr_LCD/ecu_chr_lcd.c: 263:     for (l_counter = 0; l_counter < 4; l_counter++)
      +                           {
  7925   00379C  0E00               	movlw	0
  7926   00379E  6E2C               	movwf	send_4bit_data@l_counter^0,c
  7927   0037A0                     l7336:
  7928                           
  7929                           ;Modules/chr_LCD/ecu_chr_lcd.c: 264:         ret = gpio_pin_write_logic(&(lcd->lcd_data[
      +                          l_counter]), data >> l_counter & 0x01);
  7930   0037A0  502C               	movf	send_4bit_data@l_counter^0,w,c
  7931   0037A2  2424               	addwf	send_4bit_data@lcd^0,w,c
  7932   0037A4  6E27               	movwf	??_send_4bit_data^0,c
  7933   0037A6  0E00               	movlw	0
  7934   0037A8  2025               	addwfc	(send_4bit_data@lcd+1)^0,w,c
  7935   0037AA  6E28               	movwf	(??_send_4bit_data+1)^0,c
  7936   0037AC  0E02               	movlw	2
  7937   0037AE  2427               	addwf	??_send_4bit_data^0,w,c
  7938   0037B0  6E1A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  7939   0037B2  0E00               	movlw	0
  7940   0037B4  2028               	addwfc	(??_send_4bit_data+1)^0,w,c
  7941   0037B6  6E1B               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  7942   0037B8  C02C  F029         	movff	send_4bit_data@l_counter,??_send_4bit_data+2
  7943   0037BC  C026  F02A         	movff	send_4bit_data@data,??_send_4bit_data+3
  7944   0037C0  2A29               	incf	(??_send_4bit_data+2)^0,f,c
  7945   0037C2  EFE5  F01B         	goto	u5654
  7946   0037C6                     u5655:
  7947   0037C6  90D8               	bcf	status,0,c
  7948   0037C8  322A               	rrcf	(??_send_4bit_data+3)^0,f,c
  7949   0037CA                     u5654:
  7950   0037CA  2E29               	decfsz	(??_send_4bit_data+2)^0,f,c
  7951   0037CC  EFE3  F01B         	goto	u5655
  7952   0037D0  502A               	movf	(??_send_4bit_data+3)^0,w,c
  7953   0037D2  0B01               	andlw	1
  7954   0037D4  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  7955   0037D6  EC2D  F013         	call	_gpio_pin_write_logic	;wreg free
  7956   0037DA  6E2B               	movwf	send_4bit_data@ret^0,c
  7957   0037DC                     
  7958                           ;Modules/chr_LCD/ecu_chr_lcd.c: 265:     }
  7959   0037DC  2A2C               	incf	send_4bit_data@l_counter^0,f,c
  7960   0037DE  0E03               	movlw	3
  7961   0037E0  642C               	cpfsgt	send_4bit_data@l_counter^0,c
  7962   0037E2  EFF5  F01B         	goto	u5661
  7963   0037E6  EFF7  F01B         	goto	u5660
  7964   0037EA                     u5661:
  7965   0037EA  EFD0  F01B         	goto	l7336
  7966   0037EE                     u5660:
  7967   0037EE                     
  7968                           ;Modules/chr_LCD/ecu_chr_lcd.c: 266:     return ret;
  7969   0037EE  502B               	movf	send_4bit_data@ret^0,w,c
  7970   0037F0  0012               	return		;funcret
  7971   0037F2                     __end_of_send_4bit_data:
  7972                           	callstack 0
  7973                           
  7974 ;; *************** function _gpio_pin_write_logic *****************
  7975 ;; Defined at:
  7976 ;;		line 74 in file "MCAL/hal_gpio.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  7979 ;;		 -> lcd_obj.lcd_data(4), lcd_obj(6), 
  7980 ;;  logic           1   27[COMRAM] enum E3348
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;  ret             1   34[COMRAM] unsigned char 
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      unsigned char 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;Total ram usage:       10 bytes
  7997 ;; Hardware stack levels used: 1
  7998 ;; Hardware stack levels required when called: 7
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_lcd_4bit_send_command
  8003 ;;		_lcd_4bit_send_char_data
  8004 ;;		_send_4bit_data
  8005 ;;		_send_4bit_enable_signal
  8006 ;;		_gpio_pin_initialize
  8007 ;;		_lcd_8bit_send_command
  8008 ;;		_lcd_8bit_send_char_data
  8009 ;;		_send_8bit_data
  8010 ;;		_send_8bit_enable_signal
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text46
  8015   00265A                     __ptext46:
  8016                           	callstack 0
  8017   00265A                     _gpio_pin_write_logic:
  8018                           	callstack 20
  8019   00265A                     
  8020                           ;MCAL/hal_gpio.c: 75:     Std_ReturnType ret = (Std_ReturnType)0x01;
  8021   00265A  0E01               	movlw	1
  8022   00265C  6E23               	movwf	gpio_pin_write_logic@ret^0,c
  8023   00265E                     
  8024                           ;MCAL/hal_gpio.c: 76:     if(((void*)0) == _pin_config || _pin_config->pin >= 8 || _pin_
      +                          config->port >= 5){
  8025   00265E  501A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  8026   002660  101B               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  8027   002662  B4D8               	btfsc	status,2,c
  8028   002664  EF36  F013         	goto	u5071
  8029   002668  EF38  F013         	goto	u5070
  8030   00266C                     u5071:
  8031   00266C  EF58  F013         	goto	l7068
  8032   002670                     u5070:
  8033   002670  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  8034   002674  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  8035   002678  30DF               	rrcf	223,w,c
  8036   00267A  32E8               	rrcf	wreg,f,c
  8037   00267C  32E8               	rrcf	wreg,f,c
  8038   00267E  0B07               	andlw	7
  8039   002680  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  8040   002682  0E08               	movlw	8
  8041   002684  601D               	cpfslt	??_gpio_pin_write_logic^0,c
  8042   002686  EF47  F013         	goto	u5081
  8043   00268A  EF49  F013         	goto	u5080
  8044   00268E                     u5081:
  8045   00268E  EF58  F013         	goto	l7068
  8046   002692                     u5080:
  8047   002692  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  8048   002696  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  8049   00269A  50DF               	movf	223,w,c
  8050   00269C  0B07               	andlw	7
  8051   00269E  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  8052   0026A0  0E04               	movlw	4
  8053   0026A2  641D               	cpfsgt	??_gpio_pin_write_logic^0,c
  8054   0026A4  EF56  F013         	goto	u5091
  8055   0026A8  EF58  F013         	goto	u5090
  8056   0026AC                     u5091:
  8057   0026AC  EFBB  F013         	goto	l7076
  8058   0026B0                     u5090:
  8059   0026B0                     l7068:
  8060                           
  8061                           ;MCAL/hal_gpio.c: 77:         ret = (Std_ReturnType)0x00;
  8062   0026B0  0E00               	movlw	0
  8063   0026B2  6E23               	movwf	gpio_pin_write_logic@ret^0,c
  8064                           
  8065                           ;MCAL/hal_gpio.c: 78:     }
  8066   0026B4  EFD0  F013         	goto	l7078
  8067   0026B8                     l7070:
  8068                           
  8069                           ;MCAL/hal_gpio.c: 82:                 (*lat_registers[_pin_config->port] |= ((uint8) 1<<
      +                          _pin_config->pin));
  8070   0026B8  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  8071   0026BC  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  8072   0026C0  30DF               	rrcf	223,w,c
  8073   0026C2  32E8               	rrcf	wreg,f,c
  8074   0026C4  32E8               	rrcf	wreg,f,c
  8075   0026C6  0B07               	andlw	7
  8076   0026C8  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  8077   0026CA  0E01               	movlw	1
  8078   0026CC  6E1E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8079   0026CE  2A1D               	incf	??_gpio_pin_write_logic^0,f,c
  8080   0026D0  EF6C  F013         	goto	u5104
  8081   0026D4                     u5105:
  8082   0026D4  90D8               	bcf	status,0,c
  8083   0026D6  361E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8084   0026D8                     u5104:
  8085   0026D8  2E1D               	decfsz	??_gpio_pin_write_logic^0,f,c
  8086   0026DA  EF6A  F013         	goto	u5105
  8087   0026DE  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  8088   0026E2  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  8089   0026E6  50DF               	movf	223,w,c
  8090   0026E8  0B07               	andlw	7
  8091   0026EA  6E1F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  8092   0026EC  501F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  8093   0026EE  0D02               	mullw	2
  8094   0026F0  0EE7               	movlw	low _lat_registers
  8095   0026F2  24F3               	addwf	243,w,c
  8096   0026F4  6ED9               	movwf	fsr2l,c
  8097   0026F6  0E00               	movlw	high _lat_registers
  8098   0026F8  20F4               	addwfc	prodh,w,c
  8099   0026FA  6EDA               	movwf	fsr2h,c
  8100   0026FC  CFDE F020          	movff	postinc2,??_gpio_pin_write_logic+3
  8101   002700  CFDD F021          	movff	postdec2,??_gpio_pin_write_logic+4
  8102   002704  C020  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  8103   002708  C021  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  8104   00270C  501E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8105   00270E  12DF               	iorwf	indf2,f,c
  8106                           
  8107                           ;MCAL/hal_gpio.c: 83:                 break;
  8108   002710  EFD0  F013         	goto	l7078
  8109   002714                     l7072:
  8110                           
  8111                           ;MCAL/hal_gpio.c: 85:                 (*lat_registers[_pin_config->port] &= ~((uint8) 1<
      +                          <_pin_config->pin));
  8112   002714  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  8113   002718  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  8114   00271C  30DF               	rrcf	223,w,c
  8115   00271E  32E8               	rrcf	wreg,f,c
  8116   002720  32E8               	rrcf	wreg,f,c
  8117   002722  0B07               	andlw	7
  8118   002724  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  8119   002726  0E01               	movlw	1
  8120   002728  6E1E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8121   00272A  2A1D               	incf	??_gpio_pin_write_logic^0,f,c
  8122   00272C  EF9A  F013         	goto	u5114
  8123   002730                     u5115:
  8124   002730  90D8               	bcf	status,0,c
  8125   002732  361E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8126   002734                     u5114:
  8127   002734  2E1D               	decfsz	??_gpio_pin_write_logic^0,f,c
  8128   002736  EF98  F013         	goto	u5115
  8129   00273A  501E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8130   00273C  0AFF               	xorlw	255
  8131   00273E  6E1F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  8132   002740  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  8133   002744  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  8134   002748  50DF               	movf	223,w,c
  8135   00274A  0B07               	andlw	7
  8136   00274C  6E20               	movwf	(??_gpio_pin_write_logic+3)^0,c
  8137   00274E  5020               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  8138   002750  0D02               	mullw	2
  8139   002752  0EE7               	movlw	low _lat_registers
  8140   002754  24F3               	addwf	243,w,c
  8141   002756  6ED9               	movwf	fsr2l,c
  8142   002758  0E00               	movlw	high _lat_registers
  8143   00275A  20F4               	addwfc	prodh,w,c
  8144   00275C  6EDA               	movwf	fsr2h,c
  8145   00275E  CFDE F021          	movff	postinc2,??_gpio_pin_write_logic+4
  8146   002762  CFDD F022          	movff	postdec2,??_gpio_pin_write_logic+5
  8147   002766  C021  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  8148   00276A  C022  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  8149   00276E  501F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  8150   002770  16DF               	andwf	indf2,f,c
  8151                           
  8152                           ;MCAL/hal_gpio.c: 86:                 break;
  8153   002772  EFD0  F013         	goto	l7078
  8154   002776                     l7076:
  8155   002776  501C               	movf	gpio_pin_write_logic@logic^0,w,c
  8156   002778  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  8157   00277A  6A1E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  8158                           
  8159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8160                           ; Switch size 1, requested type "simple"
  8161                           ; Number of cases is 1, Range of values is 0 to 0
  8162                           ; switch strategies available:
  8163                           ; Name         Instructions Cycles
  8164                           ; simple_byte            4     3 (average)
  8165                           ;	Chosen strategy is simple_byte
  8166   00277C  501E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8167   00277E  0A00               	xorlw	0	; case 0
  8168   002780  B4D8               	btfsc	status,2,c
  8169   002782  EFC5  F013         	goto	l8520
  8170   002786  EF58  F013         	goto	l7068
  8171   00278A                     l8520:
  8172                           
  8173                           ; Switch size 1, requested type "simple"
  8174                           ; Number of cases is 2, Range of values is 0 to 1
  8175                           ; switch strategies available:
  8176                           ; Name         Instructions Cycles
  8177                           ; simple_byte            7     4 (average)
  8178                           ;	Chosen strategy is simple_byte
  8179   00278A  501D               	movf	??_gpio_pin_write_logic^0,w,c
  8180   00278C  0A00               	xorlw	0	; case 0
  8181   00278E  B4D8               	btfsc	status,2,c
  8182   002790  EF8A  F013         	goto	l7072
  8183   002794  0A01               	xorlw	1	; case 1
  8184   002796  B4D8               	btfsc	status,2,c
  8185   002798  EF5C  F013         	goto	l7070
  8186   00279C  EF58  F013         	goto	l7068
  8187   0027A0                     l7078:
  8188                           
  8189                           ;MCAL/hal_gpio.c: 90:     return ret;
  8190   0027A0  5023               	movf	gpio_pin_write_logic@ret^0,w,c
  8191   0027A2  0012               	return		;funcret
  8192   0027A4                     __end_of_gpio_pin_write_logic:
  8193                           	callstack 0
  8194                           
  8195 ;; *************** function _EUART_Send_String *****************
  8196 ;; Defined at:
  8197 ;;		line 3 in file "Modules/UART_Logging_Print/UART_Log.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  text            2   26[COMRAM] PTR unsigned char 
  8200 ;;		 -> STR_7(7), STR_5(7), STR_1(29), 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;Total ram usage:        2 bytes
  8217 ;; Hardware stack levels used: 1
  8218 ;; Hardware stack levels required when called: 8
  8219 ;; This function calls:
  8220 ;;		_EUSART_Write
  8221 ;; This function is called by:
  8222 ;;		_main
  8223 ;;		_Print_RTC_Date_Time
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text47
  8228   003934                     __ptext47:
  8229                           	callstack 0
  8230   003934                     _EUART_Send_String:
  8231                           	callstack 21
  8232   003934                     
  8233                           ;Modules/UART_Logging_Print/UART_Log.c: 4:     while(*text !='\0'){
  8234   003934  EFA7  F01C         	goto	l7634
  8235   003938                     l7630:
  8236                           
  8237                           ;Modules/UART_Logging_Print/UART_Log.c: 5:         EUSART_Write(*text++);
  8238   003938  C01B  FFF6         	movff	EUART_Send_String@text,tblptrl
  8239   00393C  C01C  FFF7         	movff	EUART_Send_String@text+1,tblptrh
  8240   003940                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8241   003940  6AF8               	clrf	tblptru,c
  8242   003942                     	endif
  8243   003942                     	if	0	;tblptru may be non-zero
  8244   003942                     	endif
  8245   003942  0008               	tblrd		*
  8246   003944  50F5               	movf	tablat,w,c
  8247   003946  EC4B  F01E         	call	_EUSART_Write
  8248   00394A  4A1B               	infsnz	EUART_Send_String@text^0,f,c
  8249   00394C  2A1C               	incf	(EUART_Send_String@text+1)^0,f,c
  8250   00394E                     l7634:
  8251                           
  8252                           ;Modules/UART_Logging_Print/UART_Log.c: 4:     while(*text !='\0'){
  8253   00394E  C01B  FFF6         	movff	EUART_Send_String@text,tblptrl
  8254   003952  C01C  FFF7         	movff	EUART_Send_String@text+1,tblptrh
  8255   003956                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8256   003956  6AF8               	clrf	tblptru,c
  8257   003958                     	endif
  8258   003958                     	if	0	;tblptru may be non-zero
  8259   003958                     	endif
  8260   003958  0008               	tblrd		*
  8261   00395A  50F5               	movf	tablat,w,c
  8262   00395C  0900               	iorlw	0
  8263   00395E  A4D8               	btfss	status,2,c
  8264   003960  EFB4  F01C         	goto	u5901
  8265   003964  EFB6  F01C         	goto	u5900
  8266   003968                     u5901:
  8267   003968  EF9C  F01C         	goto	l7630
  8268   00396C                     u5900:
  8269   00396C  0012               	return		;funcret
  8270   00396E                     __end_of_EUART_Send_String:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function _EUSART_Write *****************
  8274 ;; Defined at:
  8275 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  txData          1    wreg     unsigned char 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  txData          1   25[COMRAM] unsigned char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		wreg
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;Total ram usage:        1 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; Hardware stack levels required when called: 7
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		_Print_RTC_Date_Time
  8300 ;;		_EUART_Send_String
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text48
  8305   003C96                     __ptext48:
  8306                           	callstack 0
  8307   003C96                     _EUSART_Write:
  8308                           	callstack 22
  8309                           
  8310                           ;incstack = 0
  8311                           ;EUSART_Write@txData stored from wreg
  8312   003C96  6E1A               	movwf	EUSART_Write@txData^0,c
  8313   003C98                     l171:
  8314                           
  8315                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
  8316   003C98  A89E               	btfss	158,4,c	;volatile
  8317   003C9A  EF51  F01E         	goto	u5801
  8318   003C9E  EF53  F01E         	goto	u5800
  8319   003CA2                     u5801:
  8320   003CA2  EF4C  F01E         	goto	l171
  8321   003CA6                     u5800:
  8322   003CA6                     
  8323                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  8324   003CA6  C01A  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  8325   003CAA  0012               	return		;funcret
  8326   003CAC                     __end_of_EUSART_Write:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function _EEPROM_Write_1Byte *****************
  8330 ;; Defined at:
  8331 ;;		line 5 in file "Modules/EEPROM/EEPROM.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  address         1    wreg     unsigned char 
  8334 ;;  reg             1   37[COMRAM] unsigned char 
  8335 ;;  data            1   38[COMRAM] unsigned char 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  address         1   39[COMRAM] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;Total ram usage:        3 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 11
  8354 ;; This function calls:
  8355 ;;		_I2C_Write1ByteRegister
  8356 ;; This function is called by:
  8357 ;;		_main
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text49
  8362   003CE8                     __ptext49:
  8363                           	callstack 0
  8364   003CE8                     _EEPROM_Write_1Byte:
  8365                           	callstack 19
  8366                           
  8367                           ;incstack = 0
  8368                           ;EEPROM_Write_1Byte@address stored from wreg
  8369   003CE8  6E28               	movwf	EEPROM_Write_1Byte@address^0,c
  8370   003CEA                     
  8371                           ;Modules/EEPROM/EEPROM.c: 6:     I2C_Write1ByteRegister(address,reg,data);
  8372   003CEA  C026  F023         	movff	EEPROM_Write_1Byte@reg,I2C_Write1ByteRegister@reg
  8373   003CEE  C027  F024         	movff	EEPROM_Write_1Byte@data,I2C_Write1ByteRegister@data
  8374   003CF2  5028               	movf	EEPROM_Write_1Byte@address^0,w,c
  8375   003CF4  EC9E  F01A         	call	_I2C_Write1ByteRegister
  8376   003CF8  0012               	return		;funcret
  8377   003CFA                     __end_of_EEPROM_Write_1Byte:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function _I2C_Write1ByteRegister *****************
  8381 ;; Defined at:
  8382 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  address         1    wreg     unsigned char 
  8385 ;;  reg             1   34[COMRAM] unsigned char 
  8386 ;;  data            1   35[COMRAM] unsigned char 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;  address         1   36[COMRAM] unsigned char 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8402 ;;Total ram usage:        3 bytes
  8403 ;; Hardware stack levels used: 1
  8404 ;; Hardware stack levels required when called: 10
  8405 ;; This function calls:
  8406 ;;		_I2C_Close
  8407 ;;		_I2C_MasterWrite
  8408 ;;		_I2C_Open
  8409 ;;		_I2C_SetAddressNackCallback
  8410 ;;		_I2C_SetBuffer
  8411 ;;		_I2C_SetDataCompleteCallback
  8412 ;; This function is called by:
  8413 ;;		_main
  8414 ;;		_EEPROM_Write_1Byte
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text50
  8419   00353C                     __ptext50:
  8420                           	callstack 0
  8421   00353C                     _I2C_Write1ByteRegister:
  8422                           	callstack 20
  8423                           
  8424                           ;incstack = 0
  8425                           ;I2C_Write1ByteRegister@address stored from wreg
  8426   00353C  6E25               	movwf	I2C_Write1ByteRegister@address^0,c
  8427   00353E                     l5678:
  8428   00353E  5025               	movf	I2C_Write1ByteRegister@address^0,w,c
  8429   003540  EC91  F017         	call	_I2C_Open
  8430   003544  0900               	iorlw	0
  8431   003546  B4D8               	btfsc	status,2,c
  8432   003548  EFA8  F01A         	goto	u3821
  8433   00354C  EFAA  F01A         	goto	u3820
  8434   003550                     u3821:
  8435   003550  EF9F  F01A         	goto	l5678
  8436   003554                     u3820:
  8437   003554                     
  8438                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  8439   003554  0EF8               	movlw	low _wr1RegCompleteHandler
  8440   003556  6E1F               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  8441   003558  0E3A               	movlw	high _wr1RegCompleteHandler
  8442   00355A  6E20               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  8443   00355C  0E24               	movlw	low I2C_Write1ByteRegister@data
  8444   00355E  6E21               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  8445   003560  0E00               	movlw	high I2C_Write1ByteRegister@data
  8446   003562  6E22               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  8447   003564  EC1C  F01E         	call	_I2C_SetDataCompleteCallback	;wreg free
  8448   003568                     
  8449                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  8450   003568  0E23               	movlw	low I2C_Write1ByteRegister@reg
  8451   00356A  6E1A               	movwf	I2C_SetBuffer@buffer^0,c
  8452   00356C  0E00               	movlw	high I2C_Write1ByteRegister@reg
  8453   00356E  6E1B               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  8454   003570  0E00               	movlw	0
  8455   003572  6E1D               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  8456   003574  0E01               	movlw	1
  8457   003576  6E1C               	movwf	I2C_SetBuffer@bufferSize^0,c
  8458   003578  ECE7  F01D         	call	_I2C_SetBuffer	;wreg free
  8459   00357C                     
  8460                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  8461   00357C  0E00               	movlw	0
  8462   00357E  6E1F               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8463   003580  0E00               	movlw	0
  8464   003582  6E20               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8465   003584  0E00               	movlw	0
  8466   003586  6E21               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8467   003588  0E00               	movlw	0
  8468   00358A  6E22               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8469   00358C  EC28  F01E         	call	_I2C_SetAddressNackCallback	;wreg free
  8470   003590                     
  8471                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  8472   003590  ECCE  F01E         	call	_I2C_MasterWrite	;wreg free
  8473   003594                     l5688:
  8474   003594  EC66  F01D         	call	_I2C_Close	;wreg free
  8475   003598  06E8               	decf	wreg,f,c
  8476   00359A  B4D8               	btfsc	status,2,c
  8477   00359C  EFD2  F01A         	goto	u3831
  8478   0035A0  EFD4  F01A         	goto	u3830
  8479   0035A4                     u3831:
  8480   0035A4  EFCA  F01A         	goto	l5688
  8481   0035A8                     u3830:
  8482   0035A8  0012               	return		;funcret
  8483   0035AA                     __end_of_I2C_Write1ByteRegister:
  8484                           	callstack 0
  8485                           
  8486 ;; *************** function _EEPROM_Read_1Byte *****************
  8487 ;; Defined at:
  8488 ;;		line 2 in file "Modules/EEPROM/EEPROM.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  address         1    wreg     unsigned char 
  8491 ;;  reg             1   37[COMRAM] unsigned char 
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  address         1   38[COMRAM] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      unsigned char 
  8496 ;; Registers used:
  8497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8503 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;Total ram usage:        2 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; Hardware stack levels required when called: 11
  8510 ;; This function calls:
  8511 ;;		_I2C_Read1ByteRegister
  8512 ;; This function is called by:
  8513 ;;		_main
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text51
  8518   003D18                     __ptext51:
  8519                           	callstack 0
  8520   003D18                     _EEPROM_Read_1Byte:
  8521                           	callstack 19
  8522                           
  8523                           ;incstack = 0
  8524                           ;EEPROM_Read_1Byte@address stored from wreg
  8525   003D18  6E27               	movwf	EEPROM_Read_1Byte@address^0,c
  8526   003D1A                     
  8527                           ;Modules/EEPROM/EEPROM.c: 3:     return I2C_Read1ByteRegister(address,reg);
  8528   003D1A  C026  F023         	movff	EEPROM_Read_1Byte@reg,I2C_Read1ByteRegister@reg
  8529   003D1E  5027               	movf	EEPROM_Read_1Byte@address^0,w,c
  8530   003D20  EC2C  F01A         	call	_I2C_Read1ByteRegister
  8531   003D24  0012               	return		;funcret
  8532   003D26                     __end_of_EEPROM_Read_1Byte:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function _I2C_Read1ByteRegister *****************
  8536 ;; Defined at:
  8537 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  address         1    wreg     unsigned char 
  8540 ;;  reg             1   34[COMRAM] unsigned char 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  address         1   35[COMRAM] unsigned char 
  8543 ;;  returnValue     1   36[COMRAM] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      unsigned char 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8553 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;Total ram usage:        3 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 10
  8560 ;; This function calls:
  8561 ;;		_I2C_Close
  8562 ;;		_I2C_MasterWrite
  8563 ;;		_I2C_Open
  8564 ;;		_I2C_SetAddressNackCallback
  8565 ;;		_I2C_SetBuffer
  8566 ;;		_I2C_SetDataCompleteCallback
  8567 ;; This function is called by:
  8568 ;;		_EEPROM_Read_1Byte
  8569 ;;		_Set_RTC_Date_Time
  8570 ;;		_Read_Temprature
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           	psect	text52
  8575   003458                     __ptext52:
  8576                           	callstack 0
  8577   003458                     _I2C_Read1ByteRegister:
  8578                           	callstack 19
  8579                           
  8580                           ;incstack = 0
  8581                           ;I2C_Read1ByteRegister@address stored from wreg
  8582   003458  6E24               	movwf	I2C_Read1ByteRegister@address^0,c
  8583   00345A                     
  8584                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  8585   00345A  0E00               	movlw	0
  8586   00345C  6E25               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  8587   00345E                     l5660:
  8588   00345E  5024               	movf	I2C_Read1ByteRegister@address^0,w,c
  8589   003460  EC91  F017         	call	_I2C_Open
  8590   003464  0900               	iorlw	0
  8591   003466  B4D8               	btfsc	status,2,c
  8592   003468  EF38  F01A         	goto	u3801
  8593   00346C  EF3A  F01A         	goto	u3800
  8594   003470                     u3801:
  8595   003470  EF2F  F01A         	goto	l5660
  8596   003474                     u3800:
  8597   003474                     
  8598                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  8599   003474  0E50               	movlw	low _rd1RegCompleteHandler
  8600   003476  6E1F               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  8601   003478  0E3B               	movlw	high _rd1RegCompleteHandler
  8602   00347A  6E20               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  8603   00347C  0E25               	movlw	low I2C_Read1ByteRegister@returnValue
  8604   00347E  6E21               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  8605   003480  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  8606   003482  6E22               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  8607   003484  EC1C  F01E         	call	_I2C_SetDataCompleteCallback	;wreg free
  8608   003488                     
  8609                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  8610   003488  0E23               	movlw	low I2C_Read1ByteRegister@reg
  8611   00348A  6E1A               	movwf	I2C_SetBuffer@buffer^0,c
  8612   00348C  0E00               	movlw	high I2C_Read1ByteRegister@reg
  8613   00348E  6E1B               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  8614   003490  0E00               	movlw	0
  8615   003492  6E1D               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  8616   003494  0E01               	movlw	1
  8617   003496  6E1C               	movwf	I2C_SetBuffer@bufferSize^0,c
  8618   003498  ECE7  F01D         	call	_I2C_SetBuffer	;wreg free
  8619   00349C                     
  8620                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  8621   00349C  0E00               	movlw	0
  8622   00349E  6E1F               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8623   0034A0  0E00               	movlw	0
  8624   0034A2  6E20               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8625   0034A4  0E00               	movlw	0
  8626   0034A6  6E21               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8627   0034A8  0E00               	movlw	0
  8628   0034AA  6E22               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8629   0034AC  EC28  F01E         	call	_I2C_SetAddressNackCallback	;wreg free
  8630   0034B0                     
  8631                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  8632   0034B0  ECCE  F01E         	call	_I2C_MasterWrite	;wreg free
  8633   0034B4                     l5670:
  8634   0034B4  EC66  F01D         	call	_I2C_Close	;wreg free
  8635   0034B8  06E8               	decf	wreg,f,c
  8636   0034BA  B4D8               	btfsc	status,2,c
  8637   0034BC  EF62  F01A         	goto	u3811
  8638   0034C0  EF64  F01A         	goto	u3810
  8639   0034C4                     u3811:
  8640   0034C4  EF5A  F01A         	goto	l5670
  8641   0034C8                     u3810:
  8642   0034C8                     
  8643                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  8644   0034C8  5025               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  8645   0034CA  0012               	return		;funcret
  8646   0034CC                     __end_of_I2C_Read1ByteRegister:
  8647                           	callstack 0
  8648                           
  8649 ;; *************** function _I2C_SetDataCompleteCallback *****************
  8650 ;; Defined at:
  8651 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  cb              2   30[COMRAM] PTR FTN(PTR void ,)enum 
  8654 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8655 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8656 ;;  ptr             2   32[COMRAM] PTR void 
  8657 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8658 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;Total ram usage:        4 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; Hardware stack levels required when called: 8
  8677 ;; This function calls:
  8678 ;;		_I2C_SetCallback
  8679 ;; This function is called by:
  8680 ;;		_I2C_Read1ByteRegister
  8681 ;;		_I2C_Write1ByteRegister
  8682 ;;		_I2C_Read2ByteRegister
  8683 ;;		_I2C_Write2ByteRegister
  8684 ;;		_I2C_ReadDataBlock
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text53
  8689   003C38                     __ptext53:
  8690                           	callstack 0
  8691   003C38                     _I2C_SetDataCompleteCallback:
  8692                           	callstack 20
  8693   003C38                     
  8694                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  8695   003C38  C01F  F01A         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  8696   003C3C  C020  F01B         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  8697   003C40  C021  F01C         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  8698   003C44  C022  F01D         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  8699   003C48  0E00               	movlw	0
  8700   003C4A  ECB6  F019         	call	_I2C_SetCallback
  8701   003C4E  0012               	return		;funcret
  8702   003C50                     __end_of_I2C_SetDataCompleteCallback:
  8703                           	callstack 0
  8704                           
  8705 ;; *************** function _I2C_SetBuffer *****************
  8706 ;; Defined at:
  8707 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  buffer          2   25[COMRAM] PTR void 
  8710 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8711 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8712 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  8713 ;;  bufferSize      2   27[COMRAM] unsigned int 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      void 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;Total ram usage:        4 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 7
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_I2C_Read1ByteRegister
  8736 ;;		_I2C_Write1ByteRegister
  8737 ;;		_I2C_Read2ByteRegister
  8738 ;;		_I2C_Write2ByteRegister
  8739 ;;		_I2C_WriteNBytes
  8740 ;;		_I2C_ReadNBytes
  8741 ;;		_I2C_ReadDataBlock
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text54
  8746   003BCE                     __ptext54:
  8747                           	callstack 0
  8748   003BCE                     _I2C_SetBuffer:
  8749                           	callstack 21
  8750   003BCE                     
  8751                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8752   003BCE  0100               	movlb	0	; () banked
  8753   003BD0  A7CC               	btfss	(_I2C_Status+35)& (0+255),3,b
  8754   003BD2  EFED  F01D         	goto	u3611
  8755   003BD6  EFEF  F01D         	goto	u3610
  8756   003BDA                     u3611:
  8757   003BDA  EFF8  F01D         	goto	l479
  8758   003BDE                     u3610:
  8759   003BDE                     
  8760                           ; BSR set to: 0
  8761                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8762   003BDE  C01A  F0C6         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  8763   003BE2  C01B  F0C7         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  8764   003BE6                     
  8765                           ; BSR set to: 0
  8766                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8767   003BE6  C01C  F0C8         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  8768   003BEA  C01D  F0C9         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  8769   003BEE                     
  8770                           ; BSR set to: 0
  8771                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8772   003BEE  97CC               	bcf	(_I2C_Status+35)& (0+255),3,b
  8773   003BF0                     l479:
  8774                           
  8775                           ; BSR set to: 0
  8776   003BF0  0012               	return		;funcret
  8777   003BF2                     __end_of_I2C_SetBuffer:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _I2C_SetAddressNackCallback *****************
  8781 ;; Defined at:
  8782 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  cb              2   30[COMRAM] PTR FTN(PTR void ,)enum 
  8785 ;;		 -> NULL(1), 
  8786 ;;  ptr             2   32[COMRAM] PTR void 
  8787 ;;		 -> NULL(0), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;Total ram usage:        4 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 8
  8806 ;; This function calls:
  8807 ;;		_I2C_SetCallback
  8808 ;; This function is called by:
  8809 ;;		_I2C_Read1ByteRegister
  8810 ;;		_I2C_Write1ByteRegister
  8811 ;;		_I2C_Read2ByteRegister
  8812 ;;		_I2C_Write2ByteRegister
  8813 ;;		_I2C_WriteNBytes
  8814 ;;		_I2C_ReadDataBlock
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text55
  8819   003C50                     __ptext55:
  8820                           	callstack 0
  8821   003C50                     _I2C_SetAddressNackCallback:
  8822                           	callstack 20
  8823   003C50                     
  8824                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8825   003C50  C01F  F01A         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  8826   003C54  C020  F01B         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  8827   003C58  C021  F01C         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  8828   003C5C  C022  F01D         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  8829   003C60  0E02               	movlw	2
  8830   003C62  ECB6  F019         	call	_I2C_SetCallback
  8831   003C66  0012               	return		;funcret
  8832   003C68                     __end_of_I2C_SetAddressNackCallback:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _I2C_SetCallback *****************
  8836 ;; Defined at:
  8837 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  idx             1    wreg     enum E3139
  8840 ;;  cb              2   25[COMRAM] PTR FTN(PTR void ,)enum 
  8841 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8842 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8843 ;;  ptr             2   27[COMRAM] PTR void 
  8844 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8845 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  idx             1   29[COMRAM] enum E3139
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;Total ram usage:        5 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; Hardware stack levels required when called: 7
  8864 ;; This function calls:
  8865 ;;		Nothing
  8866 ;; This function is called by:
  8867 ;;		_I2C_SetDataCompleteCallback
  8868 ;;		_I2C_SetAddressNackCallback
  8869 ;;		_I2C_SetWriteCollisionCallback
  8870 ;;		_I2C_SetDataNackCallback
  8871 ;;		_I2C_SetTimeoutCallback
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text56
  8876   00336C                     __ptext56:
  8877                           	callstack 0
  8878   00336C                     _I2C_SetCallback:
  8879                           	callstack 20
  8880                           
  8881                           ;incstack = 0
  8882                           ;I2C_SetCallback@idx stored from wreg
  8883   00336C  6E1E               	movwf	I2C_SetCallback@idx^0,c
  8884   00336E                     
  8885                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  8886   00336E  501A               	movf	I2C_SetCallback@cb^0,w,c
  8887   003370  101B               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  8888   003372  B4D8               	btfsc	status,2,c
  8889   003374  EFBE  F019         	goto	u3431
  8890   003378  EFC0  F019         	goto	u3430
  8891   00337C                     u3431:
  8892   00337C  EFDA  F019         	goto	l5054
  8893   003380                     u3430:
  8894   003380                     
  8895                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  8896   003380  501E               	movf	I2C_SetCallback@idx^0,w,c
  8897   003382  0D02               	mullw	2
  8898   003384  0EA9               	movlw	low _I2C_Status
  8899   003386  24F3               	addwf	243,w,c
  8900   003388  6ED9               	movwf	fsr2l,c
  8901   00338A  0E00               	movlw	high _I2C_Status
  8902   00338C  20F4               	addwfc	prodh,w,c
  8903   00338E  6EDA               	movwf	fsr2h,c
  8904   003390  C01A  FFDE         	movff	I2C_SetCallback@cb,postinc2
  8905   003394  C01B  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  8906                           
  8907                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  8908   003398  501E               	movf	I2C_SetCallback@idx^0,w,c
  8909   00339A  0D02               	mullw	2
  8910   00339C  0EB5               	movlw	low (_I2C_Status+12)
  8911   00339E  24F3               	addwf	243,w,c
  8912   0033A0  6ED9               	movwf	fsr2l,c
  8913   0033A2  0E00               	movlw	high (_I2C_Status+12)
  8914   0033A4  20F4               	addwfc	prodh,w,c
  8915   0033A6  6EDA               	movwf	fsr2h,c
  8916   0033A8  C01C  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  8917   0033AC  C01D  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  8918                           
  8919                           ;mcc_generated_files/i2c_master.c: 310:     }
  8920   0033B0  EFF0  F019         	goto	l502
  8921   0033B4                     l5054:
  8922                           
  8923                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8924   0033B4  501E               	movf	I2C_SetCallback@idx^0,w,c
  8925   0033B6  0D02               	mullw	2
  8926   0033B8  0EA9               	movlw	low _I2C_Status
  8927   0033BA  24F3               	addwf	243,w,c
  8928   0033BC  6ED9               	movwf	fsr2l,c
  8929   0033BE  0E00               	movlw	high _I2C_Status
  8930   0033C0  20F4               	addwfc	prodh,w,c
  8931   0033C2  6EDA               	movwf	fsr2h,c
  8932   0033C4  0E24               	movlw	low _I2C_CallbackReturnStop
  8933   0033C6  6EDE               	movwf	postinc2,c
  8934   0033C8  0E3E               	movlw	high _I2C_CallbackReturnStop
  8935   0033CA  6EDD               	movwf	postdec2,c
  8936                           
  8937                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8938   0033CC  501E               	movf	I2C_SetCallback@idx^0,w,c
  8939   0033CE  0D02               	mullw	2
  8940   0033D0  0EB5               	movlw	low (_I2C_Status+12)
  8941   0033D2  24F3               	addwf	243,w,c
  8942   0033D4  6ED9               	movwf	fsr2l,c
  8943   0033D6  0E00               	movlw	high (_I2C_Status+12)
  8944   0033D8  20F4               	addwfc	prodh,w,c
  8945   0033DA  6EDA               	movwf	fsr2h,c
  8946   0033DC  6ADE               	clrf	postinc2,c
  8947   0033DE  6ADD               	clrf	postdec2,c
  8948   0033E0                     l502:
  8949   0033E0  0012               	return		;funcret
  8950   0033E2                     __end_of_I2C_SetCallback:
  8951                           	callstack 0
  8952                           
  8953 ;; *************** function _I2C_Open *****************
  8954 ;; Defined at:
  8955 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  address         1    wreg     unsigned char 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  address         1   27[COMRAM] unsigned char 
  8960 ;;  returnValue     1   28[COMRAM] enum E358
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      enum E358
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;Total ram usage:        2 bytes
  8975 ;; Hardware stack levels used: 1
  8976 ;; Hardware stack levels required when called: 8
  8977 ;; This function calls:
  8978 ;;		_I2C_MasterClearIrq
  8979 ;;		_I2C_MasterEnableIrq
  8980 ;;		_I2C_MasterOpen
  8981 ;;		_I2C_SetInterruptHandler
  8982 ;; This function is called by:
  8983 ;;		_I2C_Read1ByteRegister
  8984 ;;		_I2C_Write1ByteRegister
  8985 ;;		_I2C_Read2ByteRegister
  8986 ;;		_I2C_Write2ByteRegister
  8987 ;;		_I2C_WriteNBytes
  8988 ;;		_I2C_ReadNBytes
  8989 ;;		_I2C_ReadDataBlock
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text57
  8994   002F22                     __ptext57:
  8995                           	callstack 0
  8996   002F22                     _I2C_Open:
  8997                           	callstack 20
  8998                           
  8999                           ;incstack = 0
  9000                           ;I2C_Open@address stored from wreg
  9001   002F22  6E1C               	movwf	I2C_Open@address^0,c
  9002   002F24                     
  9003                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9004   002F24  0E01               	movlw	1
  9005   002F26  6E1D               	movwf	I2C_Open@returnValue^0,c
  9006   002F28                     
  9007                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  9008   002F28  0100               	movlb	0	; () banked
  9009   002F2A  B5CC               	btfsc	(_I2C_Status+35)& (0+255),2,b
  9010   002F2C  EF9A  F017         	goto	u3601
  9011   002F30  EF9C  F017         	goto	u3600
  9012   002F34                     u3601:
  9013   002F34  EFDE  F017         	goto	l5408
  9014   002F38                     u3600:
  9015   002F38                     
  9016                           ; BSR set to: 0
  9017                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  9018   002F38  C01C  F0C5         	movff	I2C_Open@address,_I2C_Status+28
  9019   002F3C                     
  9020                           ; BSR set to: 0
  9021                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  9022   002F3C  93CC               	bcf	(_I2C_Status+35)& (0+255),1,b
  9023   002F3E                     
  9024                           ; BSR set to: 0
  9025                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  9026   002F3E  85CC               	bsf	(_I2C_Status+35)& (0+255),2,b
  9027   002F40                     
  9028                           ; BSR set to: 0
  9029                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  9030   002F40  91CC               	bcf	(_I2C_Status+35)& (0+255),0,b
  9031   002F42                     
  9032                           ; BSR set to: 0
  9033                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  9034   002F42  0E0E               	movlw	14
  9035   002F44  6FCA               	movwf	(_I2C_Status+33)& (0+255),b
  9036   002F46                     
  9037                           ; BSR set to: 0
  9038                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  9039   002F46  0E01               	movlw	1
  9040   002F48  6FC4               	movwf	(_I2C_Status+27)& (0+255),b
  9041   002F4A  0EF4               	movlw	244
  9042   002F4C  6FC3               	movwf	(_I2C_Status+26)& (0+255),b
  9043   002F4E                     
  9044                           ; BSR set to: 0
  9045                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  9046   002F4E  87CC               	bsf	(_I2C_Status+35)& (0+255),3,b
  9047   002F50                     
  9048                           ; BSR set to: 0
  9049                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  9050   002F50  0E24               	movlw	low _I2C_CallbackReturnStop
  9051   002F52  6FA9               	movwf	_I2C_Status& (0+255),b
  9052   002F54  0E3E               	movlw	high _I2C_CallbackReturnStop
  9053   002F56  6FAA               	movwf	(_I2C_Status+1)& (0+255),b
  9054   002F58                     
  9055                           ; BSR set to: 0
  9056                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  9057   002F58  0E00               	movlw	0
  9058   002F5A  6FB5               	movwf	(_I2C_Status+12)& (0+255),b
  9059   002F5C  0E00               	movlw	0
  9060   002F5E  6FB6               	movwf	(_I2C_Status+13)& (0+255),b
  9061   002F60                     
  9062                           ; BSR set to: 0
  9063                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  9064   002F60  0E24               	movlw	low _I2C_CallbackReturnStop
  9065   002F62  6FAB               	movwf	(_I2C_Status+2)& (0+255),b
  9066   002F64  0E3E               	movlw	high _I2C_CallbackReturnStop
  9067   002F66  6FAC               	movwf	(_I2C_Status+3)& (0+255),b
  9068   002F68                     
  9069                           ; BSR set to: 0
  9070                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  9071   002F68  0E00               	movlw	0
  9072   002F6A  6FB7               	movwf	(_I2C_Status+14)& (0+255),b
  9073   002F6C  0E00               	movlw	0
  9074   002F6E  6FB8               	movwf	(_I2C_Status+15)& (0+255),b
  9075   002F70                     
  9076                           ; BSR set to: 0
  9077                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  9078   002F70  0E24               	movlw	low _I2C_CallbackReturnStop
  9079   002F72  6FAD               	movwf	(_I2C_Status+4)& (0+255),b
  9080   002F74  0E3E               	movlw	high _I2C_CallbackReturnStop
  9081   002F76  6FAE               	movwf	(_I2C_Status+5)& (0+255),b
  9082   002F78                     
  9083                           ; BSR set to: 0
  9084                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  9085   002F78  0E00               	movlw	0
  9086   002F7A  6FB9               	movwf	(_I2C_Status+16)& (0+255),b
  9087   002F7C  0E00               	movlw	0
  9088   002F7E  6FBA               	movwf	(_I2C_Status+17)& (0+255),b
  9089   002F80                     
  9090                           ; BSR set to: 0
  9091                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  9092   002F80  0E24               	movlw	low _I2C_CallbackReturnStop
  9093   002F82  6FAF               	movwf	(_I2C_Status+6)& (0+255),b
  9094   002F84  0E3E               	movlw	high _I2C_CallbackReturnStop
  9095   002F86  6FB0               	movwf	(_I2C_Status+7)& (0+255),b
  9096   002F88                     
  9097                           ; BSR set to: 0
  9098                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  9099   002F88  0E00               	movlw	0
  9100   002F8A  6FBB               	movwf	(_I2C_Status+18)& (0+255),b
  9101   002F8C  0E00               	movlw	0
  9102   002F8E  6FBC               	movwf	(_I2C_Status+19)& (0+255),b
  9103   002F90                     
  9104                           ; BSR set to: 0
  9105                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  9106   002F90  0E20               	movlw	low _I2C_CallbackReturnReset
  9107   002F92  6FB1               	movwf	(_I2C_Status+8)& (0+255),b
  9108   002F94  0E3E               	movlw	high _I2C_CallbackReturnReset
  9109   002F96  6FB2               	movwf	(_I2C_Status+9)& (0+255),b
  9110   002F98                     
  9111                           ; BSR set to: 0
  9112                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  9113   002F98  0E00               	movlw	0
  9114   002F9A  6FBD               	movwf	(_I2C_Status+20)& (0+255),b
  9115   002F9C  0E00               	movlw	0
  9116   002F9E  6FBE               	movwf	(_I2C_Status+21)& (0+255),b
  9117   002FA0                     
  9118                           ; BSR set to: 0
  9119                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  9120   002FA0  0EEA               	movlw	low _I2C_MasterIsr
  9121   002FA2  6E1A               	movwf	I2C_SetInterruptHandler@InterruptHandler^0,c
  9122   002FA4  0E3D               	movlw	high _I2C_MasterIsr
  9123   002FA6  6E1B               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)^0,c
  9124   002FA8  ECC5  F01E         	call	_I2C_SetInterruptHandler	;wreg free
  9125   002FAC                     
  9126                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  9127   002FAC  EC06  F01F         	call	_I2C_MasterClearIrq	;wreg free
  9128   002FB0                     
  9129                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  9130   002FB0  EC0B  F01E         	call	_I2C_MasterOpen	;wreg free
  9131   002FB4                     
  9132                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  9133   002FB4  ECFE  F01E         	call	_I2C_MasterEnableIrq	;wreg free
  9134   002FB8                     
  9135                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  9136   002FB8  0E00               	movlw	0
  9137   002FBA  6E1D               	movwf	I2C_Open@returnValue^0,c
  9138   002FBC                     l5408:
  9139                           
  9140                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  9141   002FBC  501D               	movf	I2C_Open@returnValue^0,w,c
  9142   002FBE  0012               	return		;funcret
  9143   002FC0                     __end_of_I2C_Open:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function _I2C_SetInterruptHandler *****************
  9147 ;; Defined at:
  9148 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  InterruptHan    2   25[COMRAM] PTR FTN()void 
  9151 ;;		 -> I2C_MasterIsr(1), 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;Total ram usage:        2 bytes
  9168 ;; Hardware stack levels used: 1
  9169 ;; Hardware stack levels required when called: 7
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_I2C_Open
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text58
  9178   003D8A                     __ptext58:
  9179                           	callstack 0
  9180   003D8A                     _I2C_SetInterruptHandler:
  9181                           	callstack 20
  9182   003D8A                     
  9183                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  9184   003D8A  C01A  F03A         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  9185   003D8E  C01B  F03B         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  9186   003D92  0012               	return		;funcret
  9187   003D94                     __end_of_I2C_SetInterruptHandler:
  9188                           	callstack 0
  9189                           
  9190 ;; *************** function _I2C_MasterOpen *****************
  9191 ;; Defined at:
  9192 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      _Bool 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;Total ram usage:        0 bytes
  9211 ;; Hardware stack levels used: 1
  9212 ;; Hardware stack levels required when called: 7
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_I2C_Open
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text59
  9221   003C16                     __ptext59:
  9222                           	callstack 0
  9223   003C16                     _I2C_MasterOpen:
  9224                           	callstack 20
  9225   003C16                     
  9226                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  9227   003C16  BAC6               	btfsc	198,5,c	;volatile
  9228   003C18  EF10  F01E         	goto	u3401
  9229   003C1C  EF12  F01E         	goto	u3400
  9230   003C20                     u3401:
  9231   003C20  EF1B  F01E         	goto	l621
  9232   003C24                     u3400:
  9233   003C24                     
  9234                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x80;
  9235   003C24  0E80               	movlw	128
  9236   003C26  6EC7               	movwf	199,c	;volatile
  9237                           
  9238                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  9239   003C28  0E08               	movlw	8
  9240   003C2A  6EC6               	movwf	198,c	;volatile
  9241                           
  9242                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  9243   003C2C  0E00               	movlw	0
  9244   003C2E  6EC5               	movwf	197,c	;volatile
  9245                           
  9246                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x27;
  9247   003C30  0E27               	movlw	39
  9248   003C32  6EC8               	movwf	200,c	;volatile
  9249   003C34                     
  9250                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  9251   003C34  8AC6               	bsf	198,5,c	;volatile
  9252   003C36                     l621:
  9253   003C36  0012               	return		;funcret
  9254   003C38                     __end_of_I2C_MasterOpen:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function _I2C_MasterEnableIrq *****************
  9258 ;; Defined at:
  9259 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		None
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 7
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_I2C_Open
  9284 ;;		_I2C_SetTimeOut
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text60
  9289   003DFC                     __ptext60:
  9290                           	callstack 0
  9291   003DFC                     _I2C_MasterEnableIrq:
  9292                           	callstack 20
  9293   003DFC                     
  9294                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  9295   003DFC  869D               	bsf	157,3,c	;volatile
  9296   003DFE  0012               	return		;funcret
  9297   003E00                     __end_of_I2C_MasterEnableIrq:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function _I2C_MasterWrite *****************
  9301 ;; Defined at:
  9302 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      enum E358
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 9
  9323 ;; This function calls:
  9324 ;;		_I2C_MasterOperation
  9325 ;; This function is called by:
  9326 ;;		_I2C_Read1ByteRegister
  9327 ;;		_I2C_Write1ByteRegister
  9328 ;;		_I2C_Read2ByteRegister
  9329 ;;		_I2C_Write2ByteRegister
  9330 ;;		_I2C_WriteNBytes
  9331 ;;		_I2C_ReadDataBlock
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text61
  9336   003D9C                     __ptext61:
  9337                           	callstack 0
  9338   003D9C                     _I2C_MasterWrite:
  9339                           	callstack 19
  9340   003D9C                     
  9341                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9342   003D9C  0E00               	movlw	0
  9343   003D9E  EC3B  F01C         	call	_I2C_MasterOperation
  9344   003DA2  0012               	return		;funcret
  9345   003DA4                     __end_of_I2C_MasterWrite:
  9346                           	callstack 0
  9347                           
  9348 ;; *************** function _I2C_MasterOperation *****************
  9349 ;; Defined at:
  9350 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  read            1    wreg     _Bool 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  read            1   25[COMRAM] _Bool 
  9355 ;;  returnValue     1   26[COMRAM] enum E358
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      enum E358
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, cstack
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;Total ram usage:        2 bytes
  9370 ;; Hardware stack levels used: 1
  9371 ;; Hardware stack levels required when called: 8
  9372 ;; This function calls:
  9373 ;;		_I2C_MasterStart
  9374 ;; This function is called by:
  9375 ;;		_I2C_MasterWrite
  9376 ;;		_I2C_MasterRead
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text62
  9381   003876                     __ptext62:
  9382                           	callstack 0
  9383   003876                     _I2C_MasterOperation:
  9384                           	callstack 19
  9385                           
  9386                           ;incstack = 0
  9387                           ;I2C_MasterOperation@read stored from wreg
  9388   003876  6E1A               	movwf	I2C_MasterOperation@read^0,c
  9389   003878                     
  9390                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9391   003878  0E01               	movlw	1
  9392   00387A  6E1B               	movwf	I2C_MasterOperation@returnValue^0,c
  9393   00387C                     
  9394                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  9395   00387C  0100               	movlb	0	; () banked
  9396   00387E  B3CC               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9397   003880  EF44  F01C         	goto	u3411
  9398   003884  EF46  F01C         	goto	u3410
  9399   003888                     u3411:
  9400   003888  EF59  F01C         	goto	l5046
  9401   00388C                     u3410:
  9402   00388C                     
  9403                           ; BSR set to: 0
  9404                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  9405   00388C  83CC               	bsf	(_I2C_Status+35)& (0+255),1,b
  9406   00388E                     
  9407                           ; BSR set to: 0
  9408                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  9409   00388E  0E00               	movlw	0
  9410   003890  6E1B               	movwf	I2C_MasterOperation@returnValue^0,c
  9411   003892                     
  9412                           ; BSR set to: 0
  9413                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  9414   003892  501A               	movf	I2C_MasterOperation@read^0,w,c
  9415   003894  B4D8               	btfsc	status,2,c
  9416   003896  EF4F  F01C         	goto	u3421
  9417   00389A  EF51  F01C         	goto	u3420
  9418   00389E                     u3421:
  9419   00389E  EF55  F01C         	goto	l5042
  9420   0038A2                     u3420:
  9421   0038A2                     
  9422                           ; BSR set to: 0
  9423                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9424   0038A2  0E01               	movlw	1
  9425   0038A4  6FCA               	movwf	(_I2C_Status+33)& (0+255),b
  9426                           
  9427                           ;mcc_generated_files/i2c_master.c: 237:         }
  9428   0038A6  EF57  F01C         	goto	l5044
  9429   0038AA                     l5042:
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9433   0038AA  0E02               	movlw	2
  9434   0038AC  6FCA               	movwf	(_I2C_Status+33)& (0+255),b
  9435   0038AE                     l5044:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  9439   0038AE  EC00  F01F         	call	_I2C_MasterStart	;wreg free
  9440   0038B2                     l5046:
  9441                           
  9442                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  9443   0038B2  501B               	movf	I2C_MasterOperation@returnValue^0,w,c
  9444   0038B4  0012               	return		;funcret
  9445   0038B6                     __end_of_I2C_MasterOperation:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _I2C_MasterStart *****************
  9449 ;; Defined at:
  9450 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		None
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;Total ram usage:        0 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 7
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		_I2C_MasterOperation
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text63
  9479   003E00                     __ptext63:
  9480                           	callstack 0
  9481   003E00                     _I2C_MasterStart:
  9482                           	callstack 19
  9483   003E00                     
  9484                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  9485   003E00  80C5               	bsf	197,0,c	;volatile
  9486   003E02  0012               	return		;funcret
  9487   003E04                     __end_of_I2C_MasterStart:
  9488                           	callstack 0
  9489                           
  9490 ;; *************** function _I2C_Close *****************
  9491 ;; Defined at:
  9492 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  returnValue     1   25[COMRAM] enum E358
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      enum E358
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;Total ram usage:        1 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 8
  9513 ;; This function calls:
  9514 ;;		_I2C_MasterClearIrq
  9515 ;;		_I2C_MasterClose
  9516 ;;		_I2C_MasterDisableIrq
  9517 ;; This function is called by:
  9518 ;;		_I2C_Read1ByteRegister
  9519 ;;		_I2C_Write1ByteRegister
  9520 ;;		_I2C_Read2ByteRegister
  9521 ;;		_I2C_Write2ByteRegister
  9522 ;;		_I2C_WriteNBytes
  9523 ;;		_I2C_ReadNBytes
  9524 ;;		_I2C_ReadDataBlock
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text64
  9529   003ACC                     __ptext64:
  9530                           	callstack 0
  9531   003ACC                     _I2C_Close:
  9532                           	callstack 20
  9533   003ACC                     
  9534                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  9535   003ACC  0E01               	movlw	1
  9536   003ACE  6E1A               	movwf	I2C_Close@returnValue^0,c
  9537   003AD0                     
  9538                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  9539   003AD0  0100               	movlb	0	; () banked
  9540   003AD2  B3CC               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9541   003AD4  EF6E  F01D         	goto	u3621
  9542   003AD8  EF70  F01D         	goto	u3620
  9543   003ADC                     u3621:
  9544   003ADC  EF7A  F01D         	goto	l5438
  9545   003AE0                     u3620:
  9546   003AE0                     
  9547                           ; BSR set to: 0
  9548                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  9549   003AE0  95CC               	bcf	(_I2C_Status+35)& (0+255),2,b
  9550                           
  9551                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  9552   003AE2  69C5               	setf	(_I2C_Status+28)& (0+255),b
  9553   003AE4                     
  9554                           ; BSR set to: 0
  9555                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  9556   003AE4  EC06  F01F         	call	_I2C_MasterClearIrq	;wreg free
  9557                           
  9558                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  9559   003AE8  EC02  F01F         	call	_I2C_MasterDisableIrq	;wreg free
  9560                           
  9561                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  9562   003AEC  EC04  F01F         	call	_I2C_MasterClose	;wreg free
  9563   003AF0                     
  9564                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  9565   003AF0  C0CB  F01A         	movff	_I2C_Status+34,I2C_Close@returnValue
  9566   003AF4                     l5438:
  9567                           
  9568                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  9569   003AF4  501A               	movf	I2C_Close@returnValue^0,w,c
  9570   003AF6  0012               	return		;funcret
  9571   003AF8                     __end_of_I2C_Close:
  9572                           	callstack 0
  9573                           
  9574 ;; *************** function _I2C_MasterDisableIrq *****************
  9575 ;; Defined at:
  9576 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;		None
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;		None
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  1    wreg      void 
  9583 ;; Registers used:
  9584 ;;		None
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;Total ram usage:        0 bytes
  9595 ;; Hardware stack levels used: 1
  9596 ;; Hardware stack levels required when called: 7
  9597 ;; This function calls:
  9598 ;;		Nothing
  9599 ;; This function is called by:
  9600 ;;		_I2C_Close
  9601 ;;		_I2C_SetTimeOut
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text65
  9606   003E04                     __ptext65:
  9607                           	callstack 0
  9608   003E04                     _I2C_MasterDisableIrq:
  9609                           	callstack 20
  9610   003E04                     
  9611                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  9612   003E04  969D               	bcf	157,3,c	;volatile
  9613   003E06  0012               	return		;funcret
  9614   003E08                     __end_of_I2C_MasterDisableIrq:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function _I2C_MasterClose *****************
  9618 ;; Defined at:
  9619 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		None
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 7
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_I2C_Close
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text66
  9648   003E08                     __ptext66:
  9649                           	callstack 0
  9650   003E08                     _I2C_MasterClose:
  9651                           	callstack 20
  9652   003E08                     
  9653                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  9654   003E08  9AC6               	bcf	198,5,c	;volatile
  9655   003E0A  0012               	return		;funcret
  9656   003E0C                     __end_of_I2C_MasterClose:
  9657                           	callstack 0
  9658                           
  9659 ;; *************** function _I2C_MasterClearIrq *****************
  9660 ;; Defined at:
  9661 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;		None
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		None
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;Total ram usage:        0 bytes
  9680 ;; Hardware stack levels used: 1
  9681 ;; Hardware stack levels required when called: 7
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_I2C_Open
  9686 ;;		_I2C_Close
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text67
  9691   003E0C                     __ptext67:
  9692                           	callstack 0
  9693   003E0C                     _I2C_MasterClearIrq:
  9694                           	callstack 20
  9695   003E0C                     
  9696                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  9697   003E0C  969E               	bcf	158,3,c	;volatile
  9698   003E0E  0012               	return		;funcret
  9699   003E10                     __end_of_I2C_MasterClearIrq:
  9700                           	callstack 0
  9701                           
  9702 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  9703 ;; Defined at:
  9704 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;Total ram usage:       10 bytes
  9723 ;; Hardware stack levels used: 1
  9724 ;; Hardware stack levels required when called: 6
  9725 ;; This function calls:
  9726 ;;		NULL
  9727 ;;		_I2C_MasterIsr
  9728 ;; This function is called by:
  9729 ;;		Interrupt level 2
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	intcode
  9734   000008                     __pintcode:
  9735                           	callstack 0
  9736   000008                     _INTERRUPT_InterruptManagerHigh:
  9737                           	callstack 15
  9738                           
  9739                           ;incstack = 0
  9740   000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9741   00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  9742   00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  9743   000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  9744   000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  9745   00001A  CFF3 F014          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  9746   00001E  CFF4 F015          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  9747   000022  CFF6 F016          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  9748   000026  CFF7 F017          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  9749   00002A  CFF8 F018          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  9750   00002E  CFF5 F019          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  9751   000032                     
  9752                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  9753   000032  A6A0               	btfss	160,3,c	;volatile
  9754   000034  EF1E  F000         	goto	i2u425_41
  9755   000038  EF20  F000         	goto	i2u425_40
  9756   00003C                     i2u425_41:
  9757   00003C  EF35  F000         	goto	i2l238
  9758   000040                     i2u425_40:
  9759   000040  A6A1               	btfss	161,3,c	;volatile
  9760   000042  EF25  F000         	goto	i2u426_41
  9761   000046  EF27  F000         	goto	i2u426_40
  9762   00004A                     i2u426_41:
  9763   00004A  EF35  F000         	goto	i2l238
  9764   00004E                     i2u426_40:
  9765   00004E                     i2l6110:
  9766                           
  9767                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         MSSP_InterruptHandler();
  9768   00004E  D802               	call	i2u427_48
  9769   000050  EF33  F000         	goto	i2u427_49
  9770   000054                     i2u427_48:
  9771   000054  0005               	push	
  9772   000056  6EFA               	movwf	pclath,c
  9773   000058  503A               	movf	_MSSP_InterruptHandler^0,w,c
  9774   00005A  6EFD               	movwf	tosl,c
  9775   00005C  503B               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  9776   00005E  6EFE               	movwf	tosh,c
  9777   000060  6AFF               	clrf	tosu,c
  9778   000062  50FA               	movf	pclath,w,c
  9779   000064  0012               	return		;indir
  9780   000066                     i2u427_49:
  9781                           
  9782                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  9783   000066  EF45  F000         	goto	i2l242
  9784   00006A                     i2l238:
  9785   00006A  A69D               	btfss	157,3,c	;volatile
  9786   00006C  EF3A  F000         	goto	i2u428_41
  9787   000070  EF3C  F000         	goto	i2u428_40
  9788   000074                     i2u428_41:
  9789   000074  EF45  F000         	goto	i2l242
  9790   000078                     i2u428_40:
  9791   000078  A69E               	btfss	158,3,c	;volatile
  9792   00007A  EF41  F000         	goto	i2u429_41
  9793   00007E  EF43  F000         	goto	i2u429_40
  9794   000082                     i2u429_41:
  9795   000082  EF45  F000         	goto	i2l242
  9796   000086                     i2u429_40:
  9797   000086  EF27  F000         	goto	i2l6110
  9798   00008A                     i2l242:
  9799   00008A  C019  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  9800   00008E  C018  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  9801   000092  C017  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  9802   000096  C016  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  9803   00009A  C015  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  9804   00009E  C014  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  9805   0000A2  C013  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  9806   0000A6  C012  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  9807   0000AA  C011  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  9808   0000AE  C010  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  9809   0000B2  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9810   0000B4  0011               	retfie		f
  9811   0000B6                     __end_of_INTERRUPT_InterruptManagerHigh:
  9812                           	callstack 0
  9813                           
  9814 ;; *************** function _I2C_MasterIsr *****************
  9815 ;; Defined at:
  9816 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;		None
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      void 
  9823 ;; Registers used:
  9824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;Total ram usage:        0 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 5
  9837 ;; This function calls:
  9838 ;;		_I2C_MasterFsm
  9839 ;; This function is called by:
  9840 ;;		_I2C_Open
  9841 ;;		_INTERRUPT_InterruptManagerHigh
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text69
  9846   003DEA                     __ptext69:
  9847                           	callstack 0
  9848   003DEA                     _I2C_MasterIsr:
  9849                           	callstack 15
  9850   003DEA                     
  9851                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  9852   003DEA  EC66  F01A         	call	_I2C_MasterFsm	;wreg free
  9853   003DEE  0012               	return		;funcret
  9854   003DF0                     __end_of_I2C_MasterIsr:
  9855                           	callstack 0
  9856                           
  9857 ;; *************** function _I2C_MasterFsm *****************
  9858 ;; Defined at:
  9859 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;Total ram usage:        2 bytes
  9878 ;; Hardware stack levels used: 1
  9879 ;; Hardware stack levels required when called: 4
  9880 ;; This function calls:
  9881 ;;		_I2C_DO_ADDRESS_NACK
  9882 ;;		_I2C_DO_IDLE
  9883 ;;		_I2C_DO_RCEN
  9884 ;;		_I2C_DO_RESET
  9885 ;;		_I2C_DO_RX
  9886 ;;		_I2C_DO_RX_ACK
  9887 ;;		_I2C_DO_RX_NACK_RESTART
  9888 ;;		_I2C_DO_RX_NACK_STOP
  9889 ;;		_I2C_DO_SEND_ADR_READ
  9890 ;;		_I2C_DO_SEND_ADR_WRITE
  9891 ;;		_I2C_DO_SEND_RESTART
  9892 ;;		_I2C_DO_SEND_RESTART_READ
  9893 ;;		_I2C_DO_SEND_RESTART_WRITE
  9894 ;;		_I2C_DO_SEND_STOP
  9895 ;;		_I2C_DO_TX
  9896 ;;		_I2C_DO_TX_EMPTY
  9897 ;;		_I2C_MasterIsNack
  9898 ;;		i2_I2C_MasterClearIrq
  9899 ;; This function is called by:
  9900 ;;		_I2C_MasterIsr
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text70
  9905   0034CC                     __ptext70:
  9906                           	callstack 0
  9907   0034CC                     _I2C_MasterFsm:
  9908                           	callstack 15
  9909   0034CC                     
  9910                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  9911   0034CC  EC08  F01F         	call	i2_I2C_MasterClearIrq	;wreg free
  9912   0034D0                     
  9913                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9914   0034D0  0100               	movlb	0	; () banked
  9915   0034D2  A1CC               	btfss	(_I2C_Status+35)& (0+255),0,b
  9916   0034D4  EF6E  F01A         	goto	i2u384_41
  9917   0034D8  EF70  F01A         	goto	i2u384_40
  9918   0034DC                     i2u384_41:
  9919   0034DC  EF7D  F01A         	goto	i2l5728
  9920   0034E0                     i2u384_40:
  9921   0034E0                     
  9922                           ; BSR set to: 0
  9923   0034E0  EC6A  F01E         	call	_I2C_MasterIsNack	;wreg free
  9924   0034E4  0900               	iorlw	0
  9925   0034E6  B4D8               	btfsc	status,2,c
  9926   0034E8  EF78  F01A         	goto	i2u385_41
  9927   0034EC  EF7A  F01A         	goto	i2u385_40
  9928   0034F0                     i2u385_41:
  9929   0034F0  EF7D  F01A         	goto	i2l5728
  9930   0034F4                     i2u385_40:
  9931   0034F4                     
  9932                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9933   0034F4  0E0F               	movlw	15
  9934   0034F6  0100               	movlb	0	; () banked
  9935   0034F8  6FCA               	movwf	(_I2C_Status+33)& (0+255),b
  9936   0034FA                     i2l5728:
  9937                           
  9938                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  9939   0034FA  0100               	movlb	0	; () banked
  9940   0034FC  51CA               	movf	(_I2C_Status+33)& (0+255),w,b
  9941   0034FE  0D02               	mullw	2
  9942   003500  0E01               	movlw	low _i2c_fsmStateTable
  9943   003502  24F3               	addwf	243,w,c
  9944   003504  6EF6               	movwf	tblptrl,c
  9945   003506  0E10               	movlw	high _i2c_fsmStateTable
  9946   003508  20F4               	addwfc	244,w,c
  9947   00350A  6EF7               	movwf	tblptrh,c
  9948   00350C                     	if	1	;There are 3 active tblptr bytes
  9949   00350C  6AF8               	clrf	tblptru,c
  9950   00350E  0E00               	movlw	low (__mediumconst shr (0+16))
  9951   003510  22F8               	addwfc	tblptru,f,c
  9952   003512                     	endif
  9953   003512  0009               	tblrd		*+
  9954   003514  CFF5 F00E          	movff	tablat,??_I2C_MasterFsm
  9955   003518  0009               	tblrd		*+
  9956   00351A  CFF5 F00F          	movff	tablat,??_I2C_MasterFsm+1
  9957   00351E  D802               	call	i2u386_48
  9958   003520  EF9B  F01A         	goto	i2u386_49
  9959   003524                     i2u386_48:
  9960   003524  0005               	push	
  9961   003526  6EFA               	movwf	pclath,c
  9962   003528  500E               	movf	??_I2C_MasterFsm^0,w,c
  9963   00352A  6EFD               	movwf	tosl,c
  9964   00352C  500F               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9965   00352E  6EFE               	movwf	tosh,c
  9966   003530  6AFF               	clrf	tosu,c
  9967   003532  50FA               	movf	pclath,w,c
  9968   003534  0012               	return		;indir
  9969   003536                     i2u386_49:
  9970   003536  0100               	movlb	0	; () banked
  9971   003538  6FCA               	movwf	(_I2C_Status+33)& (0+255),b
  9972   00353A                     
  9973                           ; BSR set to: 0
  9974   00353A  0012               	return		;funcret
  9975   00353C                     __end_of_I2C_MasterFsm:
  9976                           	callstack 0
  9977                           
  9978 ;; *************** function i2_I2C_MasterClearIrq *****************
  9979 ;; Defined at:
  9980 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;		None
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		None
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;Total ram usage:        0 bytes
  9999 ;; Hardware stack levels used: 1
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_I2C_MasterFsm
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           	psect	text71
 10008   003E10                     __ptext71:
 10009                           	callstack 0
 10010   003E10                     i2_I2C_MasterClearIrq:
 10011                           	callstack 18
 10012   003E10                     
 10013                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 10014   003E10  969E               	bcf	158,3,c	;volatile
 10015   003E12  0012               	return		;funcret
 10016   003E14                     __end_ofi2_I2C_MasterClearIrq:
 10017                           	callstack 0
 10018                           
 10019 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10020 ;; Defined at:
 10021 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;		None
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      enum E3121
 10028 ;; Registers used:
 10029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;Total ram usage:        2 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; Hardware stack levels required when called: 3
 10042 ;; This function calls:
 10043 ;;		NULL
 10044 ;;		_I2C_CallbackReturnReset
 10045 ;;		_I2C_CallbackReturnStop
 10046 ;;		_I2C_DO_SEND_RESTART
 10047 ;;		_I2C_DO_SEND_STOP
 10048 ;;		_rd1RegCompleteHandler
 10049 ;;		_rd2RegCompleteHandler
 10050 ;;		_rdBlkRegCompleteHandler
 10051 ;;		_wr1RegCompleteHandler
 10052 ;;		_wr2RegCompleteHandler
 10053 ;; This function is called by:
 10054 ;;		_I2C_MasterFsm
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text72
 10059   00367A                     __ptext72:
 10060                           	callstack 0
 10061   00367A                     _I2C_DO_ADDRESS_NACK:
 10062                           	callstack 15
 10063   00367A                     
 10064                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 10065   00367A  0100               	movlb	0	; () banked
 10066   00367C  91CC               	bcf	(_I2C_Status+35)& (0+255),0,b
 10067   00367E                     
 10068                           ; BSR set to: 0
 10069                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 10070   00367E  0E02               	movlw	2
 10071   003680  6FCB               	movwf	(_I2C_Status+34)& (0+255),b
 10072                           
 10073                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10074   003682  EF4B  F01B         	goto	i2l5600
 10075   003686                     i2l5590:
 10076                           
 10077                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 10078   003686  ECE2  F01E         	call	_I2C_DO_SEND_RESTART	;wreg free
 10079   00368A  EF6F  F01B         	goto	i2l600
 10080   00368E                     i2l5594:
 10081                           
 10082                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 10083   00368E  ECDE  F01E         	call	_I2C_DO_SEND_STOP	;wreg free
 10084   003692  EF6F  F01B         	goto	i2l600
 10085   003696                     i2l5600:
 10086                           
 10087                           ; BSR set to: 0
 10088   003696  C0B9  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10089   00369A  C0BA  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10090   00369E  D802               	call	i2u370_48
 10091   0036A0  EF5B  F01B         	goto	i2u370_49
 10092   0036A4                     i2u370_48:
 10093   0036A4  0005               	push	
 10094   0036A6  6EFA               	movwf	pclath,c
 10095   0036A8  51AD               	movf	(_I2C_Status+4)& (0+255),w,b
 10096   0036AA  6EFD               	movwf	tosl,c
 10097   0036AC  51AE               	movf	(_I2C_Status+5)& (0+255),w,b
 10098   0036AE  6EFE               	movwf	tosh,c
 10099   0036B0  6AFF               	clrf	tosu,c
 10100   0036B2  50FA               	movf	pclath,w,c
 10101   0036B4  0012               	return		;indir
 10102   0036B6                     i2u370_49:
 10103   0036B6  6E0C               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10104   0036B8  6A0D               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10105                           
 10106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10107                           ; Switch size 1, requested type "simple"
 10108                           ; Number of cases is 1, Range of values is 0 to 0
 10109                           ; switch strategies available:
 10110                           ; Name         Instructions Cycles
 10111                           ; simple_byte            4     3 (average)
 10112                           ;	Chosen strategy is simple_byte
 10113   0036BA  500D               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10114   0036BC  0A00               	xorlw	0	; case 0
 10115   0036BE  B4D8               	btfsc	status,2,c
 10116   0036C0  EF64  F01B         	goto	i2l8522
 10117   0036C4  EF47  F01B         	goto	i2l5594
 10118   0036C8                     i2l8522:
 10119                           
 10120                           ; Switch size 1, requested type "simple"
 10121                           ; Number of cases is 2, Range of values is 2 to 3
 10122                           ; switch strategies available:
 10123                           ; Name         Instructions Cycles
 10124                           ; simple_byte            7     4 (average)
 10125                           ;	Chosen strategy is simple_byte
 10126   0036C8  500C               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10127   0036CA  0A02               	xorlw	2	; case 2
 10128   0036CC  B4D8               	btfsc	status,2,c
 10129   0036CE  EF43  F01B         	goto	i2l5590
 10130   0036D2  0A01               	xorlw	1	; case 3
 10131   0036D4  B4D8               	btfsc	status,2,c
 10132   0036D6  EF43  F01B         	goto	i2l5590
 10133   0036DA  EF47  F01B         	goto	i2l5594
 10134   0036DE                     i2l600:
 10135   0036DE  0012               	return		;funcret
 10136   0036E0                     __end_of_I2C_DO_ADDRESS_NACK:
 10137                           	callstack 0
 10138                           
 10139 ;; *************** function _I2C_DO_RESET *****************
 10140 ;; Defined at:
 10141 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;		None
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;		None
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      enum E3121
 10148 ;; Registers used:
 10149 ;;		wreg, status,2
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;Total ram usage:        0 bytes
 10160 ;; Hardware stack levels used: 1
 10161 ;; This function calls:
 10162 ;;		Nothing
 10163 ;; This function is called by:
 10164 ;;		_I2C_MasterFsm
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           	psect	text73
 10169   003D34                     __ptext73:
 10170                           	callstack 0
 10171   003D34                     _I2C_DO_RESET:
 10172                           	callstack 18
 10173   003D34                     
 10174                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 10175   003D34  0100               	movlb	0	; () banked
 10176   003D36  93CC               	bcf	(_I2C_Status+35)& (0+255),1,b
 10177   003D38                     
 10178                           ; BSR set to: 0
 10179                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 10180   003D38  0E00               	movlw	0
 10181   003D3A  6FCB               	movwf	(_I2C_Status+34)& (0+255),b
 10182   003D3C                     
 10183                           ; BSR set to: 0
 10184                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 10185   003D3C  0E0E               	movlw	14
 10186   003D3E                     
 10187                           ; BSR set to: 0
 10188   003D3E  0012               	return		;funcret
 10189   003D40                     __end_of_I2C_DO_RESET:
 10190                           	callstack 0
 10191                           
 10192 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10193 ;; Defined at:
 10194 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;		None
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      enum E3121
 10201 ;; Registers used:
 10202 ;;		wreg, cstack
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;Total ram usage:        0 bytes
 10213 ;; Hardware stack levels used: 1
 10214 ;; Hardware stack levels required when called: 1
 10215 ;; This function calls:
 10216 ;;		_I2C_MasterSendNack
 10217 ;; This function is called by:
 10218 ;;		_I2C_DO_RX
 10219 ;;		_I2C_MasterFsm
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text74
 10224   003DA4                     __ptext74:
 10225                           	callstack 0
 10226   003DA4                     _I2C_DO_RX_NACK_RESTART:
 10227                           	callstack 17
 10228   003DA4                     
 10229                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 10230   003DA4  ECFB  F01E         	call	_I2C_MasterSendNack	;wreg free
 10231   003DA8                     
 10232                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 10233   003DA8  0E09               	movlw	9
 10234   003DAA  0012               	return		;funcret
 10235   003DAC                     __end_of_I2C_DO_RX_NACK_RESTART:
 10236                           	callstack 0
 10237                           
 10238 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10239 ;; Defined at:
 10240 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      enum E3121
 10247 ;; Registers used:
 10248 ;;		wreg, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 1
 10261 ;; This function calls:
 10262 ;;		_I2C_MasterSendNack
 10263 ;; This function is called by:
 10264 ;;		_I2C_DO_RX
 10265 ;;		_I2C_MasterFsm
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text75
 10270   003DAC                     __ptext75:
 10271                           	callstack 0
 10272   003DAC                     _I2C_DO_RX_NACK_STOP:
 10273                           	callstack 17
 10274   003DAC                     
 10275                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 10276   003DAC  ECFB  F01E         	call	_I2C_MasterSendNack	;wreg free
 10277   003DB0                     
 10278                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 10279   003DB0  0E0A               	movlw	10
 10280   003DB2  0012               	return		;funcret
 10281   003DB4                     __end_of_I2C_DO_RX_NACK_STOP:
 10282                           	callstack 0
 10283                           
 10284 ;; *************** function _I2C_DO_RX_ACK *****************
 10285 ;; Defined at:
 10286 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;		None
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;		None
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  1    wreg      enum E3121
 10293 ;; Registers used:
 10294 ;;		wreg, cstack
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;Total ram usage:        0 bytes
 10305 ;; Hardware stack levels used: 1
 10306 ;; Hardware stack levels required when called: 1
 10307 ;; This function calls:
 10308 ;;		_I2C_MasterSendAck
 10309 ;; This function is called by:
 10310 ;;		_I2C_MasterFsm
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text76
 10315   003DB4                     __ptext76:
 10316                           	callstack 0
 10317   003DB4                     _I2C_DO_RX_ACK:
 10318                           	callstack 17
 10319   003DB4                     
 10320                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 10321   003DB4  ECF8  F01E         	call	_I2C_MasterSendAck	;wreg free
 10322   003DB8                     
 10323                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 10324   003DB8  0E05               	movlw	5
 10325   003DBA  0012               	return		;funcret
 10326   003DBC                     __end_of_I2C_DO_RX_ACK:
 10327                           	callstack 0
 10328                           
 10329 ;; *************** function _I2C_DO_SEND_STOP *****************
 10330 ;; Defined at:
 10331 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      enum E3121
 10338 ;; Registers used:
 10339 ;;		wreg, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;Total ram usage:        0 bytes
 10350 ;; Hardware stack levels used: 1
 10351 ;; Hardware stack levels required when called: 1
 10352 ;; This function calls:
 10353 ;;		_I2C_MasterStop
 10354 ;; This function is called by:
 10355 ;;		_I2C_DO_TX
 10356 ;;		_I2C_DO_TX_EMPTY
 10357 ;;		_I2C_DO_ADDRESS_NACK
 10358 ;;		_I2C_MasterFsm
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text77
 10363   003DBC                     __ptext77:
 10364                           	callstack 0
 10365   003DBC                     _I2C_DO_SEND_STOP:
 10366                           	callstack 16
 10367   003DBC                     
 10368                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 10369   003DBC  EC14  F01F         	call	_I2C_MasterStop	;wreg free
 10370   003DC0                     
 10371                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 10372   003DC0  0E00               	movlw	0
 10373   003DC2  0012               	return		;funcret
 10374   003DC4                     __end_of_I2C_DO_SEND_STOP:
 10375                           	callstack 0
 10376                           
 10377 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10378 ;; Defined at:
 10379 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;		None
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      enum E3121
 10386 ;; Registers used:
 10387 ;;		wreg, cstack
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10397 ;;Total ram usage:        0 bytes
 10398 ;; Hardware stack levels used: 1
 10399 ;; Hardware stack levels required when called: 1
 10400 ;; This function calls:
 10401 ;;		_I2C_MasterEnableRestart
 10402 ;; This function is called by:
 10403 ;;		_I2C_DO_TX_EMPTY
 10404 ;;		_I2C_DO_ADDRESS_NACK
 10405 ;;		_I2C_MasterFsm
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text78
 10410   003DC4                     __ptext78:
 10411                           	callstack 0
 10412   003DC4                     _I2C_DO_SEND_RESTART:
 10413                           	callstack 16
 10414   003DC4                     
 10415                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 10416   003DC4  EC16  F01F         	call	_I2C_MasterEnableRestart	;wreg free
 10417   003DC8                     
 10418                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 10419   003DC8  0E01               	movlw	1
 10420   003DCA  0012               	return		;funcret
 10421   003DCC                     __end_of_I2C_DO_SEND_RESTART:
 10422                           	callstack 0
 10423                           
 10424 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10425 ;; Defined at:
 10426 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      enum E3121
 10433 ;; Registers used:
 10434 ;;		wreg, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used: 1
 10446 ;; Hardware stack levels required when called: 1
 10447 ;; This function calls:
 10448 ;;		_I2C_MasterEnableRestart
 10449 ;; This function is called by:
 10450 ;;		_I2C_DO_TX
 10451 ;;		_I2C_MasterFsm
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text79
 10456   003DCC                     __ptext79:
 10457                           	callstack 0
 10458   003DCC                     _I2C_DO_SEND_RESTART_WRITE:
 10459                           	callstack 16
 10460   003DCC                     
 10461                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 10462   003DCC  EC16  F01F         	call	_I2C_MasterEnableRestart	;wreg free
 10463   003DD0                     
 10464                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 10465   003DD0  0E02               	movlw	2
 10466   003DD2  0012               	return		;funcret
 10467   003DD4                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10471 ;; Defined at:
 10472 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      enum E3121
 10479 ;; Registers used:
 10480 ;;		wreg, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; Hardware stack levels required when called: 1
 10493 ;; This function calls:
 10494 ;;		_I2C_MasterEnableRestart
 10495 ;; This function is called by:
 10496 ;;		_I2C_DO_TX
 10497 ;;		_I2C_MasterFsm
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text80
 10502   003DD4                     __ptext80:
 10503                           	callstack 0
 10504   003DD4                     _I2C_DO_SEND_RESTART_READ:
 10505                           	callstack 16
 10506   003DD4                     
 10507                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 10508   003DD4  EC16  F01F         	call	_I2C_MasterEnableRestart	;wreg free
 10509   003DD8                     
 10510                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 10511   003DD8  0E01               	movlw	1
 10512   003DDA  0012               	return		;funcret
 10513   003DDC                     __end_of_I2C_DO_SEND_RESTART_READ:
 10514                           	callstack 0
 10515                           
 10516 ;; *************** function _I2C_DO_RCEN *****************
 10517 ;; Defined at:
 10518 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;		None
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;		None
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      enum E3121
 10525 ;; Registers used:
 10526 ;;		wreg, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;Total ram usage:        0 bytes
 10537 ;; Hardware stack levels used: 1
 10538 ;; Hardware stack levels required when called: 1
 10539 ;; This function calls:
 10540 ;;		_I2C_MasterStartRx
 10541 ;; This function is called by:
 10542 ;;		_I2C_MasterFsm
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text81
 10547   003D40                     __ptext81:
 10548                           	callstack 0
 10549   003D40                     _I2C_DO_RCEN:
 10550                           	callstack 17
 10551   003D40                     
 10552                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 10553   003D40  0100               	movlb	0	; () banked
 10554   003D42  91CC               	bcf	(_I2C_Status+35)& (0+255),0,b
 10555   003D44                     
 10556                           ; BSR set to: 0
 10557                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 10558   003D44  EC0E  F01F         	call	_I2C_MasterStartRx	;wreg free
 10559   003D48                     
 10560                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 10561   003D48  0E04               	movlw	4
 10562   003D4A  0012               	return		;funcret
 10563   003D4C                     __end_of_I2C_DO_RCEN:
 10564                           	callstack 0
 10565                           
 10566 ;; *************** function _I2C_DO_RX *****************
 10567 ;; Defined at:
 10568 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;		None
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;		None
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  1    wreg      enum E3121
 10575 ;; Registers used:
 10576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;Total ram usage:        2 bytes
 10587 ;; Hardware stack levels used: 1
 10588 ;; Hardware stack levels required when called: 3
 10589 ;; This function calls:
 10590 ;;		NULL
 10591 ;;		_I2C_CallbackReturnReset
 10592 ;;		_I2C_CallbackReturnStop
 10593 ;;		_I2C_DO_RX_NACK_RESTART
 10594 ;;		_I2C_DO_RX_NACK_STOP
 10595 ;;		_I2C_MasterGetRxData
 10596 ;;		_I2C_MasterSendAck
 10597 ;;		_rd1RegCompleteHandler
 10598 ;;		_rd2RegCompleteHandler
 10599 ;;		_rdBlkRegCompleteHandler
 10600 ;;		_wr1RegCompleteHandler
 10601 ;;		_wr2RegCompleteHandler
 10602 ;; This function is called by:
 10603 ;;		_I2C_MasterFsm
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           	psect	text82
 10608   002DD8                     __ptext82:
 10609                           	callstack 0
 10610   002DD8                     _I2C_DO_RX:
 10611                           	callstack 15
 10612   002DD8                     
 10613                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10614   002DD8  EC0C  F01F         	call	_I2C_MasterGetRxData	;wreg free
 10615   002DDC  C0C6  FFD9         	movff	_I2C_Status+29,fsr2l
 10616   002DE0  C0C7  FFDA         	movff	_I2C_Status+30,fsr2h
 10617   002DE4  6EDF               	movwf	indf2,c
 10618   002DE6  0100               	movlb	0	; () banked
 10619   002DE8  4BC6               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10620   002DEA  2BC7               	incf	(_I2C_Status+30)& (0+255),f,b
 10621   002DEC                     
 10622                           ; BSR set to: 0
 10623                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 10624   002DEC  07C8               	decf	(_I2C_Status+31)& (0+255),f,b
 10625   002DEE  A0D8               	btfss	status,0,c
 10626   002DF0  07C9               	decf	(_I2C_Status+32)& (0+255),f,b
 10627   002DF2  51C8               	movf	(_I2C_Status+31)& (0+255),w,b
 10628   002DF4  11C9               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10629   002DF6  B4D8               	btfsc	status,2,c
 10630   002DF8  EF00  F017         	goto	i2u367_41
 10631   002DFC  EF02  F017         	goto	i2u367_40
 10632   002E00                     i2u367_41:
 10633   002E00  EF07  F017         	goto	i2l537
 10634   002E04                     i2u367_40:
 10635   002E04                     
 10636                           ; BSR set to: 0
 10637                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 10638   002E04  ECF8  F01E         	call	_I2C_MasterSendAck	;wreg free
 10639   002E08                     
 10640                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 10641   002E08  0E05               	movlw	5
 10642   002E0A  EF3E  F017         	goto	i2l538
 10643   002E0E                     i2l537:
 10644                           
 10645                           ; BSR set to: 0
 10646                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 10647   002E0E  87CC               	bsf	(_I2C_Status+35)& (0+255),3,b
 10648                           
 10649                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10650   002E10  EF12  F017         	goto	i2l5534
 10651   002E14                     i2l5524:
 10652                           
 10653                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 10654   002E14  ECD2  F01E         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10655   002E18  EF3E  F017         	goto	i2l538
 10656   002E1C                     i2l5528:
 10657                           
 10658                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 10659   002E1C  ECD6  F01E         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10660   002E20  EF3E  F017         	goto	i2l538
 10661   002E24                     i2l5534:
 10662                           
 10663                           ; BSR set to: 0
 10664   002E24  C0B5  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10665   002E28  C0B6  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10666   002E2C  D802               	call	i2u368_48
 10667   002E2E  EF22  F017         	goto	i2u368_49
 10668   002E32                     i2u368_48:
 10669   002E32  0005               	push	
 10670   002E34  6EFA               	movwf	pclath,c
 10671   002E36  51A9               	movf	_I2C_Status& (0+255),w,b
 10672   002E38  6EFD               	movwf	tosl,c
 10673   002E3A  51AA               	movf	(_I2C_Status+1)& (0+255),w,b
 10674   002E3C  6EFE               	movwf	tosh,c
 10675   002E3E  6AFF               	clrf	tosu,c
 10676   002E40  50FA               	movf	pclath,w,c
 10677   002E42  0012               	return		;indir
 10678   002E44                     i2u368_49:
 10679   002E44  6E0C               	movwf	??_I2C_DO_RX^0,c
 10680   002E46  6A0D               	clrf	(??_I2C_DO_RX+1)^0,c
 10681                           
 10682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10683                           ; Switch size 1, requested type "simple"
 10684                           ; Number of cases is 1, Range of values is 0 to 0
 10685                           ; switch strategies available:
 10686                           ; Name         Instructions Cycles
 10687                           ; simple_byte            4     3 (average)
 10688                           ;	Chosen strategy is simple_byte
 10689   002E48  500D               	movf	(??_I2C_DO_RX+1)^0,w,c
 10690   002E4A  0A00               	xorlw	0	; case 0
 10691   002E4C  B4D8               	btfsc	status,2,c
 10692   002E4E  EF2B  F017         	goto	i2l8524
 10693   002E52  EF0E  F017         	goto	i2l5528
 10694   002E56                     i2l8524:
 10695                           
 10696                           ; Switch size 1, requested type "simple"
 10697                           ; Number of cases is 4, Range of values is 1 to 4
 10698                           ; switch strategies available:
 10699                           ; Name         Instructions Cycles
 10700                           ; simple_byte           13     7 (average)
 10701                           ;	Chosen strategy is simple_byte
 10702   002E56  500C               	movf	??_I2C_DO_RX^0,w,c
 10703   002E58  0A01               	xorlw	1	; case 1
 10704   002E5A  B4D8               	btfsc	status,2,c
 10705   002E5C  EF0E  F017         	goto	i2l5528
 10706   002E60  0A03               	xorlw	3	; case 2
 10707   002E62  B4D8               	btfsc	status,2,c
 10708   002E64  EF0A  F017         	goto	i2l5524
 10709   002E68  0A01               	xorlw	1	; case 3
 10710   002E6A  B4D8               	btfsc	status,2,c
 10711   002E6C  EF0A  F017         	goto	i2l5524
 10712   002E70  0A07               	xorlw	7	; case 4
 10713   002E72  B4D8               	btfsc	status,2,c
 10714   002E74  EF0E  F017         	goto	i2l5528
 10715   002E78  EF0E  F017         	goto	i2l5528
 10716   002E7C                     i2l538:
 10717   002E7C  0012               	return		;funcret
 10718   002E7E                     __end_of_I2C_DO_RX:
 10719                           	callstack 0
 10720                           
 10721 ;; *************** function _I2C_DO_TX *****************
 10722 ;; Defined at:
 10723 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      enum E3121
 10730 ;; Registers used:
 10731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;Total ram usage:        2 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 3
 10744 ;; This function calls:
 10745 ;;		NULL
 10746 ;;		_I2C_CallbackReturnReset
 10747 ;;		_I2C_CallbackReturnStop
 10748 ;;		_I2C_DO_SEND_RESTART_READ
 10749 ;;		_I2C_DO_SEND_RESTART_WRITE
 10750 ;;		_I2C_DO_SEND_STOP
 10751 ;;		_I2C_MasterIsNack
 10752 ;;		_I2C_MasterSendTxData
 10753 ;;		_rd1RegCompleteHandler
 10754 ;;		_rd2RegCompleteHandler
 10755 ;;		_rdBlkRegCompleteHandler
 10756 ;;		_wr1RegCompleteHandler
 10757 ;;		_wr2RegCompleteHandler
 10758 ;; This function is called by:
 10759 ;;		_I2C_MasterFsm
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763                           	psect	text83
 10764   002D14                     __ptext83:
 10765                           	callstack 0
 10766   002D14                     _I2C_DO_TX:
 10767                           	callstack 15
 10768   002D14                     
 10769                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 10770   002D14  EC6A  F01E         	call	_I2C_MasterIsNack	;wreg free
 10771   002D18  0900               	iorlw	0
 10772   002D1A  B4D8               	btfsc	status,2,c
 10773   002D1C  EF92  F016         	goto	i2u364_41
 10774   002D20  EF94  F016         	goto	i2u364_40
 10775   002D24                     i2u364_41:
 10776   002D24  EFCF  F016         	goto	i2l521
 10777   002D28                     i2u364_40:
 10778   002D28  EFA2  F016         	goto	i2l5494
 10779   002D2C                     i2l5480:
 10780                           
 10781                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10782   002D2C  ECEA  F01E         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10783   002D30  EFEB  F016         	goto	i2l524
 10784   002D34                     i2l5484:
 10785                           
 10786                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10787   002D34  ECE6  F01E         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10788   002D38  EFEB  F016         	goto	i2l524
 10789   002D3C                     i2l5488:
 10790                           
 10791                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 10792   002D3C  ECDE  F01E         	call	_I2C_DO_SEND_STOP	;wreg free
 10793   002D40  EFEB  F016         	goto	i2l524
 10794   002D44                     i2l5494:
 10795   002D44  C0BB  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10796   002D48  C0BC  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10797   002D4C  D802               	call	i2u365_48
 10798   002D4E  EFB3  F016         	goto	i2u365_49
 10799   002D52                     i2u365_48:
 10800   002D52  0005               	push	
 10801   002D54  6EFA               	movwf	pclath,c
 10802   002D56  0100               	movlb	0	; () banked
 10803   002D58  51AF               	movf	(_I2C_Status+6)& (0+255),w,b
 10804   002D5A  6EFD               	movwf	tosl,c
 10805   002D5C  51B0               	movf	(_I2C_Status+7)& (0+255),w,b
 10806   002D5E  6EFE               	movwf	tosh,c
 10807   002D60  6AFF               	clrf	tosu,c
 10808   002D62  50FA               	movf	pclath,w,c
 10809   002D64  0012               	return		;indir
 10810   002D66                     i2u365_49:
 10811   002D66  6E0C               	movwf	??_I2C_DO_TX^0,c
 10812   002D68  6A0D               	clrf	(??_I2C_DO_TX+1)^0,c
 10813                           
 10814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10815                           ; Switch size 1, requested type "simple"
 10816                           ; Number of cases is 1, Range of values is 0 to 0
 10817                           ; switch strategies available:
 10818                           ; Name         Instructions Cycles
 10819                           ; simple_byte            4     3 (average)
 10820                           ;	Chosen strategy is simple_byte
 10821   002D6A  500D               	movf	(??_I2C_DO_TX+1)^0,w,c
 10822   002D6C  0A00               	xorlw	0	; case 0
 10823   002D6E  B4D8               	btfsc	status,2,c
 10824   002D70  EFBC  F016         	goto	i2l8526
 10825   002D74  EF9E  F016         	goto	i2l5488
 10826   002D78                     i2l8526:
 10827                           
 10828                           ; Switch size 1, requested type "simple"
 10829                           ; Number of cases is 4, Range of values is 1 to 4
 10830                           ; switch strategies available:
 10831                           ; Name         Instructions Cycles
 10832                           ; simple_byte           13     7 (average)
 10833                           ;	Chosen strategy is simple_byte
 10834   002D78  500C               	movf	??_I2C_DO_TX^0,w,c
 10835   002D7A  0A01               	xorlw	1	; case 1
 10836   002D7C  B4D8               	btfsc	status,2,c
 10837   002D7E  EF9E  F016         	goto	i2l5488
 10838   002D82  0A03               	xorlw	3	; case 2
 10839   002D84  B4D8               	btfsc	status,2,c
 10840   002D86  EF96  F016         	goto	i2l5480
 10841   002D8A  0A01               	xorlw	1	; case 3
 10842   002D8C  B4D8               	btfsc	status,2,c
 10843   002D8E  EF9A  F016         	goto	i2l5484
 10844   002D92  0A07               	xorlw	7	; case 4
 10845   002D94  B4D8               	btfsc	status,2,c
 10846   002D96  EF9E  F016         	goto	i2l5488
 10847   002D9A  EF9E  F016         	goto	i2l5488
 10848   002D9E                     i2l521:
 10849                           
 10850                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 10851   002D9E  0100               	movlb	0	; () banked
 10852   002DA0  91CC               	bcf	(_I2C_Status+35)& (0+255),0,b
 10853   002DA2                     
 10854                           ; BSR set to: 0
 10855                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10856   002DA2  C0C6  FFD9         	movff	_I2C_Status+29,fsr2l
 10857   002DA6  C0C7  FFDA         	movff	_I2C_Status+30,fsr2h
 10858   002DAA  4BC6               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10859   002DAC  2BC7               	incf	(_I2C_Status+30)& (0+255),f,b
 10860   002DAE  50DF               	movf	indf2,w,c
 10861   002DB0  ECEE  F01E         	call	_I2C_MasterSendTxData
 10862   002DB4                     
 10863                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10864   002DB4  0100               	movlb	0	; () banked
 10865   002DB6  07C8               	decf	(_I2C_Status+31)& (0+255),f,b
 10866   002DB8  A0D8               	btfss	status,0,c
 10867   002DBA  07C9               	decf	(_I2C_Status+32)& (0+255),f,b
 10868   002DBC  51C8               	movf	(_I2C_Status+31)& (0+255),w,b
 10869   002DBE  11C9               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10870   002DC0  A4D8               	btfss	status,2,c
 10871   002DC2  EFE5  F016         	goto	i2u366_41
 10872   002DC6  EFE7  F016         	goto	i2u366_40
 10873   002DCA                     i2u366_41:
 10874   002DCA  EFEA  F016         	goto	i2l5502
 10875   002DCE                     i2u366_40:
 10876   002DCE                     
 10877                           ; BSR set to: 0
 10878   002DCE  0E06               	movlw	6
 10879   002DD0  EFEB  F016         	goto	i2l524
 10880   002DD4                     i2l5502:
 10881                           
 10882                           ; BSR set to: 0
 10883   002DD4  0E03               	movlw	3
 10884   002DD6                     i2l524:
 10885   002DD6  0012               	return		;funcret
 10886   002DD8                     __end_of_I2C_DO_TX:
 10887                           	callstack 0
 10888                           
 10889 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10890 ;; Defined at:
 10891 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      enum E3121
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, cstack
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used: 1
 10911 ;; Hardware stack levels required when called: 1
 10912 ;; This function calls:
 10913 ;;		_I2C_MasterSendTxData
 10914 ;; This function is called by:
 10915 ;;		_I2C_MasterFsm
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text84
 10920   003D26                     __ptext84:
 10921                           	callstack 0
 10922   003D26                     _I2C_DO_SEND_ADR_WRITE:
 10923                           	callstack 17
 10924   003D26                     
 10925                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 10926   003D26  0100               	movlb	0	; () banked
 10927   003D28  81CC               	bsf	(_I2C_Status+35)& (0+255),0,b
 10928   003D2A                     
 10929                           ; BSR set to: 0
 10930                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 10931   003D2A  51C5               	movf	(_I2C_Status+28)& (0+255),w,b
 10932   003D2C  ECEE  F01E         	call	_I2C_MasterSendTxData
 10933   003D30                     
 10934                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 10935   003D30  0E03               	movlw	3
 10936   003D32  0012               	return		;funcret
 10937   003D34                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10938                           	callstack 0
 10939                           
 10940 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10941 ;; Defined at:
 10942 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;		None
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      enum E3121
 10949 ;; Registers used:
 10950 ;;		wreg, status,2, status,0, cstack
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10960 ;;Total ram usage:        0 bytes
 10961 ;; Hardware stack levels used: 1
 10962 ;; Hardware stack levels required when called: 1
 10963 ;; This function calls:
 10964 ;;		_I2C_MasterSendTxData
 10965 ;; This function is called by:
 10966 ;;		_I2C_MasterFsm
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text85
 10971   003CFA                     __ptext85:
 10972                           	callstack 0
 10973   003CFA                     _I2C_DO_SEND_ADR_READ:
 10974                           	callstack 17
 10975   003CFA                     
 10976                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 10977   003CFA  0100               	movlb	0	; () banked
 10978   003CFC  81CC               	bsf	(_I2C_Status+35)& (0+255),0,b
 10979   003CFE                     
 10980                           ; BSR set to: 0
 10981                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress | 1));
 10982   003CFE  51C5               	movf	(_I2C_Status+28)& (0+255),w,b
 10983   003D00  0901               	iorlw	1
 10984   003D02  ECEE  F01E         	call	_I2C_MasterSendTxData
 10985   003D06                     
 10986                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 10987   003D06  0E05               	movlw	5
 10988   003D08  0012               	return		;funcret
 10989   003D0A                     __end_of_I2C_DO_SEND_ADR_READ:
 10990                           	callstack 0
 10991                           
 10992 ;; *************** function _I2C_DO_IDLE *****************
 10993 ;; Defined at:
 10994 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      enum E3121
 11001 ;; Registers used:
 11002 ;;		wreg, status,2
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used: 1
 11014 ;; This function calls:
 11015 ;;		Nothing
 11016 ;; This function is called by:
 11017 ;;		_I2C_MasterFsm
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text86
 11022   003D4C                     __ptext86:
 11023                           	callstack 0
 11024   003D4C                     _I2C_DO_IDLE:
 11025                           	callstack 18
 11026   003D4C                     
 11027                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 11028   003D4C  0100               	movlb	0	; () banked
 11029   003D4E  93CC               	bcf	(_I2C_Status+35)& (0+255),1,b
 11030   003D50                     
 11031                           ; BSR set to: 0
 11032                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 11033   003D50  0E00               	movlw	0
 11034   003D52  6FCB               	movwf	(_I2C_Status+34)& (0+255),b
 11035   003D54                     
 11036                           ; BSR set to: 0
 11037                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 11038   003D54  0E0E               	movlw	14
 11039   003D56                     
 11040                           ; BSR set to: 0
 11041   003D56  0012               	return		;funcret
 11042   003D58                     __end_of_I2C_DO_IDLE:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11046 ;; Defined at:
 11047 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;		None
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      enum E3121
 11054 ;; Registers used:
 11055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;Total ram usage:        2 bytes
 11066 ;; Hardware stack levels used: 1
 11067 ;; Hardware stack levels required when called: 3
 11068 ;; This function calls:
 11069 ;;		NULL
 11070 ;;		_I2C_CallbackReturnReset
 11071 ;;		_I2C_CallbackReturnStop
 11072 ;;		_I2C_DO_SEND_RESTART
 11073 ;;		_I2C_DO_SEND_STOP
 11074 ;;		_I2C_MasterSetIrq
 11075 ;;		_rd1RegCompleteHandler
 11076 ;;		_rd2RegCompleteHandler
 11077 ;;		_rdBlkRegCompleteHandler
 11078 ;;		_wr1RegCompleteHandler
 11079 ;;		_wr2RegCompleteHandler
 11080 ;; This function is called by:
 11081 ;;		_I2C_MasterFsm
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           	psect	text87
 11086   0032F0                     __ptext87:
 11087                           	callstack 0
 11088   0032F0                     _I2C_DO_TX_EMPTY:
 11089                           	callstack 15
 11090   0032F0                     
 11091                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 11092   0032F0  0100               	movlb	0	; () banked
 11093   0032F2  87CC               	bsf	(_I2C_Status+35)& (0+255),3,b
 11094                           
 11095                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11096   0032F4  EF89  F019         	goto	i2l5566
 11097   0032F8                     i2l5550:
 11098                           
 11099                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 11100   0032F8  ECE2  F01E         	call	_I2C_DO_SEND_RESTART	;wreg free
 11101   0032FC  EFB5  F019         	goto	i2l555
 11102   003300                     i2l5554:
 11103                           
 11104                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 11105   003300  EC0A  F01F         	call	_I2C_MasterSetIrq	;wreg free
 11106   003304                     
 11107                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 11108   003304  0E03               	movlw	3
 11109   003306  EFB5  F019         	goto	i2l555
 11110   00330A                     i2l5560:
 11111                           
 11112                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 11113   00330A  ECDE  F01E         	call	_I2C_DO_SEND_STOP	;wreg free
 11114   00330E  EFB5  F019         	goto	i2l555
 11115   003312                     i2l5566:
 11116                           
 11117                           ; BSR set to: 0
 11118   003312  C0B5  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11119   003316  C0B6  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11120   00331A  D802               	call	i2u369_48
 11121   00331C  EF99  F019         	goto	i2u369_49
 11122   003320                     i2u369_48:
 11123   003320  0005               	push	
 11124   003322  6EFA               	movwf	pclath,c
 11125   003324  51A9               	movf	_I2C_Status& (0+255),w,b
 11126   003326  6EFD               	movwf	tosl,c
 11127   003328  51AA               	movf	(_I2C_Status+1)& (0+255),w,b
 11128   00332A  6EFE               	movwf	tosh,c
 11129   00332C  6AFF               	clrf	tosu,c
 11130   00332E  50FA               	movf	pclath,w,c
 11131   003330  0012               	return		;indir
 11132   003332                     i2u369_49:
 11133   003332  6E0C               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11134   003334  6A0D               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11135                           
 11136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11137                           ; Switch size 1, requested type "simple"
 11138                           ; Number of cases is 1, Range of values is 0 to 0
 11139                           ; switch strategies available:
 11140                           ; Name         Instructions Cycles
 11141                           ; simple_byte            4     3 (average)
 11142                           ;	Chosen strategy is simple_byte
 11143   003336  500D               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11144   003338  0A00               	xorlw	0	; case 0
 11145   00333A  B4D8               	btfsc	status,2,c
 11146   00333C  EFA2  F019         	goto	i2l8528
 11147   003340  EF85  F019         	goto	i2l5560
 11148   003344                     i2l8528:
 11149                           
 11150                           ; Switch size 1, requested type "simple"
 11151                           ; Number of cases is 4, Range of values is 1 to 4
 11152                           ; switch strategies available:
 11153                           ; Name         Instructions Cycles
 11154                           ; simple_byte           13     7 (average)
 11155                           ;	Chosen strategy is simple_byte
 11156   003344  500C               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11157   003346  0A01               	xorlw	1	; case 1
 11158   003348  B4D8               	btfsc	status,2,c
 11159   00334A  EF85  F019         	goto	i2l5560
 11160   00334E  0A03               	xorlw	3	; case 2
 11161   003350  B4D8               	btfsc	status,2,c
 11162   003352  EF7C  F019         	goto	i2l5550
 11163   003356  0A01               	xorlw	1	; case 3
 11164   003358  B4D8               	btfsc	status,2,c
 11165   00335A  EF7C  F019         	goto	i2l5550
 11166   00335E  0A07               	xorlw	7	; case 4
 11167   003360  B4D8               	btfsc	status,2,c
 11168   003362  EF80  F019         	goto	i2l5554
 11169   003366  EF85  F019         	goto	i2l5560
 11170   00336A                     i2l555:
 11171   00336A  0012               	return		;funcret
 11172   00336C                     __end_of_I2C_DO_TX_EMPTY:
 11173                           	callstack 0
 11174                           
 11175 ;; *************** function _I2C_MasterSetIrq *****************
 11176 ;; Defined at:
 11177 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;		None
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;		None
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		None
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11195 ;;Total ram usage:        0 bytes
 11196 ;; Hardware stack levels used: 1
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_I2C_DO_TX_EMPTY
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text88
 11205   003E14                     __ptext88:
 11206                           	callstack 0
 11207   003E14                     _I2C_MasterSetIrq:
 11208                           	callstack 17
 11209   003E14                     
 11210                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 11211   003E14  869E               	bsf	158,3,c	;volatile
 11212   003E16  0012               	return		;funcret
 11213   003E18                     __end_of_I2C_MasterSetIrq:
 11214                           	callstack 0
 11215                           
 11216 ;; *************** function _I2C_MasterIsNack *****************
 11217 ;; Defined at:
 11218 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;		None
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      _Bool 
 11225 ;; Registers used:
 11226 ;;		wreg
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11236 ;;Total ram usage:        0 bytes
 11237 ;; Hardware stack levels used: 1
 11238 ;; This function calls:
 11239 ;;		Nothing
 11240 ;; This function is called by:
 11241 ;;		_I2C_MasterFsm
 11242 ;;		_I2C_DO_TX
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text89
 11247   003CD4                     __ptext89:
 11248                           	callstack 0
 11249   003CD4                     _I2C_MasterIsNack:
 11250                           	callstack 18
 11251   003CD4                     
 11252                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 11253   003CD4  BCC5               	btfsc	197,6,c	;volatile
 11254   003CD6  EF6F  F01E         	goto	i2u344_41
 11255   003CDA  EF72  F01E         	goto	i2u344_40
 11256   003CDE                     i2u344_41:
 11257   003CDE  0E01               	movlw	1
 11258   003CE0  EF73  F01E         	goto	i2u344_46
 11259   003CE4                     i2u344_40:
 11260   003CE4  0E00               	movlw	0
 11261   003CE6                     i2u344_46:
 11262   003CE6  0012               	return		;funcret
 11263   003CE8                     __end_of_I2C_MasterIsNack:
 11264                           	callstack 0
 11265                           
 11266 ;; *************** function _I2C_MasterSendTxData *****************
 11267 ;; Defined at:
 11268 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  data            1    wreg     unsigned char 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;  data            1    0[COMRAM] unsigned char 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		wreg
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;Total ram usage:        1 bytes
 11287 ;; Hardware stack levels used: 1
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_I2C_DO_SEND_ADR_READ
 11292 ;;		_I2C_DO_SEND_ADR_WRITE
 11293 ;;		_I2C_DO_TX
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text90
 11298   003DDC                     __ptext90:
 11299                           	callstack 0
 11300   003DDC                     _I2C_MasterSendTxData:
 11301                           	callstack 17
 11302                           
 11303                           ;incstack = 0
 11304                           ;I2C_MasterSendTxData@data stored from wreg
 11305   003DDC  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 11306   003DDE                     
 11307                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 11308   003DDE  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11309   003DE2  0012               	return		;funcret
 11310   003DE4                     __end_of_I2C_MasterSendTxData:
 11311                           	callstack 0
 11312                           
 11313 ;; *************** function _I2C_MasterSendAck *****************
 11314 ;; Defined at:
 11315 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;		None
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  1    wreg      void 
 11322 ;; Registers used:
 11323 ;;		None
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;Total ram usage:        0 bytes
 11334 ;; Hardware stack levels used: 1
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_I2C_DO_RX
 11339 ;;		_I2C_DO_RX_ACK
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text91
 11344   003DF0                     __ptext91:
 11345                           	callstack 0
 11346   003DF0                     _I2C_MasterSendAck:
 11347                           	callstack 17
 11348   003DF0                     
 11349                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 11350   003DF0  9AC5               	bcf	197,5,c	;volatile
 11351                           
 11352                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 11353   003DF2  88C5               	bsf	197,4,c	;volatile
 11354   003DF4  0012               	return		;funcret
 11355   003DF6                     __end_of_I2C_MasterSendAck:
 11356                           	callstack 0
 11357                           
 11358 ;; *************** function _I2C_MasterGetRxData *****************
 11359 ;; Defined at:
 11360 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;		None
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;		None
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      unsigned char 
 11367 ;; Registers used:
 11368 ;;		wreg, status,2
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;Total ram usage:        0 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; This function calls:
 11381 ;;		Nothing
 11382 ;; This function is called by:
 11383 ;;		_I2C_DO_RX
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           	psect	text92
 11388   003E18                     __ptext92:
 11389                           	callstack 0
 11390   003E18                     _I2C_MasterGetRxData:
 11391                           	callstack 17
 11392   003E18                     
 11393                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 11394   003E18  50C9               	movf	201,w,c	;volatile
 11395   003E1A  0012               	return		;funcret
 11396   003E1C                     __end_of_I2C_MasterGetRxData:
 11397                           	callstack 0
 11398                           
 11399 ;; *************** function _I2C_MasterSendNack *****************
 11400 ;; Defined at:
 11401 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;		None
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;		None
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  1    wreg      void 
 11408 ;; Registers used:
 11409 ;;		None
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;Total ram usage:        0 bytes
 11420 ;; Hardware stack levels used: 1
 11421 ;; This function calls:
 11422 ;;		Nothing
 11423 ;; This function is called by:
 11424 ;;		_I2C_DO_RX_NACK_STOP
 11425 ;;		_I2C_DO_RX_NACK_RESTART
 11426 ;; This function uses a non-reentrant model
 11427 ;;
 11428                           
 11429                           	psect	text93
 11430   003DF6                     __ptext93:
 11431                           	callstack 0
 11432   003DF6                     _I2C_MasterSendNack:
 11433                           	callstack 17
 11434   003DF6                     
 11435                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 11436   003DF6  8AC5               	bsf	197,5,c	;volatile
 11437                           
 11438                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 11439   003DF8  88C5               	bsf	197,4,c	;volatile
 11440   003DFA  0012               	return		;funcret
 11441   003DFC                     __end_of_I2C_MasterSendNack:
 11442                           	callstack 0
 11443                           
 11444 ;; *************** function _I2C_MasterStartRx *****************
 11445 ;; Defined at:
 11446 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;		None
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;		None
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		None
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;Total ram usage:        0 bytes
 11465 ;; Hardware stack levels used: 1
 11466 ;; This function calls:
 11467 ;;		Nothing
 11468 ;; This function is called by:
 11469 ;;		_I2C_DO_RCEN
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text94
 11474   003E1C                     __ptext94:
 11475                           	callstack 0
 11476   003E1C                     _I2C_MasterStartRx:
 11477                           	callstack 17
 11478   003E1C                     
 11479                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 11480   003E1C  86C5               	bsf	197,3,c	;volatile
 11481   003E1E  0012               	return		;funcret
 11482   003E20                     __end_of_I2C_MasterStartRx:
 11483                           	callstack 0
 11484                           
 11485 ;; *************** function _I2C_CallbackReturnReset *****************
 11486 ;; Defined at:
 11487 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  funPtr          2    9[COMRAM] PTR void 
 11490 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11491 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      enum E363
 11496 ;; Registers used:
 11497 ;;		wreg
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;Total ram usage:        2 bytes
 11508 ;; Hardware stack levels used: 1
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_I2C_Open
 11513 ;;		_I2C_DO_TX
 11514 ;;		_I2C_DO_RX
 11515 ;;		_I2C_DO_TX_EMPTY
 11516 ;;		_I2C_DO_ADDRESS_NACK
 11517 ;;		_I2C_DO_RX_EMPTY
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           	psect	text95
 11522   003E20                     __ptext95:
 11523                           	callstack 0
 11524   003E20                     _I2C_CallbackReturnReset:
 11525                           	callstack 17
 11526   003E20                     
 11527                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 11528   003E20  0E05               	movlw	5
 11529   003E22  0012               	return		;funcret
 11530   003E24                     __end_of_I2C_CallbackReturnReset:
 11531                           	callstack 0
 11532                           
 11533 ;; *************** function _I2C_CallbackReturnStop *****************
 11534 ;; Defined at:
 11535 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  funPtr          2    9[COMRAM] PTR void 
 11538 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11539 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;		None
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      enum E363
 11544 ;; Registers used:
 11545 ;;		wreg
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;Total ram usage:        2 bytes
 11556 ;; Hardware stack levels used: 1
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_I2C_Open
 11561 ;;		_I2C_SetCallback
 11562 ;;		i2_I2C_SetCallback
 11563 ;;		_I2C_DO_TX
 11564 ;;		_I2C_DO_RX
 11565 ;;		_I2C_DO_TX_EMPTY
 11566 ;;		_I2C_DO_ADDRESS_NACK
 11567 ;;		_I2C_DO_RX_EMPTY
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text96
 11572   003E24                     __ptext96:
 11573                           	callstack 0
 11574   003E24                     _I2C_CallbackReturnStop:
 11575                           	callstack 17
 11576   003E24                     
 11577                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 11578   003E24  0E01               	movlw	1
 11579   003E26  0012               	return		;funcret
 11580   003E28                     __end_of_I2C_CallbackReturnStop:
 11581                           	callstack 0
 11582                           
 11583 ;; *************** function _rdBlkRegCompleteHandler *****************
 11584 ;; Defined at:
 11585 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  ptr             2    9[COMRAM] PTR void 
 11588 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11589 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      enum E363
 11594 ;; Registers used:
 11595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;Total ram usage:        2 bytes
 11606 ;; Hardware stack levels used: 1
 11607 ;; Hardware stack levels required when called: 2
 11608 ;; This function calls:
 11609 ;;		i2_I2C_SetBuffer
 11610 ;;		i2_I2C_SetDataCompleteCallback
 11611 ;; This function is called by:
 11612 ;;		_I2C_ReadDataBlock
 11613 ;;		_I2C_DO_TX
 11614 ;;		_I2C_DO_RX
 11615 ;;		_I2C_DO_TX_EMPTY
 11616 ;;		_I2C_DO_ADDRESS_NACK
 11617 ;;		_I2C_DO_RX_EMPTY
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text97
 11622   0038B6                     __ptext97:
 11623                           	callstack 0
 11624   0038B6                     _rdBlkRegCompleteHandler:
 11625                           	callstack 15
 11626   0038B6                     
 11627                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11628   0038B6  EE20 F002          	lfsr	2,2
 11629   0038BA  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11630   0038BC  26D9               	addwf	fsr2l,f,c
 11631   0038BE  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11632   0038C0  22DA               	addwfc	fsr2h,f,c
 11633   0038C2  CFDE F001          	movff	postinc2,i2I2C_SetBuffer@buffer
 11634   0038C6  CFDD F002          	movff	postdec2,i2I2C_SetBuffer@buffer+1
 11635   0038CA  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11636   0038CE  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11637   0038D2  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 11638   0038D6  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 11639   0038DA  ECF9  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11640   0038DE                     
 11641                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11642   0038DE  0E00               	movlw	0
 11643   0038E0  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11644   0038E2  0E00               	movlw	0
 11645   0038E4  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11646   0038E6  0E00               	movlw	0
 11647   0038E8  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11648   0038EA  0E00               	movlw	0
 11649   0038EC  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11650   0038EE  EC34  F01E         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11651   0038F2                     
 11652                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11653   0038F2  0E02               	movlw	2
 11654   0038F4  0012               	return		;funcret
 11655   0038F6                     __end_of_rdBlkRegCompleteHandler:
 11656                           	callstack 0
 11657                           
 11658 ;; *************** function _wr1RegCompleteHandler *****************
 11659 ;; Defined at:
 11660 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;  ptr             2    9[COMRAM] PTR void 
 11663 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11664 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;		None
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  1    wreg      enum E363
 11669 ;; Registers used:
 11670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;Total ram usage:        2 bytes
 11681 ;; Hardware stack levels used: 1
 11682 ;; Hardware stack levels required when called: 2
 11683 ;; This function calls:
 11684 ;;		i2_I2C_SetBuffer
 11685 ;;		i2_I2C_SetDataCompleteCallback
 11686 ;; This function is called by:
 11687 ;;		_I2C_Write1ByteRegister
 11688 ;;		_I2C_DO_TX
 11689 ;;		_I2C_DO_RX
 11690 ;;		_I2C_DO_TX_EMPTY
 11691 ;;		_I2C_DO_ADDRESS_NACK
 11692 ;;		_I2C_DO_RX_EMPTY
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text98
 11697   003AF8                     __ptext98:
 11698                           	callstack 0
 11699   003AF8                     _wr1RegCompleteHandler:
 11700                           	callstack 15
 11701   003AF8                     
 11702                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11703   003AF8  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11704   003AFC  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11705   003B00  0E00               	movlw	0
 11706   003B02  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11707   003B04  0E01               	movlw	1
 11708   003B06  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11709   003B08  ECF9  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11710   003B0C                     
 11711                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11712   003B0C  0E00               	movlw	0
 11713   003B0E  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11714   003B10  0E00               	movlw	0
 11715   003B12  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11716   003B14  0E00               	movlw	0
 11717   003B16  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11718   003B18  0E00               	movlw	0
 11719   003B1A  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11720   003B1C  EC34  F01E         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11721   003B20                     
 11722                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 11723   003B20  0E04               	movlw	4
 11724   003B22  0012               	return		;funcret
 11725   003B24                     __end_of_wr1RegCompleteHandler:
 11726                           	callstack 0
 11727                           
 11728 ;; *************** function _rd2RegCompleteHandler *****************
 11729 ;; Defined at:
 11730 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;  ptr             2    9[COMRAM] PTR void 
 11733 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11734 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      enum E363
 11739 ;; Registers used:
 11740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11750 ;;Total ram usage:        2 bytes
 11751 ;; Hardware stack levels used: 1
 11752 ;; Hardware stack levels required when called: 2
 11753 ;; This function calls:
 11754 ;;		i2_I2C_SetBuffer
 11755 ;;		i2_I2C_SetDataCompleteCallback
 11756 ;; This function is called by:
 11757 ;;		_I2C_Read2ByteRegister
 11758 ;;		_I2C_DO_TX
 11759 ;;		_I2C_DO_RX
 11760 ;;		_I2C_DO_TX_EMPTY
 11761 ;;		_I2C_DO_ADDRESS_NACK
 11762 ;;		_I2C_DO_RX_EMPTY
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           	psect	text99
 11767   003B24                     __ptext99:
 11768                           	callstack 0
 11769   003B24                     _rd2RegCompleteHandler:
 11770                           	callstack 15
 11771   003B24                     
 11772                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11773   003B24  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11774   003B28  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11775   003B2C  0E00               	movlw	0
 11776   003B2E  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11777   003B30  0E02               	movlw	2
 11778   003B32  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11779   003B34  ECF9  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11780   003B38                     
 11781                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11782   003B38  0E00               	movlw	0
 11783   003B3A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11784   003B3C  0E00               	movlw	0
 11785   003B3E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11786   003B40  0E00               	movlw	0
 11787   003B42  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11788   003B44  0E00               	movlw	0
 11789   003B46  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11790   003B48  EC34  F01E         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11791   003B4C                     
 11792                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11793   003B4C  0E02               	movlw	2
 11794   003B4E  0012               	return		;funcret
 11795   003B50                     __end_of_rd2RegCompleteHandler:
 11796                           	callstack 0
 11797                           
 11798 ;; *************** function _rd1RegCompleteHandler *****************
 11799 ;; Defined at:
 11800 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11801 ;; Parameters:    Size  Location     Type
 11802 ;;  ptr             2    9[COMRAM] PTR void 
 11803 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11804 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;		None
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  1    wreg      enum E363
 11809 ;; Registers used:
 11810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11820 ;;Total ram usage:        2 bytes
 11821 ;; Hardware stack levels used: 1
 11822 ;; Hardware stack levels required when called: 2
 11823 ;; This function calls:
 11824 ;;		i2_I2C_SetBuffer
 11825 ;;		i2_I2C_SetDataCompleteCallback
 11826 ;; This function is called by:
 11827 ;;		_I2C_Read1ByteRegister
 11828 ;;		_I2C_DO_TX
 11829 ;;		_I2C_DO_RX
 11830 ;;		_I2C_DO_TX_EMPTY
 11831 ;;		_I2C_DO_ADDRESS_NACK
 11832 ;;		_I2C_DO_RX_EMPTY
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836                           	psect	text100
 11837   003B50                     __ptext100:
 11838                           	callstack 0
 11839   003B50                     _rd1RegCompleteHandler:
 11840                           	callstack 15
 11841   003B50                     
 11842                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11843   003B50  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11844   003B54  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11845   003B58  0E00               	movlw	0
 11846   003B5A  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11847   003B5C  0E01               	movlw	1
 11848   003B5E  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11849   003B60  ECF9  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11850   003B64                     
 11851                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11852   003B64  0E00               	movlw	0
 11853   003B66  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11854   003B68  0E00               	movlw	0
 11855   003B6A  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11856   003B6C  0E00               	movlw	0
 11857   003B6E  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11858   003B70  0E00               	movlw	0
 11859   003B72  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11860   003B74  EC34  F01E         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11861   003B78                     
 11862                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11863   003B78  0E02               	movlw	2
 11864   003B7A  0012               	return		;funcret
 11865   003B7C                     __end_of_rd1RegCompleteHandler:
 11866                           	callstack 0
 11867                           
 11868 ;; *************** function _wr2RegCompleteHandler *****************
 11869 ;; Defined at:
 11870 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  ptr             2    9[COMRAM] PTR void 
 11873 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11874 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;		None
 11877 ;; Return value:  Size  Location     Type
 11878 ;;                  1    wreg      enum E363
 11879 ;; Registers used:
 11880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11881 ;; Tracked objects:
 11882 ;;		On entry : 0/0
 11883 ;;		On exit  : 0/0
 11884 ;;		Unchanged: 0/0
 11885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;Total ram usage:        2 bytes
 11891 ;; Hardware stack levels used: 1
 11892 ;; Hardware stack levels required when called: 2
 11893 ;; This function calls:
 11894 ;;		i2_I2C_SetBuffer
 11895 ;;		i2_I2C_SetDataCompleteCallback
 11896 ;; This function is called by:
 11897 ;;		_I2C_Write2ByteRegister
 11898 ;;		_I2C_DO_TX
 11899 ;;		_I2C_DO_RX
 11900 ;;		_I2C_DO_TX_EMPTY
 11901 ;;		_I2C_DO_ADDRESS_NACK
 11902 ;;		_I2C_DO_RX_EMPTY
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           	psect	text101
 11907   003B7C                     __ptext101:
 11908                           	callstack 0
 11909   003B7C                     _wr2RegCompleteHandler:
 11910                           	callstack 15
 11911   003B7C                     
 11912                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11913   003B7C  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11914   003B80  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11915   003B84  0E00               	movlw	0
 11916   003B86  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11917   003B88  0E02               	movlw	2
 11918   003B8A  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11919   003B8C  ECF9  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11920   003B90                     
 11921                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11922   003B90  0E00               	movlw	0
 11923   003B92  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11924   003B94  0E00               	movlw	0
 11925   003B96  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11926   003B98  0E00               	movlw	0
 11927   003B9A  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11928   003B9C  0E00               	movlw	0
 11929   003B9E  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11930   003BA0  EC34  F01E         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11931   003BA4                     
 11932                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11933   003BA4  0E04               	movlw	4
 11934   003BA6  0012               	return		;funcret
 11935   003BA8                     __end_of_wr2RegCompleteHandler:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 11939 ;; Defined at:
 11940 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11943 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11944 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11945 ;;  ptr             2    7[COMRAM] PTR void 
 11946 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11947 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;Total ram usage:        4 bytes
 11964 ;; Hardware stack levels used: 1
 11965 ;; Hardware stack levels required when called: 1
 11966 ;; This function calls:
 11967 ;;		i2_I2C_SetCallback
 11968 ;; This function is called by:
 11969 ;;		_rd1RegCompleteHandler
 11970 ;;		_rd2RegCompleteHandler
 11971 ;;		_wr1RegCompleteHandler
 11972 ;;		_wr2RegCompleteHandler
 11973 ;;		_rdBlkRegCompleteHandler
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text102
 11978   003C68                     __ptext102:
 11979                           	callstack 0
 11980   003C68                     i2_I2C_SetDataCompleteCallback:
 11981                           	callstack 15
 11982   003C68                     
 11983                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 11984   003C68  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 11985   003C6C  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 11986   003C70  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 11987   003C74  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 11988   003C78  0E00               	movlw	0
 11989   003C7A  ECF1  F019         	call	i2_I2C_SetCallback
 11990   003C7E  0012               	return		;funcret
 11991   003C80                     __end_ofi2_I2C_SetDataCompleteCallback:
 11992                           	callstack 0
 11993                           
 11994 ;; *************** function i2_I2C_SetCallback *****************
 11995 ;; Defined at:
 11996 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  idx             1    wreg     enum E3139
 11999 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 12000 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12001 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12002 ;;  ptr             2    2[COMRAM] PTR void 
 12003 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12004 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  idx             1    4[COMRAM] enum E3139
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12019 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12020 ;;Total ram usage:        5 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; This function calls:
 12023 ;;		Nothing
 12024 ;; This function is called by:
 12025 ;;		i2_I2C_SetDataCompleteCallback
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	text103
 12030   0033E2                     __ptext103:
 12031                           	callstack 0
 12032   0033E2                     i2_I2C_SetCallback:
 12033                           	callstack 15
 12034                           
 12035                           ;incstack = 0
 12036                           ;i2I2C_SetCallback@idx stored from wreg
 12037   0033E2  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 12038   0033E4                     
 12039                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 12040   0033E4  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 12041   0033E6  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 12042   0033E8  B4D8               	btfsc	status,2,c
 12043   0033EA  EFF9  F019         	goto	i2u280_41
 12044   0033EE  EFFB  F019         	goto	i2u280_40
 12045   0033F2                     i2u280_41:
 12046   0033F2  EF15  F01A         	goto	i2l4682
 12047   0033F6                     i2u280_40:
 12048   0033F6                     
 12049                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12050   0033F6  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12051   0033F8  0D02               	mullw	2
 12052   0033FA  0EA9               	movlw	low _I2C_Status
 12053   0033FC  24F3               	addwf	243,w,c
 12054   0033FE  6ED9               	movwf	fsr2l,c
 12055   003400  0E00               	movlw	high _I2C_Status
 12056   003402  20F4               	addwfc	prodh,w,c
 12057   003404  6EDA               	movwf	fsr2h,c
 12058   003406  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 12059   00340A  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 12060                           
 12061                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 12062   00340E  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12063   003410  0D02               	mullw	2
 12064   003412  0EB5               	movlw	low (_I2C_Status+12)
 12065   003414  24F3               	addwf	243,w,c
 12066   003416  6ED9               	movwf	fsr2l,c
 12067   003418  0E00               	movlw	high (_I2C_Status+12)
 12068   00341A  20F4               	addwfc	prodh,w,c
 12069   00341C  6EDA               	movwf	fsr2h,c
 12070   00341E  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 12071   003422  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 12072                           
 12073                           ;mcc_generated_files/i2c_master.c: 310:     }
 12074   003426  EF2B  F01A         	goto	i2l502
 12075   00342A                     i2l4682:
 12076                           
 12077                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12078   00342A  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12079   00342C  0D02               	mullw	2
 12080   00342E  0EA9               	movlw	low _I2C_Status
 12081   003430  24F3               	addwf	243,w,c
 12082   003432  6ED9               	movwf	fsr2l,c
 12083   003434  0E00               	movlw	high _I2C_Status
 12084   003436  20F4               	addwfc	prodh,w,c
 12085   003438  6EDA               	movwf	fsr2h,c
 12086   00343A  0E24               	movlw	low _I2C_CallbackReturnStop
 12087   00343C  6EDE               	movwf	postinc2,c
 12088   00343E  0E3E               	movlw	high _I2C_CallbackReturnStop
 12089   003440  6EDD               	movwf	postdec2,c
 12090                           
 12091                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12092   003442  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12093   003444  0D02               	mullw	2
 12094   003446  0EB5               	movlw	low (_I2C_Status+12)
 12095   003448  24F3               	addwf	243,w,c
 12096   00344A  6ED9               	movwf	fsr2l,c
 12097   00344C  0E00               	movlw	high (_I2C_Status+12)
 12098   00344E  20F4               	addwfc	prodh,w,c
 12099   003450  6EDA               	movwf	fsr2h,c
 12100   003452  6ADE               	clrf	postinc2,c
 12101   003454  6ADD               	clrf	postdec2,c
 12102   003456                     i2l502:
 12103   003456  0012               	return		;funcret
 12104   003458                     __end_ofi2_I2C_SetCallback:
 12105                           	callstack 0
 12106                           
 12107 ;; *************** function i2_I2C_SetBuffer *****************
 12108 ;; Defined at:
 12109 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;  buffer          2    0[COMRAM] PTR void 
 12112 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
 12113 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), 
 12114 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 12115 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 12116 ;;  bufferSize      2    2[COMRAM] unsigned int 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  1    wreg      void 
 12121 ;; Registers used:
 12122 ;;		wreg, status,2, status,0
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;Total ram usage:        4 bytes
 12133 ;; Hardware stack levels used: 1
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_rd1RegCompleteHandler
 12138 ;;		_rd2RegCompleteHandler
 12139 ;;		_wr1RegCompleteHandler
 12140 ;;		_wr2RegCompleteHandler
 12141 ;;		_rdBlkRegCompleteHandler
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           	psect	text104
 12146   003BF2                     __ptext104:
 12147                           	callstack 0
 12148   003BF2                     i2_I2C_SetBuffer:
 12149                           	callstack 16
 12150   003BF2                     
 12151                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 12152   003BF2  0100               	movlb	0	; () banked
 12153   003BF4  A7CC               	btfss	(_I2C_Status+35)& (0+255),3,b
 12154   003BF6  EFFF  F01D         	goto	i2u339_41
 12155   003BFA  EF01  F01E         	goto	i2u339_40
 12156   003BFE                     i2u339_41:
 12157   003BFE  EF0A  F01E         	goto	i2l479
 12158   003C02                     i2u339_40:
 12159   003C02                     
 12160                           ; BSR set to: 0
 12161                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 12162   003C02  C001  F0C6         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 12163   003C06  C002  F0C7         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 12164   003C0A                     
 12165                           ; BSR set to: 0
 12166                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 12167   003C0A  C003  F0C8         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 12168   003C0E  C004  F0C9         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12169   003C12                     
 12170                           ; BSR set to: 0
 12171                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 12172   003C12  97CC               	bcf	(_I2C_Status+35)& (0+255),3,b
 12173   003C14                     i2l479:
 12174                           
 12175                           ; BSR set to: 0
 12176   003C14  0012               	return		;funcret
 12177   003C16                     __end_ofi2_I2C_SetBuffer:
 12178                           	callstack 0
 12179                           
 12180 ;; *************** function _I2C_MasterStop *****************
 12181 ;; Defined at:
 12182 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;		None
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;		None
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		None
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12200 ;;Total ram usage:        0 bytes
 12201 ;; Hardware stack levels used: 1
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_I2C_DO_SEND_STOP
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text105
 12210   003E28                     __ptext105:
 12211                           	callstack 0
 12212   003E28                     _I2C_MasterStop:
 12213                           	callstack 16
 12214   003E28                     
 12215                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 12216   003E28  84C5               	bsf	197,2,c	;volatile
 12217   003E2A  0012               	return		;funcret
 12218   003E2C                     __end_of_I2C_MasterStop:
 12219                           	callstack 0
 12220                           
 12221 ;; *************** function _I2C_MasterEnableRestart *****************
 12222 ;; Defined at:
 12223 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;		None
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;		None
 12228 ;; Return value:  Size  Location     Type
 12229 ;;                  1    wreg      void 
 12230 ;; Registers used:
 12231 ;;		None
 12232 ;; Tracked objects:
 12233 ;;		On entry : 0/0
 12234 ;;		On exit  : 0/0
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;Total ram usage:        0 bytes
 12242 ;; Hardware stack levels used: 1
 12243 ;; This function calls:
 12244 ;;		Nothing
 12245 ;; This function is called by:
 12246 ;;		_I2C_DO_SEND_RESTART_READ
 12247 ;;		_I2C_DO_SEND_RESTART_WRITE
 12248 ;;		_I2C_DO_SEND_RESTART
 12249 ;;		_I2C_DO_RX_EMPTY
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text106
 12254   003E2C                     __ptext106:
 12255                           	callstack 0
 12256   003E2C                     _I2C_MasterEnableRestart:
 12257                           	callstack 16
 12258   003E2C                     
 12259                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 12260   003E2C  82C5               	bsf	197,1,c	;volatile
 12261   003E2E  0012               	return		;funcret
 12262   003E30                     __end_of_I2C_MasterEnableRestart:
 12263                           	callstack 0
 12264                           
 12265                           	psect	text107
 12266   000000                     __ptext107:
 12267                           	callstack 0
 12268   000000                     
 12269                           	psect	rparam
 12270   000000                     
 12271                           	psect	temp
 12272   000046                     btemp:
 12273                           	callstack 0
 12274   000046                     	ds	1
 12275   000000                     int$flags	set	btemp
 12276   000000                     wtemp8	set	btemp+1
 12277   000000                     ttemp5	set	btemp+1
 12278   000000                     ttemp6	set	btemp+4
 12279   000000                     ttemp7	set	btemp+8
 12280                           
 12281                           	psect	config
 12282                           
 12283                           ; Padding undefined space
 12284   300000                     	org	3145728
 12285   300000  FF                 	db	255
 12286                           
 12287                           ;Config register CONFIG1H @ 0x300001
 12288                           ;	Oscillator Selection bits
 12289                           ;	FOSC = HS, HS oscillator
 12290                           ;	Fail-Safe Clock Monitor Enable bit
 12291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12292                           ;	Internal/External Oscillator Switchover bit
 12293                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12294   300001                     	org	3145729
 12295   300001  02                 	db	2
 12296                           
 12297                           ;Config register CONFIG2L @ 0x300002
 12298                           ;	Power-up Timer Enable bit
 12299                           ;	PWRTEN = OFF, PWRT disabled
 12300                           ;	Brown-out Reset Enable bits
 12301                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12302                           ;	Brown Out Reset Voltage bits
 12303                           ;	BORV = 18, VBOR set to 1.8 V nominal
 12304   300002                     	org	3145730
 12305   300002  1F                 	db	31
 12306                           
 12307                           ;Config register CONFIG2H @ 0x300003
 12308                           ;	Watchdog Timer Enable bit
 12309                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 12310                           ;	Watchdog Timer Postscale Select bits
 12311                           ;	WDTPS = 32768, 1:32768
 12312   300003                     	org	3145731
 12313   300003  1E                 	db	30
 12314                           
 12315                           ; Padding undefined space
 12316   300004                     	org	3145732
 12317   300004  FF                 	db	255
 12318                           
 12319                           ;Config register CONFIG3H @ 0x300005
 12320                           ;	CCP2 MUX bit
 12321                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12322                           ;	PORTB A/D Enable bit
 12323                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 12324                           ;	Low-Power Timer1 Oscillator Enable bit
 12325                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12326                           ;	HFINTOSC Fast Start-up
 12327                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 12328                           ;	MCLR Pin Enable bit
 12329                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12330   300005                     	org	3145733
 12331   300005  8B                 	db	139
 12332                           
 12333                           ;Config register CONFIG4L @ 0x300006
 12334                           ;	Stack Full/Underflow Reset Enable bit
 12335                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12336                           ;	Single-Supply ICSP Enable bit
 12337                           ;	LVP = ON, Single-Supply ICSP enabled
 12338                           ;	Extended Instruction Set Enable bit
 12339                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12340                           ;	Background Debugger Enable bit
 12341                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 12342   300006                     	org	3145734
 12343   300006  85                 	db	133
 12344                           
 12345                           ; Padding undefined space
 12346   300007                     	org	3145735
 12347   300007  FF                 	db	255
 12348                           
 12349                           ;Config register CONFIG5L @ 0x300008
 12350                           ;	Code Protection Block 0
 12351                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12352                           ;	Code Protection Block 1
 12353                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12354                           ;	Code Protection Block 2
 12355                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12356                           ;	Code Protection Block 3
 12357                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12358   300008                     	org	3145736
 12359   300008  0F                 	db	15
 12360                           
 12361                           ;Config register CONFIG5H @ 0x300009
 12362                           ;	Boot Block Code Protection bit
 12363                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12364                           ;	Data EEPROM Code Protection bit
 12365                           ;	CPD = OFF, Data EEPROM not code-protected
 12366   300009                     	org	3145737
 12367   300009  C0                 	db	192
 12368                           
 12369                           ;Config register CONFIG6L @ 0x30000A
 12370                           ;	Write Protection Block 0
 12371                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12372                           ;	Write Protection Block 1
 12373                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12374                           ;	Write Protection Block 2
 12375                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12376                           ;	Write Protection Block 3
 12377                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 12378   30000A                     	org	3145738
 12379   30000A  0F                 	db	15
 12380                           
 12381                           ;Config register CONFIG6H @ 0x30000B
 12382                           ;	Configuration Register Write Protection bit
 12383                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12384                           ;	Boot Block Write Protection bit
 12385                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12386                           ;	Data EEPROM Write Protection bit
 12387                           ;	WRTD = OFF, Data EEPROM not write-protected
 12388   30000B                     	org	3145739
 12389   30000B  E0                 	db	224
 12390                           
 12391                           ;Config register CONFIG7L @ 0x30000C
 12392                           ;	Table Read Protection Block 0
 12393                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12394                           ;	Table Read Protection Block 1
 12395                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12396                           ;	Table Read Protection Block 2
 12397                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12398                           ;	Table Read Protection Block 3
 12399                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12400   30000C                     	org	3145740
 12401   30000C  0F                 	db	15
 12402                           
 12403                           ;Config register CONFIG7H @ 0x30000D
 12404                           ;	Boot Block Table Read Protection bit
 12405                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12406   30000D                     	org	3145741
 12407   30000D  40                 	db	64
 12408                           tosu	equ	0xFFF
 12409                           tosh	equ	0xFFE
 12410                           tosl	equ	0xFFD
 12411                           stkptr	equ	0xFFC
 12412                           pclatu	equ	0xFFB
 12413                           pclath	equ	0xFFA
 12414                           pcl	equ	0xFF9
 12415                           tblptru	equ	0xFF8
 12416                           tblptrh	equ	0xFF7
 12417                           tblptrl	equ	0xFF6
 12418                           tablat	equ	0xFF5
 12419                           prodh	equ	0xFF4
 12420                           prodl	equ	0xFF3
 12421                           indf0	equ	0xFEF
 12422                           postinc0	equ	0xFEE
 12423                           postdec0	equ	0xFED
 12424                           preinc0	equ	0xFEC
 12425                           plusw0	equ	0xFEB
 12426                           fsr0h	equ	0xFEA
 12427                           fsr0l	equ	0xFE9
 12428                           wreg	equ	0xFE8
 12429                           indf1	equ	0xFE7
 12430                           postinc1	equ	0xFE6
 12431                           postdec1	equ	0xFE5
 12432                           preinc1	equ	0xFE4
 12433                           plusw1	equ	0xFE3
 12434                           fsr1h	equ	0xFE2
 12435                           fsr1l	equ	0xFE1
 12436                           bsr	equ	0xFE0
 12437                           indf2	equ	0xFDF
 12438                           postinc2	equ	0xFDE
 12439                           postdec2	equ	0xFDD
 12440                           preinc2	equ	0xFDC
 12441                           plusw2	equ	0xFDB
 12442                           fsr2h	equ	0xFDA
 12443                           fsr2l	equ	0xFD9
 12444                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    32
    Data        36
    BSS         124
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      69
    BANK0           160     73     159
    BANK1           256     18      74
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$3394$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$3400$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$3406$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$3412$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$3411	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$3406	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$3405	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$3400	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$3399	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$3394	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$3393	const PTR FTN()enum E3121 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    res	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_4(CODE[3]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_4(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_4(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 3
		 -> vfprintf@cfmt(COMRAM[3]), 

    S2869$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 3
		 -> vfprintf@cfmt(COMRAM[3]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_short_to_string@Temp_String(COMRAM[6]), data(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2790$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2790$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 4
		 -> data(BANK0[4]), 

    memset@s	PTR unsigned char  size(2) Largest target is 4
		 -> data(BANK0[4]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj.lcd_data(COMRAM[4]), lcd_obj(COMRAM[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj.lcd_data(COMRAM[4]), lcd_obj(COMRAM[6]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj.lcd_data(COMRAM[4]), lcd_obj(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllllh[1]), PORTD(BITBIGSFRllllllh[1]), PORTC(BITBIGSFRllllllh[1]), PORTB(BITBIGSFRllllllh[1]), 
		 -> PORTA(BITBIGSFRllllllh[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATC(ABS[1]), LATB(ABS[1]), LATA(BITBIGSFRllllllll[1]), LATD(BITBIGSFRllllllll[1]), 
		 -> LATE(BITBIGSFRllllllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISA(BITBIGSFRllllhll[1]), 
		 -> TRISE(BITBIGSFRllllhll[1]), 

    EUART_Send_String@text	PTR unsigned char  size(2) Largest target is 29
		 -> STR_7(CODE[7]), STR_5(CODE[7]), STR_1(CODE[29]), 

    send_4bit_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    send_4bit_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 4
		 -> data(BANK0[4]), 

    convert_byte_to_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> data(BANK0[4]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[7]), STR_6(CODE[7]), data(BANK0[4]), STR_2(CODE[14]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3121[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S97$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _gpio_pin_initialize->_gpio_pin_write_logic
    _sprintf->_vfprintf
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _read_prec_or_width->___wmul
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _Set_RTC_Date_Time->_I2C_Read1ByteRegister
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Read_Temprature->_I2C_Read1ByteRegister
    _lcd_4bit_send_char_data->_send_4bit_data
    _lcd_4bit_send_command->_send_4bit_data
    _send_4bit_enable_signal->_gpio_pin_write_logic
    _send_4bit_data->_gpio_pin_write_logic
    _EUART_Send_String->_EUSART_Write
    _EEPROM_Write_1Byte->_I2C_Write1ByteRegister
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _EEPROM_Read_1Byte->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_convert_byte_to_string
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _convert_byte_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _otoa->_pad
    _dtoa->_pad
    _Print_RTC_Date_Time->_lcd_4bit_send_string
    _lcd_4bit_send_string->_lcd_4bit_send_char_data

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_convert_byte_to_string
    _convert_byte_to_string->_sprintf

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  137943
                                             16 BANK1      2     2      0
                  _EEPROM_Read_1Byte
                 _EEPROM_Write_1Byte
                  _EUART_Send_String
             _I2C_Write1ByteRegister
                _Print_RTC_Date_Time
                    _Read_Temprature
                  _SYSTEM_Initialize
                  _Set_RTC_Date_Time
             _convert_byte_to_string
                 _lcd_4bit_intialize
              _lcd_4bit_send_command
               _lcd_4bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   6     4      2   15854
                                              5 BANK0      6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    3415
                                             35 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     378
                                             25 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _convert_byte_to_string                               5     3      2   33386
                                             71 BANK0      2     0      2
                                             14 BANK1      2     2      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    16      9   31329
                                             62 BANK0      9     0      9
                                              0 BANK1     14    14      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                            10     3      7   30429
                                             42 COMRAM     3     3      0
                                             55 BANK0      7     0      7
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6   29887
                                             31 BANK0     24    18      6
                               _dtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                21    14      7    6245
                                             10 BANK0     21    14      7
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              4     2      2     475
                                             29 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              4     2      2     191
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              4     2      2     191
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                12     6      6    5605
                                             10 BANK0     12     6      6
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                             25 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     421
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                  10     6      4    3452
                                             31 COMRAM    10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2832
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _otoa                                                17    11      6    4877
                                             10 BANK0     17    11      6
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                15     9      6    6499
                                             10 BANK0     15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             41 COMRAM     1     1      0
                                              0 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             34 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                             25 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             35 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     613
                                             25 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     625
                                             25 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1827
                                             25 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _Set_RTC_Date_Time                                    6     0      6    6615
                                             37 COMRAM     6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_Temprature                                      1     1      0    6637
                                             37 COMRAM     1     1      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _Print_RTC_Date_Time                                 10     4      6   33037
                                              9 BANK0     10     4      6
                  _EUART_Send_String
                       _EUSART_Write
            _lcd_4bit_send_char_data
              _lcd_4bit_send_command
               _lcd_4bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string                                 5     1      4   10464
                                              5 BANK0      4     0      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              5     2      3    9601
                                              0 BANK0      5     2      3
               _gpio_pin_write_logic
                     _send_4bit_data
            _send_4bit_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_command                                5     2      3   11761
                                              0 BANK0      5     2      3
               _gpio_pin_write_logic
                     _send_4bit_data
            _send_4bit_enable_signal
 ---------------------------------------------------------------------------------
 (3) _send_4bit_enable_signal                              3     1      2    2730
                                             35 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _send_4bit_data                                       9     6      3    3220
                                             35 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    2268
                                             25 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _EUART_Send_String                                    2     0      2     366
                                             26 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_1Byte                                   3     1      2    6506
                                             37 COMRAM     3     1      2
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2    6288
                                             34 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_1Byte                                    2     1      1    6735
                                             37 COMRAM     2     1      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    6615
                                             34 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2218
                                             30 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1608
                                             25 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                             30 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                             25 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     144
                                             27 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      46
                                             25 COMRAM     2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                             25 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerHigh                     10    10      0   17934
                                             15 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsr                                       0     0      0   17934
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterFsm                                       2     2      0   17934
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (13) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_TX_EMPTY                                     2     2      0    4467
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_TX                                           2     2      0    4489
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_RX                                           2     2      0    4467
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (14) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_DO_ADDRESS_NACK                                 2     2      0    4467
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler                             2     0      2     858
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (15) i2_I2C_SetDataCompleteCallback                       4     0      4     510
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetCallback                                   5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (15) i2_I2C_SetBuffer                                     4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (14) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (15) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (15) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read_1Byte
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterEnableIrq
         _I2C_MasterOpen
         _I2C_SetInterruptHandler
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _EEPROM_Write_1Byte
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _EUART_Send_String
     _EUSART_Write
   _I2C_Write1ByteRegister
   _Print_RTC_Date_Time
     _EUART_Send_String
     _EUSART_Write
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _send_4bit_data
         _gpio_pin_write_logic
       _send_4bit_enable_signal
         _gpio_pin_write_logic
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _send_4bit_data
       _send_4bit_enable_signal
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
   _Read_Temprature
     _I2C_Read1ByteRegister
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Set_RTC_Date_Time
     _I2C_Read1ByteRegister
   _convert_byte_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aldiv
             ___almod
             _abs
               ___almod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _otoa
             _pad
           _read_prec_or_width
             ___wmul
           _utoa
             ___lldiv
             ___llmod
             _pad
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _lcd_4bit_intialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
     _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      4A       7       28.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9F       5       99.4%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      45       1       73.4%
BITBIGSFRhhl        1D      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      49        0.0%
BITBIGSFRhlll        C      0       0      41        0.0%
BITBIGSFRhhhh        7      0       0      36        0.0%
BITBIGSFRlhh         7      0       0      42        0.0%
BITBIGSFRhllh        6      0       0      40        0.0%
BITBIGSFRllllll      4      0       0      47        0.0%
BITBIGSFRllllhh      4      0       0      45        0.0%
BITBIGSFRllllhl      4      0       0      46        0.0%
BITBIGSFRllhhl       3      0       0      43        0.0%
BITBIGSFRhhhl        2      0       0      37        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      50        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Sep 21 10:52:12 2024

                       ??_I2C_DO_SEND_ADR_READ 0001                        ??_I2C_DO_SEND_ADR_WRITE 0002  
                                  _SSPSTATbits 0FC7                                             l35 34CA  
                                           l53 35A8                            ___wmul@multiplicand 001C  
                               _send_4bit_data 3798                          ??_I2C_DO_SEND_RESTART 0001  
                                          l211 3C94                                            l214 3D6A  
                                          l233 3D9A                                            l171 3C98  
                                          l147 3932                                            l502 33E0  
                                          l174 3CAA                                            l192 3D88  
                                          l186 3D7E                                            l275 3A42  
                                          l460 3AF6                                            l452 3CD2  
                                          l621 3C36                                            l189 3D74  
                                          l624 3E0A                                            l472 3DA2  
                                          l456 2FBE                                            l642 3E02  
                                          l466 38B4                                            l482 3C4E  
                                          l663 3DFE                                            l479 3BF0  
                                          l672 3E0E                                            l488 3C66  
                                          l497 3D92                                            l915 3D24  
                                          l772 326A                                            l669 3E06  
                                          l941 3796                                            l918 3CF8  
                                          l790 32EE                                            l950 1F1C  
                                          l767 24F6                                            l777 31E4  
                                          l857 3678                                            l877 37F0  
                                          l885 3A72                                            l957 3D16  
                                          l967 396C                     send_4bit_enable_signal@lcd 0024  
                   send_4bit_enable_signal@ret 0026                                            _abs 3836  
                                          _pad 2C4C                         fp__I2C_DO_RX_NACK_STOP 0000  
                                          _res 0038                                            _rtc 002E  
               ?_EUSART_SetFramingErrorHandler 001A                                            prod 0FF3  
                                          tosl 0FFD                                            wreg 0FE8  
                 ??_I2C_SetAddressNackCallback 0023                         _I2C_Write1ByteRegister 353C  
                     ??_I2C_CallbackReturnStop 000C                                   _I2C_DO_RESET 3D34  
                                         l1017 2658                                           l1123 2F20  
                                         ?_abs 0024                                           l1036 27A2  
                                         l2004 2C4A                                           l2012 3834  
                                         l1116 2F10                        ??_rd2RegCompleteHandler 000C  
                                         l2021 3A12                                           l2015 3E30  
                                         l1057 30D6                                           l2026 399C  
                                         l2035 3A9E                                           l1181 2A96  
                                         l2029 39A4                                           l1168 28AE  
                                         l1089 3BCC                                           l1516 315E  
                                         l1509 314E                                           l1810 2C92  
                                         l5020 3C34                                           l5012 3D8A  
                                         l1900 1B34                                           l1813 2CD6  
                                         l1821 1B96                                           l5014 3E0C  
                                         l5030 3878                                           l1815 2D12  
                                         l1823 1B9E                                           l5040 38A2  
                                         l5032 387C                                           l5024 3DFC  
                                         l5016 3C16                                           l1824 1BF6  
                                         l1904 2B78                                           l1841 1D6C  
                                         l5026 3E04                                           l5042 38AA  
                                         l5034 388C                                           l5018 3C24  
                                         l5050 336E                                           l1922 1170  
                                         l5028 3E08                                           l5044 38AE  
                                         l5036 388E                                           l5052 3380  
                                         l1764 2230                                           l1908 2B80  
                                         l1933 124E                                           l5038 3892  
                                         l5046 38B2                                           l5054 33B4  
                                         l1846 1F4A                                           l5400 2FAC  
                                         l1848 1F52                                           l7000 30D8  
                                         l1864 225E                                           l1881 18EC  
                                         l1777 373A                                           l5402 2FB0  
                                         l1858 2068                                           l7010 312E  
                                         l7002 30EE                                           l1874 2394  
                                         l1866 2266                                           l1946 18B6  
                                         l1859 20BA                                           l5404 2FB4  
                                         l5420 3BEE                                           l5412 3C38  
                                         l1980 3874                                           l7020 2C6E  
                                         l7100 1BA6                                           l7012 313E  
                                         l7004 30F6                                           l1973 3612  
                                         l5430 3AD0                                           l5406 2FB8  
                                         l5422 3C50                                           l5414 3BCE  
                                         l7030 2CB8                                           l7022 2C7E  
                                         l7110 1BE6                                           l7102 1BB6  
                                         l7014 3148                                           l7006 3102  
                                         ?_pad 0060                                           l1983 39DC  
                                         l1879 18E4                                           l5432 3AE0  
                                         l5424 3D9C                                           l5408 2FBC  
                                         l5360 2F24                                           l5416 3BDE  
                                         l7040 3850                                           l7032 2CE4  
                                         l7024 2C8A                                           l7016 2C4C  
                                         l7120 1C16                                           l7112 1BEE  
                                         l7104 1BC4                                           l7008 3110  
                                         l1977 386C                                           l5434 3AE4  
                                         l5370 2F40                                           l5362 2F28  
                                         l5418 3BE6                                           l5442 3D76  
                                         l7034 2CF8                                           l7026 2C9E  
                                         l7018 2C5A                                           l7130 1C76  
                                         l7122 1C20                                           l7114 1C04  
                                         l7106 1BCA                                           l7210 226E  
                                         l7202 2232                                           l7042 3AA0  
                                         l7050 396E                                           l5436 3AF0  
                                         l5428 3ACC                                           l5380 2F58  
                                         l5372 2F42                                           l5364 2F38  
                                         l7060 265A                                           l5444 3D6C  
                                         l5700 3D94                                           l7028 2CB2  
                                         l7140 1D10                                           l7124 1C26  
                                         l7132 1CAA                                           l7116 1C0A  
                                         l7108 1BDA                                           l7220 22C6  
                                         l7212 2278                                           l7204 2240  
                                         l7300 1AA2                                           l1989 3ACA  
                                         l5438 3AF4                                           l5390 2F80  
                                         l5382 2F60                                           l5374 2F46  
                                         l5366 2F3C                                           l7070 26B8  
                                         l7062 265E                                           l5446 3D80  
                                         l5702 3CC0                                           l5710 3A2E  
                                         l7038 3836                                           l7134 1CC6  
                                         l7142 1D1E                                           l7126 1C68  
                                         l7118 1C0E                                           l7230 2344  
                                         l7222 22CC                                           l7214 2282  
                                         l7206 2242                                           l7046 39A6  
                                         l7054 396E                                           l7310 1AE6  
                                         l7302 1AB0                                           l5392 2F88  
                                         l5384 2F68                                           l5376 2F4E  
                                         l5368 2F3E                                           l7072 2714  
                                         l7064 2670                                           l5704 3CD0  
                                         l5712 3A34                                           l7144 1D2E  
                                         l7136 1CDC                                           l7128 1C70  
                                         l7160 1F5A                                           l7152 1F1E  
                                         l7320 2AA0                                           l7232 235E  
                                         l7216 2288                                           l7224 2300  
                                         l7208 2250                                           l7056 3990  
                                         l7312 1AF6                                           l7304 1AC2  
                                         l7240 18B8                                           l7400 119C  
                                         l5394 2F90                                           l5386 2F70  
                                         l5378 2F50                                           l7066 2692  
                                         l7330 3798                                           l5714 3A36  
                                         l5706 3A14                                           l7146 1D34  
                                         l7138 1CF6                                           l7090 1B5C  
                                         l7170 1F80                                           l7162 1F64  
                                         l7154 1F2C                                           l7322 2AD4  
                                         l7226 2314                                           l7234 236C  
                                         l7218 22BE                                           l7306 1AD0  
                                         l7314 1B0C                                           l7250 1912  
                                         l7242 18C6                                           l7410 1214  
                                         l7402 11AA                                           l4684 3E00  
                                         l5396 2F98                                           l5388 2F78  
                                         l5660 345E                                           l7076 2776  
                                         l7068 26B0                                           l7340 37DE  
                                         l5716 3A40                                           l5708 3A2C  
                                         l7148 1D44                                           l7092 1B6C  
                                         l7180 1FEE                                           l7172 1F92  
                                         l7164 1F6A                                           l7156 1F2E  
                                         l7324 2B10                                           l7228 232A  
                                         l7308 1AE0                                           l7260 194A  
                                         l7252 1920                                           l7244 18C8  
                                         l7420 1256                                           l7412 1228  
                                         l7404 11B4                                           l5398 2FA0  
                                         l5670 34B4                                           l5662 3474  
                                         l7078 27A0                                           l7342 37EE  
                                         l7350 3A54                                           l5718 3D62  
                                         l7094 1B7A                                           l7086 1B36  
                                         l7190 2056                                           l7182 2004  
                                         l7174 1F98                                           l7166 1F74  
                                         l7158 1F3C                                           l7326 2B30  
                                         l7318 2A98                                           l7270 1982  
                                         l7262 1950                                           l7254 1930  
                                         l7246 18D6                                           l7238 18B8  
                                         l7502 17F4                                           l7430 1306  
                                         l7414 123E                                           l7406 11E8  
                                         l5672 34C8                                           l5664 3488  
                                         l5680 3554                                           l7336 37A0  
                                         l7352 3A5E                                           l7096 1B7C  
                                         l7088 1B4C                                           l7192 2076  
                                         l7184 201E                                           l7176 1F9E  
                                         l7168 1F7A                                           l7328 2B40  
                                         l7280 19A8                                           l7264 1956  
                                         l7256 1938                                           l7248 18F4  
                                         l7520 18A2                                           l7504 1828  
                                         l7512 185A                                           l7432 133C  
                                         l7440 13D8                                           l7424 125E  
                                         l7408 11F8                                           l7360 1092  
                                         l7600 2556                                           l5666 349C  
                                         l5658 345A                                           l5682 3568  
                                         l7338 37DC                                           l7354 3A70  
                                         l7346 3A44                                           l5690 38F6  
                                         l5906 373C                                           l7098 1B8A  
                                         l7194 207C                                           l7186 2038  
                                         l7178 1FD4                                           l7290 1A04  
                                         l7282 19D8                                           l7274 1986  
                                         l7266 1966                                           l7258 1940  
                                         l7506 1838                                           l7450 1472  
                                         l7442 140A                                           l7434 1370  
                                         l7418 124E                                           l7426 12C2  
                                         l7370 10C2                                           l7362 10A2  
                                         l7602 25B8                                           l5668 34B0  
                                         l5684 357C                                           l5676 353E  
                                         l7348 3A44                                           l5692 390A  
                                         l5908 3784                                           l7196 208C  
                                         l7188 2046                                           l6900 2E8E  
                                         l7284 19E8                                           l7268 1976  
                                         l7292 1A3A                                           l7508 184C  
                                         l7452 1492                                           l7428 12E2  
                                         l7380 10E2                                           l7372 10D6  
                                         l7364 10AE                                           l7620 35C4  
                                         l5686 3590                                           l5678 353E  
                                         l7630 3938                                           l5694 3916  
                                         l5870 3C90                                           l5862 3C80  
                                         l7198 2092                                           l6910 2ED0  
                                         l6902 2EA4                                           l7294 1A58  
                                         l7286 19F8                                           l7470 15E8  
                                         l7454 14B6                                           l7462 1558  
                                         l7446 1432                                           l7438 13A6  
                                         l8510 1274                                           l7366 10B2  
                                         l7518 186E                                           l7358 105E  
                                         l7622 35EA                                           l7606 2614  
                                         l5688 3594                                           l7632 394A  
                                         l8520 278A                                           l7640 31FE  
                                         l7800 1D94                                           l5696 3922  
                                         l5864 3C84                                           l7720 20DA  
                                         l6920 27A4                                           l6912 2EEE  
                                         l6904 2EAC                                           l7296 1A6E  
                                         l7288 19FE                                           l7480 164A  
                                         l7456 14EE                                           l7464 158A  
                                         l7448 1452                                           l8512 13BA  
                                         l7392 10FA                                           l7384 10E8  
                                         l7376 10DC                                           l7368 10C0  
                                         l7624 360A                                           l7616 35AA  
                                         l7608 2656                                           l7634 394E  
                                         l7642 3206                                           l7650 326C  
                                         l7810 1DD0                                           l7802 1DA8  
                                         l5698 392E                                           l5866 3C88  
                                         l7722 20E6                                           l6930 27D8  
                                         l6922 27A8                                           l6914 2EFE  
                                         l6906 2EB8                                           l7298 1A88  
                                         l7490 1748                                           l7474 1610  
                                         l7466 15C0                                           l8514 156C  
                                         l7458 1522                                           l7482 1692  
                                         l7394 115E                                           l7618 35B6  
                                         l8506 2640                                           l7628 3934  
                                         l7644 3268                                           l7636 31E6  
                                         l7580 3166                                           l7652 3280  
                                         l7820 1DF4                                           l7812 1DD4  
                                         l7804 1DAC                                           l5980 3D0C  
                                         l5868 3C8C                                           l7740 2208  
                                         l7732 218E                                           l7716 20BC  
                                         l6940 281A                                           l6932 27E8  
                                         l6924 27B6                                           l6860 2BA6  
                                         l6916 2F00                                           l6908 2EC6  
                                         l8516 166C                                           l7396 117E  
                                         l8508 1130                                           l7388 10EE  
                                         l7660 304E                                           l7574 3C98  
                                         l7638 31EC                                           l7582 3178  
                                         l7654 3284                                           l7830 1E26  
                                         l7822 1E0A                                           l7814 1DDC  
                                         l7806 1DB4                                           l7742 2214  
                                         l7734 21BA                                           l7726 211C  
                                         l6950 286C                                           l6942 2826  
                                         l6934 27EC                                           l6926 27C6  
                                         l6862 2BB0                                           l6870 37F2  
                                         l6918 2F0A                                           l8518 1798  
                                         l7486 16B6                                           l7494 1784  
                                         l7398 1180                                           l7750 36F2  
                                         l7590 24F8                                           l7670 30A8  
                                         l7662 304E                                           l7910 28B4  
                                         l5984 3CEA                                           l7576 3CA6  
                                         l7584 3180                                           l7656 32B6  
                                         l7648 326C                                           l7840 1E8A  
                                         l7832 1E3C                                           l7816 1DE4  
                                         l7808 1DBC                                           l7744 221A  
                                         l7728 2174                                           l6960 289E  
                                         l6952 286E                                           l6944 2834  
                                         l6936 27FC                                           l6928 27CA  
                                         l6864 2BCE                                           l6856 2B82  
                                         l6872 37FE                                           l6880 39EA  
                                         l7488 16F2                                           l7496 17B6  
                                         l7752 36FA                                           l7592 24FC  
                                         l7672 30D4                                           l7664 3060  
                                         l7760 2396                                           l7920 28D4  
                                         l7912 28B6                                           l5986 3D1A  
                                         l7586 31E2                                           l7578 3160  
                                         l7658 32BC                                           l7850 1EB6  
                                         l7842 1E96                                           l7834 1E58  
                                         l7818 1DE8                                           l7746 221E  
                                         l7738 21D4                                           l6954 2878  
                                         l6946 283E                                           l6938 2812  
                                         l6970 29CE                                           l6866 2C04  
                                         l6858 2B94                                           l6874 3810  
                                         l6882 39EE                                           l7498 17E8  
                                         l7754 3702                                           l7594 250E  
                                         l7666 3082                                           l7762 239C  
                                         l7930 2930                                           l7922 28E6  
                                         l7914 28B8                                           l7852 1EC8  
                                         l7844 1EAC                                           l7836 1E5E  
                                         l7828 1E14                                           l6948 285C  
                                         l6956 287E                                           l6980 2A0E  
                                         l6972 29D2                                           l6964 29AC  
                                         l6876 3814                                           l6884 3A06  
                                         l6892 3BA8                                           l7756 3724  
                                         l7748 36E0                                           l7860 3618  
                                         l7596 2530                                           l7668 30A0  
                                         l7780 240A                                           l7764 23AE  
                                         l7940 298C                                           l7932 293E  
                                         l7924 290E                                           l7916 28BA  
                                         l7908 28B0                                           l7854 1EDE  
                                         l7838 1E7A                                           l6958 288E  
                                         l6990 2A60                                           l6982 2A1A  
                                         l6974 29E0                                           l6966 29B0  
                                         l6878 39DE                                           l6894 3BC4  
                                         l7862 361E                                           l7598 254E  
                                         l7782 241A                                           l7774 23DA  
                                         l7766 23B2                                           l7934 2950  
                                         l7926 2916                                           l7918 28C6  
                                         l7856 1EFA                                           l7792 1D6E  
                                         l6984 2A28                                           l6992 2A66  
                                         l6976 29F0                                           l6968 29BE  
                                         l6888 3A74                                           l7864 3632  
                                         l7784 242C                                           l7776 23F6  
                                         l7768 23D6                                           l7936 2966  
                                         l7928 2924                                           l7858 1F00  
                                         l7794 1D80                                           l6994 2A76  
                                         l6986 2A46                                           l6978 2A06  
                                         l6898 2E7E                                           l7866 3636  
                                         l7786 2450                                           l7778 23FA  
                                         l7938 2976                                           l7796 1D84  
                                         l6996 2A86                                           l6988 2A56  
                                         l7868 3652                                           l7788 2462  
                                         l7798 1D8C                                           STR_1 1021  
                                         STR_2 103E                                           STR_3 105A  
                                         STR_5 104C                                           STR_6 104C  
                                         STR_7 1053                                           STR_8 1053  
                                         _LATA 0F89                                           _LATB 0F8A  
                                         _LATC 0F8B                                           _LATD 0F8C  
                                         _LATE 0F8D                                           u3400 3C24  
                                         u5000 2CE4                                           u3401 3C20  
                                         u5001 2CE0                                           u3410 388C  
                                         u5010 3850                                           u3411 3888  
                                         u5011 384C                                           u3420 38A2  
                                         u5020 3AC4                                           u3421 389E  
                                         u4061 378E                                           u5021 3ABE  
                                         u3430 3380                                           u5030 3AC6  
                                         u3431 337C                                           u3600 2F38  
                                         u5104 26D8                                           u5200 1C04  
                                         u5120 1B48                                           u5040 39D6  
                                         u3601 2F34                                           u5105 26D4  
                                         u5201 1C00                                           u5121 1B42  
                                         u5041 39D0                                           u3610 3BDE  
                                         u5114 2734                                           u5210 1CC6  
                                         u5130 1B4A                                           u5050 39D8  
                                         u3611 3BDA                                           u5115 2730  
                                         u5211 1CC2                                           u3620 3AE0  
                                         u6100 1E7A                                           u6020 20D6  
                                         u5220 1CDC                                           u5140 1B5C  
                                         u5300 1FEE                                           u5060 3990  
                                         u3621 3ADC                                           u6101 1E76  
                                         u6021 20D2                                           u5221 1CD8  
                                         u5141 1B58                                           u5301 1FEA  
                                         u5061 398C                                           u5070 2670  
                                         u6110 1EDE                                           u6030 2118  
                                         u5230 1CF6                                           u5150 1B7A  
                                         u5310 2004                                           u5071 266C  
                                         u6111 1EDA                                           u6031 2114  
                                         u5231 1CF2                                           u5151 1B76  
                                         u5311 2000                                           u3800 3474  
                                         u5080 2692                                           u6120 1F1C  
                                         u6040 218A                                           u5240 1D10  
                                         u5160 1B8A                                           u5320 201E  
                                         u5400 2314                                           u3801 3470  
                                         u5081 268E                                           u6121 1F18  
                                         u6041 2186                                           u5241 1D0C  
                                         u5161 1B86                                           u5321 201A  
                                         u5401 2310                                           u3810 34C8  
                                         u5090 26B0                                           u6050 21D0  
                                         u5250 1D1E                                           u5170 1BB6  
                                         u5330 2038                                           u5410 232A  
                                         u6130 3632                                           u3811 34C4  
                                         u5091 26AC                                           u6051 21CC  
                                         u5251 1D1A                                           u5171 1BB2  
                                         u5331 2034                                           u5411 2326  
                                         u6131 362E                                           u3820 3554  
                                         u6060 2230                                           u5260 1D2E  
                                         u5180 1BC4                                           u5340 2046  
                                         u5420 2344                                           u5500 1930  
                                         u3821 3550                                           u6061 222C  
                                         u5261 1D2A                                           u5181 1BC0  
                                         u5341 2042                                           u5421 2340  
                                         u5501 192C                                           u3830 35A8  
                                         u4710 2B94                                           u5190 1BDA  
                                         u5350 2056                                           u5270 1F2C  
                                         u5430 235E                                           u5510 1966  
                                         u6070 23AE                                           u3831 35A4  
                                         u4711 2B90                                           u5191 1BD6  
                                         u5351 2052                                           u5271 1F28  
                                         u5431 235A                                           u5511 1962  
                                         u6071 23AA                                           u4720 2BA6  
                                         u5360 2068                                           u5280 1F3C  
                                         u4800 2EC6                                           u5440 236C  
                                         u5600 1AC2                                           u5520 19A8  
                                         u6080 240A                                           u4721 2BA2  
                                         u5361 2064                                           u5281 1F38  
                                         u4801 2EC2                                           u5441 2368  
                                         u5601 1ABE                                           u5521 19A4  
                                         u6081 2406                                           u6090 1E3C  
                                         u4730 2BCE                                           u5370 2076  
                                         u5290 1FBE                                           u4810 2EEE  
                                         u5610 1AD0                                           u5530 19D8  
                                         u5450 18C6                                           u6091 1E38  
                                         u4731 2BCA                                           u5371 2072  
                                         u4811 2EEA                                           u5611 1ACC  
                                         u5531 19D4                                           u5451 18C2  
                                         u6171 28F0                                           u4820 27B6  
                                         u4900 2A06                                           u4740 2C04  
                                         u5380 2240                                           u5620 1AE0  
                                         u5540 1A24                                           u5460 18D6  
                                         u5700 11AA                                           u4821 27B2  
                                         u4901 2A02                                           u4741 2C00  
                                         u5381 223C                                           u5621 1ADC  
                                         u5461 18D2                                           u5701 11A6  
                                         u6181 2902                                           u4830 27D8  
                                         u4910 2A28                                           u4750 3834  
                                         u5630 2AD4                                           u5390 2250  
                                         u5550 1A58                                           u5470 190E  
                                         u5710 11E8                                           u6407 3A56  
                                         u4831 27D4                                           u4911 2A24  
                                         u4751 3830                                           u5295 1FB4  
                                         u5631 2AD0                                           u5391 224C  
                                         u5551 1A54                                           u5471 1908  
                                         u5711 11E4                                           u5800 3CA6  
                                         u4840 2812                                           u4920 2A46  
                                         u4760 3A06                                           u5640 2B78  
                                         u5560 1A6E                                           u5480 1910  
                                         u5720 12E2                                           u5801 3CA2  
                                         u4841 280E                                           u4921 2A42  
                                         u4761 3A02                                           u5641 2B74  
                                         u5561 1A6A                                           u5545 1A1A  
                                         u5721 12DE                                           u5810 3178  
                                         u4850 2834                                           u4930 2A76  
                                         u4770 3A98                                           u5570 1A88  
                                         u5490 1920                                           u5730 1302  
                                         u5811 3174                                           u4851 2830  
                                         u4931 2A72                                           u4771 3A92  
                                         u5571 1A84                                           u5491 191C  
                                         u5731 12FE                                           u5900 396C  
                                         u5660 37EE                                           u4860 285C  
                                         u4940 30EE                                           u4780 3A9A  
                                         u5580 1AA2                                           u5740 1452  
                                         u5820 250E                                           u5901 3968  
                                         u5661 37EA                                           u4861 2858  
                                         u4941 30EA                                           u5581 1A9E  
                                         u5741 144E                                           u5821 250A  
                                         u5654 37CA                                           u5910 31FE  
                                         u4870 288E                                           u4790 2EA4  
                                         u4950 3110                                           u5590 1AB0  
                                         u5750 1472                                           u5670 1092  
                                         u5830 2530                                           u5655 37C6  
                                         u5911 31FA                                           u4871 288A  
                                         u4791 2EA0                                           u4951 310C  
                                         u5591 1AAC                                           u5751 146E  
                                         u5671 108E                                           u5831 252C  
                                         u6367 2998                                           u5920 3280  
                                         u4880 29BE                                           u4960 312E  
                                         u5760 1492                                           u5680 1170  
                                         u5840 254E                                           u5921 327C  
                                         u4881 29BA                                           u4961 312A  
                                         u5761 148E                                           u5681 116C  
                                         u5841 254A                                           u6377 2422  
                                         u5930 32AE                                           u4890 29E0  
                                         u4970 2C5A                                           u5770 14B2  
                                         u5690 117E                                           u4891 29DC  
                                         u4971 2C56                                           u5771 14AE  
                                         u5691 117A                                           u6387 2446  
                                         i2l92 3B7A                                           u5940 32DE  
                                         u4980 2C7E                                           u5780 16B2  
                                         u4981 2C7A                                           u5781 16AE  
                                         u6397 2464                                           u5950 32EE  
                                         u4990 2CD6                                           u5790 1828  
                                         u5870 262C                                           u5854 2576  
                                         i2l95 3B4E                                           u5951 32EA  
                                         u4991 2CD2                                           u5791 1824  
                                         u5871 2626                                           u5855 2572  
                                         u5880 262E                                           u5864 25D8  
                                         u5960 3060                                           u5937 32A4  
                                         u5865 25D4                                           u5961 305C  
                                         i2l98 3B22                                           u5890 360A  
                                         u5970 3082                                           u5947 32D4  
                                         u5891 3606                                           u5971 307E  
                                         u5980 30A0                                           u5981 309C  
                         _lcd_4bit_send_string 326C                                           _WPUB 0F7C  
                      ??_wr2RegCompleteHandler 000C                                           abs@a 0024  
                                         _data 00E3                                           _dbuf 010C  
                                         _main 28B0                                           _dtoa 1B36  
                     ?_I2C_CallbackReturnReset 000A                                           _prec 0036  
                                         _otoa 1F1E                                           _nout 00E1  
                                         pad@i 0066                                           pad@p 0064  
                                         fsr0h 0FEA                                           fsr1h 0FE2  
                                         indf0 0FEF                                           fsr2h 0FDA  
                                         fsr0l 0FE9                                           indf2 0FDF  
                                         fsr1l 0FE1                                           pad@w 0068  
                                         fsr2l 0FD9                               __end_of_I2C_Open 2FC0  
                                         btemp 0046                                           _utoa 2232  
                                         _xtoa 18B8                          ?i2_I2C_MasterClearIrq 0001  
                                         prodh 0FF4                                           prodl 0FF3  
                                         start 00B6                        _I2C_SetInterruptHandler 3D8A  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   ___param_bank 0000  
                        _lcd_4bit_send_command 31E6                         __end_of_send_4bit_data 37F2  
                                        ??_abs 0026                           _gpio_pin_write_logic 265A  
                                        ??_pad 002A                               ?_I2C_MasterClose 0001  
                        lcd_4bit_intialize@lcd 0065                          lcd_4bit_intialize@ret 006A  
                                ?_EUSART_Write 0001                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 3DB4                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 3D6C                                __end_of___aldiv 28B0  
                              __end_of___almod 2A98                                          ?_main 0001  
                                        ?_dtoa 006A                                          _EEADR 0FA9  
                                        ?_otoa 006A                                          _ANSEL 0F7E  
                              __end_of___lldiv 2F22                                          ?_utoa 006A  
                        _I2C_Read1ByteRegister 3458                                          ?_xtoa 006A  
                              __end_of___llmod 3160                                          i2l101 3BA6  
                                        i2l104 38F4                                          i2l242 008A  
                                        i2l502 3456                                          i2l238 006A  
                                        i2l512 3D56                                          i2l600 36DE  
                                        i2l521 2D9E                                          i2l505 3DEE  
                                        i2l611 3E22                                          i2l515 3D08  
                                        i2l524 2DD6                                          i2l509 353A  
                                        i2l630 3DE2                                          i2l518 3D32  
                                        i2l608 3E26                                          i2l633 3E2E  
                                        i2l537 2E0E                                          i2l482 3C7E  
                                        i2l538 2E7C                                          i2l627 3E1A  
                                        i2l651 3DF4                                          i2l555 336A  
                                        i2l645 3E2A                                          i2l549 3D4A  
                                        i2l573 3DDA                                          i2l654 3DFA  
                                        i2l582 3DC2                                          i2l479 3C14  
                                        i2l639 3E1E                                          i2l591 3DAA  
                                        i2l648 3CE6                                          i2l576 3DD2  
                                        i2l672 3E12                                          i2l585 3DBA  
                                        i2l594 3D3E                                          i2l675 3E16  
                                        i2l579 3DCA                                          i2l588 3DB2  
                                        _RCREG 0FAE                                          _RCSTA 0FAB  
                                 vfpfcnvrt@fmt 0081                                          _SPBRG 0FAF  
                                        _PORTA 0F80                                          _PORTB 0F81  
                                        _PORTC 0F82                                          _PORTD 0F83  
                                        _PORTE 0F84                              ??_I2C_DO_TX_EMPTY 000C  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                                          _TXREG 0FAD  
                                        _TXSTA 0FAC                              __end_of_I2C_DO_RX 2E7E  
                            __end_of_I2C_DO_TX 2DD8                             send_4bit_data@data 0026  
                                        _flags 003C                            read_prec_or_width@c 0027  
                          read_prec_or_width@n 0028                                          _fputc 2B82  
                            __end_of_I2C_Close 3AF8                                __end_of_isalpha 39DE  
                                        _fputs 37F2                               fp__I2C_MasterIsr 0000  
               I2C_MasterOperation@returnValue 001B                                          pad@fp 0060  
                                        _width 0034                                          _putch 3E30  
                                        dtoa@d 006C                                          dtoa@i 0076  
                                        dtoa@p 0072                                          dtoa@s 0078  
                                        dtoa@w 0074                          ?_lcd_4bit_send_string 0065  
                      _I2C_MasterEnableRestart 3E2C                                __end_of_islower 3AA0  
                              __end_of_isupper 3ACC                                          pclath 0FFA  
                                        pclatu 0FFB                                          tablat 0FF5  
                             ?_I2C_SetCallback 001A                                          otoa@d 006C  
                                        otoa@i 0079                                          otoa@p 0074  
                                        otoa@t 0076                                          otoa@w 0077  
                 I2C_SetAddressNackCallback@cb 001F                                          plusw0 0FEB  
                                        plusw2 0FDB                                          ttemp5 0047  
                                        ttemp6 004A                                          ttemp7 004E  
                                        utoa@d 006C                                          utoa@i 0074  
                                        utoa@p 0070                                          utoa@w 0072  
                                        status 0FD8                                          wtemp8 0047  
                              __end_of_sprintf 373C                                          xtoa@c 007E  
                                        xtoa@d 006C                              ?_I2C_DO_SEND_STOP 0001  
                                        xtoa@i 007C                                          xtoa@p 0077  
                                        xtoa@w 007A                                          xtoa@x 0070  
                              __end_of_toupper 39A6                             ??_I2C_DO_SEND_STOP 0001  
               ?_gpio_pin_direction_initialize 001A                    __end_of_Print_RTC_Date_Time 1F1E  
                     fp__rd1RegCompleteHandler 0000                                __initialization 2FC0  
                        i2I2C_SetBuffer@buffer 0001                                   __end_of_main 29AC  
                                 __end_of_dtoa 1D6E                       fp__wr1RegCompleteHandler 0000  
                                 __end_of_otoa 20BC                          ?_gpio_pin_write_logic 001A  
                                 __end_of_utoa 2396                                   __end_of_xtoa 1B36  
                              ?_send_4bit_data 0024                      ?_I2C_DO_SEND_RESTART_READ 0001  
                       Read_Temprature@address 0026                                 ??_EUSART_Write 001A  
                               ?_I2C_DO_RX_ACK 0001                                  _lat_registers 00E7  
                                       ??_main 013C                                         ??_dtoa 002B  
                            ?_I2C_MasterIsNack 0001                                         ??_otoa 0070  
                                       ??_utoa 002B                                         ??_xtoa 0071  
                                __activetblptr 0003                              ?_I2C_MasterSetIrq 0001  
                           ??_I2C_MasterIsNack 0001                     __end_of_read_prec_or_width 2B82  
                           ??_I2C_MasterSetIrq 0001              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00FB                __end_of_I2C_CallbackReturnReset 3E24  
                                       ?_fputc 001A                               ___llmod@dividend 001A  
                                       ?_fputs 0023                                         _EEADRH 0FAA  
                                       _EEDATA 0FA8                                         _EECON2 0FA7  
                I2C_SetDataCompleteCallback@cb 001F                i2I2C_SetDataCompleteCallback@cb 0006  
                                       ?_putch 0001                                         _ANSELH 0F7F  
                                       i2l5000 3BA4                                         i2l5004 38B6  
                                       i2l5100 3DC4                                         i2l5006 38DE  
                                       i2l5102 3DC8                                         i2l5008 38F2  
                                       i2l5112 3E20                                         i2l5106 3E14  
                                       i2l5108 3E24                                         i2l5060 3DDE  
                                       i2l5062 3DD4                                         i2l5070 3DD0  
                                       i2l6110 004E                                         i2l5080 3E18  
                                       i2l5056 3CD4                                         i2l5064 3DD8  
                                       i2l6112 0078                                         i2l5074 3DBC  
                                       i2l6106 0032                                         i2l5084 3DF0  
                                       i2l5500 2DCE                                         i2l5068 3DCC  
                                       i2l5076 3DC0                                         i2l5092 3DAC  
                                       i2l6108 0040                                         i2l5502 2DD4  
                                       i2l5510 2DD8                                         i2l5094 3DB0  
                                       i2l5086 3DA4                                         i2l5512 2DE6  
                                       i2l5088 3DA8                                         i2l5600 3696  
                                       i2l5098 3E1C                                         i2l5514 2DEC  
                                       i2l5452 3D4C                                         i2l5460 3CFA  
                                       i2l5524 2E14                                         i2l5516 2E04  
                                       i2l5540 3D40                                         i2l5550 32F8  
                                       i2l5454 3D50                                         i2l5462 3CFE  
                                       i2l5470 3D2A                                         i2l5534 2E24  
                                       i2l5518 2E08                                         i2l5542 3D44  
                                       i2l4680 33F6                                         i2l5560 330A  
                                       i2l5456 3D54                                         i2l5464 3D06  
                                       i2l5472 3D30                                         i2l5480 2D2C  
                                       i2l5528 2E1C                                         i2l5544 3D48  
                                       i2l5720 34CC                                         i2l4682 342A  
                                       i2l4690 3DF6                                         i2l5554 3300  
                                       i2l5722 34D0                                         i2l5556 3304  
                                       i2l5548 32F0                                         i2l5468 3D26  
                                       i2l5484 2D34                                         i2l5476 2D14  
                                       i2l5572 3DB4                                         i2l5580 3D38  
                                       i2l5724 34E0                                         i2l4686 3E2C  
                                       i2l4678 33E4                                         i2l5566 3312  
                                       i2l5494 2D44                                         i2l5574 3DB8  
                                       i2l5582 3D3C                                         i2l5590 3686  
                                       i2l5726 34F4                                         i2l4688 3E28  
                                       i2l5496 2DA2                                         i2l5488 2D3C  
                                       i2l5656 3E10                                         i2l5728 34FA  
                                       i2l4962 3BF2                                         i2l4970 3C68  
                                       i2l5498 2DB4                                         i2l5578 3D34  
                                       i2l5594 368E                                         i2l5586 367A  
                                       i2l4964 3C02                                         i2l4972 3B50  
                                       i2l4980 3B24                                         i2l5588 367E  
                                       i2l4966 3C0A                                         i2l4974 3B64  
                                       i2l4982 3B38                                         i2l4990 3B0C  
                                       _TABLAT 0FF5                                         i2l4968 3C12  
                                       i2l4976 3B78                                         i2l4984 3B4C  
                                       i2l4992 3B20                                         i2l5872 3DEA  
                                       i2l8522 36C8                                         i2l4996 3B7C  
                                       i2l4988 3AF8                                         i2l8524 2E56  
                                       i2l4998 3B90                                         i2l8526 2D78  
                                       i2l8528 3344                                         _OSCCON 0FD3  
                       ??i2_I2C_MasterClearIrq 0001                                  vfpfcnvrt@done 008D  
                    ??_I2C_SetInterruptHandler 001C                                         _SPBRGH 0FB0  
                                       _SSPADD 0FC8                                         _SSPBUF 0FC9  
                          _I2C_MasterEnableIrq 3DFC                            _I2C_MasterGetRxData 3E18  
                       ?_lcd_4bit_send_command 0060                                   vfprintf@cfmt 002B  
                                    ??___aldiv 0022                                      ??___almod 0022  
                                       ___wmul 3BA8                                  _I2C_MasterFsm 34CC  
                                _I2C_MasterIsr 3DEA                                      ??___lldiv 0022  
                                    ??___llmod 0022                           read_prec_or_width@ap 0022  
                                       _memset 20BC                                         clear_0 3026  
                                       clear_1 3032                                         clear_2 303E  
                            I2C_SetCallback@cb 001A                        fp__I2C_DO_SEND_ADR_READ 0000  
                       ?_I2C_Read1ByteRegister 0023                                         isa$std 0001  
                                       pad@buf 0062                                  _I2C_SetBuffer 3BCE  
                                       dtoa@fp 006A                                         _strlen 39DE  
                 __end_of_I2C_MasterDisableIrq 3E08                                         fputc@c 001A  
                         ?_I2C_MasterEnableIrq 0001                                         fputs@c 0027  
                          _I2C_DO_ADDRESS_NACK 367A                                         fputs@i 0028  
                                 __pdataCOMRAM 0040                                         fputs@s 0023  
                                    ??_isalpha 001C                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 3C68  
                   _I2C_SetAddressNackCallback 3C50                                      ??_islower 001C  
                                 __mediumconst 0000                                         otoa@fp 006A  
                                       tblptrh 0FF7                                      ??_isupper 001C  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                    ??_I2C_MasterEnableRestart 0001                                         putch@c 0001  
                             __end_of_vfprintf 3614                         ??_lcd_4bit_send_string 002D  
                                       utoa@fp 006A        I2C_SetInterruptHandler@InterruptHandler 001A  
                                    ??_sprintf 002E                convert_byte_to_string@l_counter 013A  
                                       xtoa@fp 006A                                      ??_toupper 0020  
                     ?_send_4bit_enable_signal 0024                 lcd_4bit_send_command@l_counter 0063  
             ??_INTERRUPT_InterruptManagerHigh 0010                ?_INTERRUPT_InterruptManagerHigh 0001  
                            _SYSTEM_Initialize 3C80                                     __accesstop 0060  
                      __end_of__initialization 3044                       ??_convert_byte_to_string 002E  
                          _I2C_MasterOperation 3876                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 0001                           ?_I2C_DO_ADDRESS_NACK 0001  
                      _lcd_4bit_send_char_data 3160                        _rdBlkRegCompleteHandler 38B6  
                   fp__rdBlkRegCompleteHandler 0000                              ??_Read_Temprature 0026  
                       ??_gpio_pin_write_logic 001D                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                 ?_I2C_MasterIsr 0001  
                              ??_I2C_DO_RX_ACK 0001                                   __pidataBANK0 3CAC  
                                 __pidataBANK1 3D58                         _I2C_CallbackReturnStop 3E24  
                          ??_SYSTEM_Initialize 001C                                  __end_of_fputc 2C4C  
                                __end_of_fputs 3836                   convert_short_to_string@F3583 0100  
                                __end_of_putch 3E32                                 ?_I2C_SetBuffer 001A  
                     lcd_4bit_send_command@lcd 0060                       lcd_4bit_send_command@ret 0064  
                __end_of_I2C_DO_SEND_ADR_WRITE 3D34                     ?_I2C_DO_SEND_RESTART_WRITE 0001  
                         ?_I2C_MasterOperation 0001       gpio_pin_direction_initialize@_pin_config 001A  
                        ??_I2C_MasterEnableIrq 001A                        send_4bit_data@l_counter 002C  
                        ??_I2C_MasterGetRxData 0001                        ?_I2C_Write1ByteRegister 0023  
                                   ??_I2C_Open 001C                     __end_of_I2C_MasterClearIrq 3E10  
              ??_EUSART_SetOverrunErrorHandler 001C                                        ??_fputc 001E  
                    __end_of_SYSTEM_Initialize 3C96                                        ??_fputs 0027  
                      lcd_4bit_send_string@lcd 0065                        lcd_4bit_send_string@str 0067  
                                      ??_putch 001A                              _I2C_MasterSendAck 3DF0  
                                   __pbssBANK0 00A9                                     __pbssBANK1 0100  
                         __end_of_EUSART_Write 3CAC                                  ??_I2C_DO_IDLE 0001  
                                ??_I2C_DO_RCEN 0001                  __end_of_rd2RegCompleteHandler 3B50  
                 __end_of_I2C_MasterSendTxData 3DE4                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 3E1C                          ??_I2C_DO_ADDRESS_NACK 000C  
                __end_of_wr2RegCompleteHandler 3BA8                            _I2C_DO_RX_NACK_STOP 3DAC  
                        _rd1RegCompleteHandler 3B50                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 3DFC                          _wr1RegCompleteHandler 3AF8  
                          ??_I2C_MasterSendAck 0001                       rd1RegCompleteHandler@ptr 000A  
                  __end_of_I2C_DO_SEND_RESTART 3DCC                                _I2C_DO_TX_EMPTY 32F0  
                          I2C_SetBuffer@buffer 001A                                        ?___wmul 001A  
                          ??_I2C_MasterStartRx 0001                                        _BAUDCON 0FB8  
                                      ?_memset 001A                          ??_I2C_MasterOperation 001A  
               I2C_SetDataCompleteCallback@ptr 0021               i2I2C_SetDataCompleteCallback@ptr 0008  
               __end_of_I2C_Write1ByteRegister 35AA                                        ?_strlen 001A  
                     ??_I2C_DO_RX_NACK_RESTART 0001              __end_of_I2C_DO_SEND_RESTART_WRITE 3DD4  
                         ?_I2C_DO_RX_NACK_STOP 0001                                        _TBLPTRH 0FF7  
                                      _TBLPTRL 0FF6                                        _TBLPTRU 0FF8  
                    __end_of_I2C_MasterSendAck 3DF6                                        _OSCTUNE 0F9B  
                     ??_EUSART_SetErrorHandler 001C                                        _SSPCON1 0FC6  
                                      _SSPCON2 0FC5                                        _SSPSTAT 0FC7  
                    __end_of_I2C_MasterStartRx 3E20                           I2C_Close@returnValue 001A  
                 ?_I2C_SetDataCompleteCallback 001F                                      _I2C_DO_RX 2DD8  
                                    _I2C_DO_TX 2D14               __end_of_I2C_DO_SEND_RESTART_READ 3DDC  
                 I2C_Read1ByteRegister@address 0024                                 _tris_registers 00F1  
                                    _I2C_Close 3ACC                      ??_lcd_4bit_send_char_data 002D  
                            _EUART_Send_String 3934                      ??_rdBlkRegCompleteHandler 000C  
                             ??_send_4bit_data 0027                           _I2C_MasterDisableIrq 3E04  
                            ??i2_I2C_SetBuffer 0005                                ??_I2C_MasterFsm 000E  
                              ??_I2C_MasterIsr 0010                                        __Hparam 0000  
                           ?_EUART_Send_String 001B                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 3D58                            __end_of_I2C_DO_RCEN 3D4C  
                          _gpio_pin_initialize 304E                                        ___aldiv 27A4  
                                      ___almod 29AC                                        ___lldiv 2E7E  
                              ??_I2C_SetBuffer 001E                                        ___llmod 30D8  
                                    ?_vfprintf 0097                        I2C_SetBuffer@bufferSize 001C  
                                 __psmallconst 1000                            ??_EUART_Send_String 001D  
                               _I2C_MasterOpen 3C16                                        __pcinit 2FC0  
                               _I2C_MasterStop 3E28                                 _I2C_Initialize 3CC0  
                                      __ramtop 1000                                        __ptext0 28B0  
                                      __ptext1 2396                                        __ptext2 304E  
                                      __ptext3 24F8                                        __ptext4 3614  
                                      __ptext5 36E0                                        __ptext6 35AA  
                                      __ptext7 105E                                        __ptext8 18B8  
                                      __ptext9 396E                      EEPROM_Write_1Byte@address 0028  
                                      _eevalue 003D                                        _lcd_obj 0040  
                        ??_I2C_DO_RX_NACK_STOP 0001                ??_gpio_pin_direction_initialize 001C  
                        _OSCILLATOR_Initialize 3D62                                        _isalpha 39A6  
                        read_prec_or_width@fmt 0020                               ___aldiv@dividend 001A  
                           I2C_SetCallback@idx 001E                                        _islower 3A74  
                     ??_PIN_MANAGER_Initialize 001A                  I2C_CallbackReturnReset@funPtr 000A  
                           I2C_SetCallback@ptr 001C                       wr1RegCompleteHandler@ptr 000A  
                                      _isupper 3AA0                           Print_RTC_Date_Time@i 006F  
                    Print_RTC_Date_Time@i_2233 0071                      I2C_Write1ByteRegister@reg 0023  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                                        _rtc_obj 0106  
                         ?_gpio_pin_initialize 0024                                        _sprintf 36E0  
        lcd_4bit_intialize@l_data_pins_counter 0069                                        _toupper 396E  
                         end_of_initialization 3044                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001                      __end_of_EUART_Send_String 396E  
        __end_of_EUSART_SetOverrunErrorHandler 3D76                  _EUSART_SetOverrunErrorHandler 3D6C  
                                      fputc@fp 001C                                        memset@c 001C  
                                      memset@k 0022                                        memset@n 001E  
                                      memset@s 0024                                     ?_I2C_Close 0001  
                                      fputs@fp 0025                         ?_rd1RegCompleteHandler 000A  
                   __end_of_lcd_4bit_intialize 24F8                        __end_of_I2C_DO_TX_EMPTY 336C  
                           _read_prec_or_width 2A98                        ??_lcd_4bit_send_command 002D  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 38F6  
                       ?_wr1RegCompleteHandler 000A                                ___lldiv@divisor 001E  
                              ___lldiv@counter 0026                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                              __end_of_vfpfcnvrt 18B8  
                                    _RCSTAbits 0FAB                               ___aldiv@quotient 0024  
                                      postdec1 0FE5                                        postdec2 0FDD  
                          ?_read_prec_or_width 0020                        ??_I2C_Read1ByteRegister 0024  
                       __end_of_I2C_MasterOpen 3C38                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 0FEE                                        postinc1 0FE6  
                                      postinc2 0FDE                               vfpfcnvrt@convarg 0090  
                       __end_of_I2C_MasterStop 3E2C                         __end_of_I2C_Initialize 3CD4  
                                   _temp_value 003E                                     ??_vfprintf 002B  
                    fp__I2C_CallbackReturnStop 0000                                        strlen@a 001C  
                                      strlen@s 001A                            ??_EUSART_Initialize 001C  
              __end_of_lcd_4bit_send_char_data 31E6                         _convert_byte_to_string 3614  
              __end_of_rdBlkRegCompleteHandler 38F6                           _I2C_MasterSendTxData 3DDC  
                              fp__I2C_DO_RESET 0000                     lcd_4bit_send_char_data@lcd 0060  
                   lcd_4bit_send_char_data@ret 0064                    ?_I2C_SetAddressNackCallback 001F  
                        ??_gpio_pin_initialize 0026                           ??_read_prec_or_width 0024  
                              _Read_Temprature 3D0A                      __end_of_EUSART_Initialize 3934  
                                  _I2C_DO_IDLE 3D4C                                    _I2C_DO_RCEN 3D40  
                   rdBlkRegCompleteHandler@ptr 000A                  I2C_Write1ByteRegister@address 0025  
                                    _TXSTAbits 0FAC                        ?_I2C_CallbackReturnStop 000A  
                     _I2C_DO_SEND_RESTART_READ 3DD4                    fp__I2C_DO_SEND_RESTART_READ 0000  
                            i2_I2C_SetCallback 33E2                   I2C_CallbackReturnStop@funPtr 000A  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 3D9C  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 3E20                       I2C_Read1ByteRegister@reg 0023  
                   fp__I2C_CallbackReturnReset 0000                     _EUSART_DefaultErrorHandler 0000  
                           ?i2_I2C_SetCallback 0001                                    vfpfcnvrt@ap 0083  
                                  vfpfcnvrt@cp 0094                                    vfpfcnvrt@fp 007F  
                               __end_of___wmul 3BCE                ??i2_I2C_SetDataCompleteCallback 000A  
                                __pidataCOMRAM 3DE4                                   _EUSART_Write 3C96  
                            send_4bit_data@lcd 0024                              send_4bit_data@ret 002B  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                               __end_of_memset 2232                    ??_I2C_DO_SEND_RESTART_WRITE 0001  
                          ??i2_I2C_SetCallback 0005                                 __end_of_strlen 3A14  
                          start_initialization 2FC0                                    __end_of_abs 3876  
                                  __end_of_pad 2D14                                  ?_I2C_DO_RESET 0001  
                        EUART_Send_String@text 001B          __end_of_gpio_pin_direction_initialize 265A  
                _gpio_pin_direction_initialize 24F8                       ?_I2C_SetInterruptHandler 001A  
                                  ??_I2C_DO_RX 000C                                    ??_I2C_DO_TX 000C  
                            ??_I2C_MasterClose 001A                         ??_I2C_MasterDisableIrq 001A  
                                  ??_I2C_Close 001A                              ??_I2C_MasterStart 001A  
                            ??_I2C_MasterWrite 001C                 __end_of_I2C_CallbackReturnStop 3E28  
                              ___llmod@divisor 001E                         _I2C_DO_RX_NACK_RESTART 3DA4  
                             ?_I2C_DO_TX_EMPTY 0001                                ___llmod@counter 0022  
                           _I2C_MasterClearIrq 3E0C                      __end_ofi2_I2C_SetCallback 3458  
               ?_EUSART_SetOverrunErrorHandler 001A                                    vfprintf@fmt 0099  
                   _EUSART_FramingErrorHandler 00FD                                       ??___wmul 001E  
                       _EUSART_SetErrorHandler 3D80                    __end_of_I2C_MasterEnableIrq 3E00  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 3E1C  
                    convert_byte_to_string@val 013B                                    __pdataBANK0 00E7  
                                  __pdataBANK1 013E                      convert_byte_to_string@str 00A7  
                        __end_of_I2C_DO_RX_ACK 3DBC                                       ??_memset 0020  
                             _I2C_DO_SEND_STOP 3DBC                                     memset@dest 001A  
                            ??_I2C_SetCallback 001E                   lcd_4bit_send_command@command 0062  
                          I2C_Open@returnValue 001D                             _I2C_MasterSendNack 3DF6  
                                     ??_strlen 001C                       ?_I2C_MasterEnableRestart 0001  
                            _i2c_fsmStateTable 1001                         fp__I2C_DO_SEND_RESTART 0000  
                        _I2C_DO_SEND_ADR_WRITE 3D26                        __end_of_Read_Temprature 3D18  
                                  __pbssCOMRAM 002E                                  __pcstackBANK0 0060  
                                __pcstackBANK1 012C                                 ??_I2C_DO_RESET 0001  
                   __end_of_EEPROM_Write_1Byte 3CFA                            ?_I2C_MasterSendNack 0001  
                              i2_I2C_SetBuffer 3BF2                   __end_of_I2C_DO_SEND_ADR_READ 3D0A  
                         ??_I2C_MasterClearIrq 001A                    __end_of_I2C_DO_ADDRESS_NACK 36E0  
                             _I2C_MasterIsNack 3CD4                      _I2C_DO_SEND_RESTART_WRITE 3DCC  
                             _I2C_MasterSetIrq 3E14                                      __pnvBANK0 00FB  
                                    __pnvBANK1 0148                          _rd2RegCompleteHandler 3B24  
                                    _date_time 00CD                         _PIN_MANAGER_Initialize 3A14  
                        _wr2RegCompleteHandler 3B7C                      ??_I2C_CallbackReturnReset 000C  
                                    _dtoa$2892 0070                    __end_of_I2C_MasterOperation 38B6  
                         ??_I2C_MasterSendNack 0001                       rd2RegCompleteHandler@ptr 000A  
                                    __pintcode 0008                                       ?___aldiv 001A  
                                     ?___almod 001A                gpio_pin_write_logic@_pin_config 001A  
                                    __ptext100 3B50                                      __ptext101 3B7C  
                                    __ptext102 3C68                                      __ptext103 33E2  
                                    __ptext104 3BF2                                      __ptext105 3E28  
                                    __ptext106 3E2C                                      __ptext107 0000  
                                     ?___lldiv 001A                                       ?___llmod 001A  
                       ??_I2C_MasterSendTxData 0001                      __end_of_i2c_fsmStateTable 1021  
                    gpio_pin_write_logic@logic 001C                               ___almod@dividend 001A  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                                  __smallconst 1000                __end_of_I2C_SetInterruptHandler 3D94  
                                     ?_isalpha 001A          __end_ofi2_I2C_SetDataCompleteCallback 3C80  
                i2_I2C_SetDataCompleteCallback 3C68                        I2C_MasterOperation@read 001A  
                                     _I2C_Open 2F22                                       ?_islower 001A  
                                     ?_isupper 001A                                       ?_sprintf 009E  
                      ??_rd1RegCompleteHandler 000C                                       ?_toupper 001E  
                         _INTERRUPT_Initialize 3D94                        ??_wr1RegCompleteHandler 000C  
                          _Print_RTC_Date_Time 1D6E                                ___aldiv@divisor 001E  
                              ___aldiv@counter 0022                                 ___wmul@product 001E  
       EUSART_SetErrorHandler@interruptHandler 001A                                       _IPR1bits 0F9F  
                                     _IPR2bits 0FA2                                       _PIE1bits 0F9D  
                                     _PIE2bits 0FA0                              _eusartRxLastError 003F  
             lcd_4bit_send_char_data@l_counter 0063                  __end_of_lcd_4bit_send_command 326C  
                                     i2u280_40 33F6                                       i2u344_40 3CE4  
                                     i2u280_41 33F2                                       i2u344_41 3CDE  
                                     i2u344_46 3CE6                                       i2u425_40 0040  
                                     i2u425_41 003C                                       _PIR1bits 0F9E  
                                     i2u426_40 004E                                       i2u426_41 004A  
              ??_EUSART_SetFramingErrorHandler 001C                                       i2u339_40 3C02  
                                     i2u370_48 36A4                                       i2u339_41 3BFE  
                                     i2u370_49 36B6                                       _PIR2bits 0FA1  
                                     i2u364_40 2D28                                       i2u428_40 0078  
                                     i2u427_48 0054                                       i2u364_41 2D24  
                                     i2u428_41 0074                                       i2u427_49 0066  
                                     i2u429_40 0086                                       i2u429_41 0082  
                                     i2u366_40 2DCE                                       i2u365_48 2D52  
                                     i2u366_41 2DCA                                       i2u365_49 2D66  
                                     i2u367_40 2E04                                       i2u367_41 2E00  
                                     i2u384_40 34E0                                       i2u384_41 34DC  
                                     i2u368_48 2E32                                       i2u385_40 34F4  
                                     i2u368_49 2E44                                       i2u385_41 34F0  
                                     i2u369_48 3320                                       i2u369_49 3332  
                                     i2u386_48 3524                                       i2u386_49 3536  
                      _send_4bit_enable_signal 3A44                          __end_of_I2C_MasterFsm 353C  
                        __end_of_I2C_MasterIsr 3DF0                                       _RCONbits 0FD0  
                         EEPROM_Read_1Byte@reg 0026               gpio_pin_direction_initialize@ret 0022  
                  __end_of_I2C_DO_RX_NACK_STOP 3DB4              _EUSART_DefaultOverrunErrorHandler 0000  
                      ?_convert_byte_to_string 00A7                __end_of_I2C_MasterEnableRestart 3E30  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                           _lcd_4bit_intialize 2396                  __end_of_I2C_Read1ByteRegister 34CC  
                                    _vfpfcnvrt 105E                           ?_Print_RTC_Date_Time 0069  
                        __end_of_I2C_SetBuffer 3BF2                                      _xtoa$2916 0075  
                            ___wmul@multiplier 001A                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                      __end_ofi2_I2C_SetBuffer 3C16                       I2C_MasterSendTxData@data 0001  
                          ?_lcd_4bit_intialize 0065                         gpio_pin_initialize@ret 0027  
                     EEPROM_Read_1Byte@address 0027                               ?_Read_Temprature 0001  
                     wr2RegCompleteHandler@ptr 000A                                     vfpfcnvrt@c 008F  
                      gpio_pin_write_logic@ret 0023                                    _INTCON2bits 0FF1  
                     ?_lcd_4bit_send_char_data 0060                     ??_I2C_DO_SEND_RESTART_READ 0001  
                                    copy_data0 2FD4                                      copy_data1 2FF4  
                                    copy_data2 3014                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000A                      i2I2C_SetBuffer@bufferSize 0003  
                                   _I2C_Status 00A9                                   ?_I2C_DO_IDLE 0001  
                                 ?_I2C_DO_RCEN 0001                         ?_rd2RegCompleteHandler 000A  
                                   _EECON1bits 0FA6                               ??_I2C_MasterOpen 001A  
                       ?_wr2RegCompleteHandler 000A                               ??_I2C_MasterStop 0001  
                             ??_I2C_Initialize 001A                      fp__I2C_DO_RX_NACK_RESTART 0000  
                         ??_lcd_4bit_intialize 0067                                       __Hrparam 0000  
                                   vfprintf@ap 009C                                       __Lrparam 0000  
                                   vfprintf@fp 0097                 __end_of_convert_byte_to_string 367A  
                         __end_of_I2C_DO_RESET 3D40                       ??_I2C_Write1ByteRegister 0025  
                            _Set_RTC_Date_Time 373C                        ??_OSCILLATOR_Initialize 001A  
                          _EUSART_ErrorHandler 0148                           _I2C_DO_SEND_ADR_READ 3CFA  
                        ??_Print_RTC_Date_Time 002D                             ?_Set_RTC_Date_Time 0026  
                                   ?_vfpfcnvrt 007F                    __end_of_gpio_pin_initialize 30D8  
             I2C_Read1ByteRegister@returnValue 0025                   __end_ofi2_I2C_MasterClearIrq 3E14  
               gpio_pin_initialize@_pin_config 0024                              _EEPROM_Read_1Byte 3D18  
                              _I2C_MasterClose 3E08                  I2C_SetAddressNackCallback@ptr 0021  
                                   sprintf@fmt 00A0                                I2C_Open@address 001C  
                          ??_Set_RTC_Date_Time 002C                            fp__I2C_DO_SEND_STOP 0000  
                         i2I2C_SetCallback@idx 0005                                _I2C_MasterStart 3E00  
                         i2I2C_SetCallback@ptr 0003                                _I2C_MasterWrite 3D9C  
                           ?_EEPROM_Read_1Byte 0026                                       __ptext10 3A74  
                                     __ptext11 3AA0                                       __ptext20 2C4C  
                                     __ptext12 39A6                                       __ptext21 39DE  
                                     __ptext13 2232                                       __ptext30 3C80  
                                     __ptext22 37F2                                       __ptext14 30D8  
                                     __ptext31 3A14                                       __ptext23 2B82  
                                     __ptext15 2E7E                                       __ptext40 1D6E  
                                     __ptext32 3D62                                       __ptext24 3E30  
                                     __ptext16 2A98                                       __ptext41 326C  
                                     __ptext33 3D94                                       __ptext25 3836  
                                     __ptext17 3BA8                                       __ptext50 353C  
                                     __ptext42 3160                                       __ptext34 3CC0  
                                     __ptext26 29AC                                       __ptext18 1F1E  
                                     __ptext51 3D18                                       __ptext43 31E6  
                                     __ptext35 38F6                                       __ptext27 27A4  
                                     __ptext19 1B36                                       __ptext60 3DFC  
                                     __ptext52 3458                                       __ptext44 3A44  
                                     __ptext36 3D6C                                       __ptext28 20BC  
                                     __ptext61 3D9C                                       __ptext53 3C38  
                                     __ptext45 3798                                       __ptext37 3D76  
                                     __ptext29 373C                                       __ptext70 34CC  
                                     __ptext62 3876                                       __ptext54 3BCE  
                                     __ptext46 265A                                       __ptext38 3D80  
                                     __ptext71 3E10                                       __ptext63 3E00  
                                     __ptext55 3C50                                       __ptext47 3934  
                                     __ptext39 3D0A                                       __ptext80 3DD4  
                                     __ptext72 367A                                       __ptext64 3ACC  
                                     __ptext56 336C                                       __ptext48 3C96  
                                     __ptext81 3D40                                       __ptext73 3D34  
                                     __ptext65 3E04                                       __ptext57 2F22  
                                     __ptext49 3CE8                                       __ptext90 3DDC  
                                     __ptext82 2DD8                                       __ptext74 3DA4  
                                     __ptext66 3E08                                       __ptext58 3D8A  
                                     __ptext91 3DF0                                       __ptext83 2D14  
                                     __ptext75 3DAC                                       __ptext67 3E0C  
                                     __ptext59 3C16                                       __ptext92 3E18  
                                     __ptext84 3D26                                       __ptext76 3DB4  
                                     __ptext93 3DF6                                       __ptext85 3CFA  
                                     __ptext77 3DBC                                       __ptext69 3DEA  
                                     __ptext94 3E1C                                       __ptext86 3D4C  
                                     __ptext78 3DC4                                       __ptext95 3E20  
                                     __ptext87 32F0                                       __ptext79 3DCC  
                                     __ptext96 3E24                                       __ptext88 3E14  
                                     __ptext97 38B6                                       __ptext89 3CD4  
                                     __ptext98 3AF8                                       __ptext99 3B24  
          __end_of_I2C_SetDataCompleteCallback 3C50                 ?i2_I2C_SetDataCompleteCallback 0006  
                  _I2C_SetDataCompleteCallback 3C38                                ___almod@divisor 001E  
                      ?_I2C_DO_RX_NACK_RESTART 0001                                ___almod@counter 0022  
                          ??_EEPROM_Read_1Byte 0027                       __end_of_I2C_DO_SEND_STOP 3DC4  
                    ??_send_4bit_enable_signal 0026                        ?_EUSART_SetErrorHandler 001A  
                              _I2C_SetCallback 336C                  ??_I2C_SetDataCompleteCallback 0023  
                    __end_of_Set_RTC_Date_Time 3798                     I2C_Write1ByteRegister@data 0024  
EUSART_SetOverrunErrorHandler@interruptHandler 001A                                       isa$xinst 0000  
                                     int$flags 0046                          ?_I2C_DO_SEND_ADR_READ 0001  
                 __end_of_lcd_4bit_send_string 32F0                                       _vfprintf 35AA  
        __end_of_EUSART_SetFramingErrorHandler 3D80                  _EUSART_SetFramingErrorHandler 3D76  
                    __end_of_EEPROM_Read_1Byte 3D26                       __end_of_I2C_MasterIsNack 3CE8  
                     __end_of_I2C_MasterSetIrq 3E18                               ?i2_I2C_SetBuffer 0001  
                                   _INTCONbits 0FF2                                       isalpha@c 001A  
                       ??_INTERRUPT_Initialize 001A                 __end_of_I2C_DO_RX_NACK_RESTART 3DAC  
                 __end_of_gpio_pin_write_logic 27A4                                  xtoa@d_nonzero 0079  
                                     intlevel2 0000                                      sprintf@ap 012C  
                   Print_RTC_Date_Time@rtc_obj 0069                            i2I2C_SetCallback@cb 0001  
                                     islower@c 001A                               ___lldiv@dividend 001A  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 3D8A  
                          _I2C_DO_SEND_RESTART 3DC4                                       isupper@c 001A  
                           _EEPROM_Write_1Byte 3CE8                         fp__I2C_DO_ADDRESS_NACK 0000  
EUSART_SetFramingErrorHandler@interruptHandler 001A                        __end_of_I2C_MasterClose 3E0C  
                           fp__I2C_DO_TX_EMPTY 0000                            ?_EEPROM_Write_1Byte 0026  
                                  ??_vfpfcnvrt 0085                        __end_of_I2C_MasterStart 3E04  
                      __end_of_I2C_MasterWrite 3DA4         __end_of_INTERRUPT_InterruptManagerHigh 00B6  
               _INTERRUPT_InterruptManagerHigh 0008                           ?_I2C_DO_SEND_RESTART 0001  
              __end_of_send_4bit_enable_signal 3A74                                       sprintf@f 012E  
                                     sprintf@s 009E                               ___lldiv@quotient 0022  
                               _port_registers 013E                                       toupper@c 001E  
                                 ___aldiv@sign 0023                                    _SSPCON1bits 0FC6  
                                  _SSPCON2bits 0FC5                           ??_EEPROM_Write_1Byte 0028  
                           EUSART_Write@txData 001A                         EEPROM_Write_1Byte@data 0027  
                      __end_of_I2C_SetCallback 33E2                 __end_of_PIN_MANAGER_Initialize 3A44  
                                 ___almod@sign 0023                  __end_of_rd1RegCompleteHandler 3B7C  
                             fp__I2C_DO_RX_ACK 0000                    lcd_4bit_send_char_data@data 0062  
                __end_of_wr1RegCompleteHandler 3B24                          EEPROM_Write_1Byte@reg 0026  
                        _MSSP_InterruptHandler 003A                           i2_I2C_MasterClearIrq 3E10  
