

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Sep 21 10:18:46 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   105   000000                     
   106                           ; Generated 21/07/2023 GMT
   107                           ; 
   108                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution. Publication is not required when
   122                           ;        this file is used in an embedded application.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F46K20 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140   000000                     
   141 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   142   000000                     
   143 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   144   000000                     
   145 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   146   000000                     
   147                           	psect	idataCOMRAM
   148   002404                     __pidataCOMRAM:
   149                           	callstack 0
   150                           
   151                           ;initializer for _tris_registers
   152   002404  92                 	db	146
   153   002405  0F                 	db	15
   154   002406  93                 	db	147
   155   002407  0F                 	db	15
   156   002408  94                 	db	148
   157   002409  0F                 	db	15
   158   00240A  95                 	db	149
   159   00240B  0F                 	db	15
   160   00240C  96                 	db	150
   161   00240D  0F                 	db	15
   162                           
   163                           ;initializer for _lcd_obj
   164   00240E  08                 	db	8
   165   00240F  00                 	db	0
   166   002410  10                 	db	16
   167   002411  18                 	db	24
   168   002412  20                 	db	32
   169   002413  28                 	db	40
   170                           
   171                           	psect	idataBANK0
   172   0023B6                     __pidataBANK0:
   173                           	callstack 0
   174                           
   175                           ;initializer for _port_registers
   176   0023B6  80                 	db	128
   177   0023B7  0F                 	db	15
   178   0023B8  81                 	db	129
   179   0023B9  0F                 	db	15
   180   0023BA  82                 	db	130
   181   0023BB  0F                 	db	15
   182   0023BC  83                 	db	131
   183   0023BD  0F                 	db	15
   184   0023BE  84                 	db	132
   185   0023BF  0F                 	db	15
   186                           
   187                           ;initializer for _lat_registers
   188   0023C0  89                 	db	137
   189   0023C1  0F                 	db	15
   190   0023C2  8A                 	db	138
   191   0023C3  0F                 	db	15
   192   0023C4  8B                 	db	139
   193   0023C5  0F                 	db	15
   194   0023C6  8C                 	db	140
   195   0023C7  0F                 	db	15
   196   0023C8  8D                 	db	141
   197   0023C9  0F                 	db	15
   198                           
   199                           	psect	smallconst
   200   001000                     __psmallconst:
   201                           	callstack 0
   202   001000  00                 	db	0
   203   001001                     _i2c_fsmStateTable:
   204                           	callstack 0
   205   001001  66                 	db	low _I2C_DO_IDLE
   206   001002  24                 	db	high _I2C_DO_IDLE
   207   001003  14                 	db	low _I2C_DO_SEND_ADR_READ
   208   001004  24                 	db	high _I2C_DO_SEND_ADR_READ
   209   001005  40                 	db	low _I2C_DO_SEND_ADR_WRITE
   210   001006  24                 	db	high _I2C_DO_SEND_ADR_WRITE
   211   001007  C0                 	db	low _I2C_DO_TX
   212   001008  17                 	db	high _I2C_DO_TX
   213   001009  34                 	db	low _I2C_DO_RX
   214   00100A  19                 	db	high _I2C_DO_RX
   215   00100B  5A                 	db	low _I2C_DO_RCEN
   216   00100C  24                 	db	high _I2C_DO_RCEN
   217   00100D  0E                 	db	low _I2C_DO_TX_EMPTY
   218   00100E  1C                 	db	high _I2C_DO_TX_EMPTY
   219   00100F  E4                 	db	low _I2C_DO_SEND_RESTART_READ
   220   001010  24                 	db	high _I2C_DO_SEND_RESTART_READ
   221   001011  DC                 	db	low _I2C_DO_SEND_RESTART_WRITE
   222   001012  24                 	db	high _I2C_DO_SEND_RESTART_WRITE
   223   001013  D4                 	db	low _I2C_DO_SEND_RESTART
   224   001014  24                 	db	high _I2C_DO_SEND_RESTART
   225   001015  CC                 	db	low _I2C_DO_SEND_STOP
   226   001016  24                 	db	high _I2C_DO_SEND_STOP
   227   001017  C4                 	db	low _I2C_DO_RX_ACK
   228   001018  24                 	db	high _I2C_DO_RX_ACK
   229   001019  BC                 	db	low _I2C_DO_RX_NACK_STOP
   230   00101A  24                 	db	high _I2C_DO_RX_NACK_STOP
   231   00101B  B4                 	db	low _I2C_DO_RX_NACK_RESTART
   232   00101C  24                 	db	high _I2C_DO_RX_NACK_RESTART
   233   00101D  4E                 	db	low _I2C_DO_RESET
   234   00101E  24                 	db	high _I2C_DO_RESET
   235   00101F  C8                 	db	low _I2C_DO_ADDRESS_NACK
   236   001020  1E                 	db	high _I2C_DO_ADDRESS_NACK
   237   001021                     __end_of_i2c_fsmStateTable:
   238                           	callstack 0
   239   000000                     _EEDATA	set	4008
   240   000000                     _EEADR	set	4009
   241   000000                     _EEADRH	set	4010
   242   000000                     _EECON2	set	4007
   243   000000                     _PIR2bits	set	4001
   244   000000                     _PIE2bits	set	4000
   245   000000                     _IPR1bits	set	3999
   246   000000                     _IPR2bits	set	4002
   247   000000                     _TXREG	set	4013
   248   000000                     _RCREG	set	4014
   249   000000                     _SPBRG	set	4015
   250   000000                     _TXSTA	set	4012
   251   000000                     _TRISD	set	3989
   252   000000                     _TRISC	set	3988
   253   000000                     _TRISB	set	3987
   254   000000                     _LATC	set	3979
   255   000000                     _LATB	set	3978
   256   001021                     STR_1:
   257   001021  4B                 	db	75	;'K'
   258   001022  61                 	db	97	;'a'
   259   001023  72                 	db	114	;'r'
   260   001024  69                 	db	105	;'i'
   261   001025  6D                 	db	109	;'m'
   262   001026  20                 	db	32
   263   001027  52                 	db	82	;'R'
   264   001028  61                 	db	97	;'a'
   265   001029  6D                 	db	109	;'m'
   266   00102A  61                 	db	97	;'a'
   267   00102B  64                 	db	100	;'d'
   268   00102C  61                 	db	97	;'a'
   269   00102D  6E                 	db	110	;'n'
   270   00102E  20                 	db	32
   271   00102F  2D                 	db	45
   272   001030  3E                 	db	62	;'>'
   273   001031  20                 	db	32
   274   001032  53                 	db	83	;'S'
   275   001033  6D                 	db	109	;'m'
   276   001034  61                 	db	97	;'a'
   277   001035  72                 	db	114	;'r'
   278   001036  74                 	db	116	;'t'
   279   001037  20                 	db	32
   280   001038  48                 	db	72	;'H'
   281   001039  6F                 	db	111	;'o'
   282   00103A  6D                 	db	109	;'m'
   283   00103B  65                 	db	101	;'e'
   284   00103C  0D                 	db	13
   285   00103D  00                 	db	0
   286   00103E                     STR_2:
   287   00103E  54                 	db	84	;'T'
   288   00103F  65                 	db	101	;'e'
   289   001040  6D                 	db	109	;'m'
   290   001041  70                 	db	112	;'p'
   291   001042  65                 	db	101	;'e'
   292   001043  72                 	db	114	;'r'
   293   001044  61                 	db	97	;'a'
   294   001045  74                 	db	116	;'t'
   295   001046  75                 	db	117	;'u'
   296   001047  72                 	db	114	;'r'
   297   001048  65                 	db	101	;'e'
   298   001049  3A                 	db	58	;':'
   299   00104A  20                 	db	32
   300   00104B  00                 	db	0
   301   00104C                     STR_5:
   302   00104C  54                 	db	84	;'T'
   303   00104D  69                 	db	105	;'i'
   304   00104E  6D                 	db	109	;'m'
   305   00104F  65                 	db	101	;'e'
   306   001050  3A                 	db	58	;':'
   307   001051  20                 	db	32
   308   001052  00                 	db	0
   309   001053                     STR_7:
   310   001053  44                 	db	68	;'D'
   311   001054  61                 	db	97	;'a'
   312   001055  74                 	db	116	;'t'
   313   001056  65                 	db	101	;'e'
   314   001057  3A                 	db	58	;':'
   315   001058  20                 	db	32
   316   001059  00                 	db	0
   317   00105A                     STR_3:
   318   00105A  25                 	db	37
   319   00105B  69                 	db	105	;'i'
   320   00105C  00                 	db	0
   321   00105D  00                 	db	0	; dummy byte at the end
   322   000000                     
   323                           	psect	nvBANK0
   324   0000D1                     __pnvBANK0:
   325                           	callstack 0
   326   0000D1                     _EUSART_ErrorHandler:
   327                           	callstack 0
   328   0000D1                     	ds	2
   329   0000D3                     _EUSART_OverrunErrorHandler:
   330                           	callstack 0
   331   0000D3                     	ds	2
   332   0000D5                     _EUSART_FramingErrorHandler:
   333                           	callstack 0
   334   0000D5                     	ds	2
   335   000000                     _SSPSTATbits	set	4039
   336   000000                     _SSPCON2bits	set	4037
   337   000000                     _SSPCON1bits	set	4038
   338   000000                     _RCSTAbits	set	4011
   339   000000                     _TXSTAbits	set	4012
   340   000000                     _WPUB	set	3964
   341   000000                     _ANSEL	set	3966
   342   000000                     _OSCTUNE	set	3995
   343   000000                     _PIR1bits	set	3998
   344   000000                     _RCSTA	set	4011
   345   000000                     _BAUDCON	set	4024
   346   000000                     _LATA	set	3977
   347   000000                     _LATD	set	3980
   348   000000                     _LATE	set	3981
   349   000000                     _SSPCON2	set	4037
   350   000000                     _SSPCON1	set	4038
   351   000000                     _SSPSTAT	set	4039
   352   000000                     _RCONbits	set	4048
   353   000000                     _OSCCON	set	4051
   354   000000                     _SPBRGH	set	4016
   355   000000                     _INTCON2bits	set	4081
   356   000000                     _PIE1bits	set	3997
   357   000000                     _EECON1bits	set	4006
   358   000000                     _TRISA	set	3986
   359   000000                     _TRISE	set	3990
   360   000000                     _ANSELH	set	3967
   361   000000                     _PORTE	set	3972
   362   000000                     _PORTD	set	3971
   363   000000                     _PORTC	set	3970
   364   000000                     _PORTB	set	3969
   365   000000                     _PORTA	set	3968
   366   000000                     _TABLAT	set	4085
   367   000000                     _TBLPTRL	set	4086
   368   000000                     _TBLPTRH	set	4087
   369   000000                     _TBLPTRU	set	4088
   370   000000                     _INTCONbits	set	4082
   371   000000                     _SSPBUF	set	4041
   372   000000                     _SSPADD	set	4040
   373                           
   374                           ; #config settings
   375                           
   376                           	psect	cinit
   377   001F2E                     __pcinit:
   378                           	callstack 0
   379   001F2E                     start_initialization:
   380                           	callstack 0
   381   001F2E                     __initialization:
   382                           	callstack 0
   383                           
   384                           ; Initialize objects allocated to BANK0 (20 bytes)
   385                           ; load TBLPTR registers with __pidataBANK0
   386   001F2E  0EB6               	movlw	low __pidataBANK0
   387   001F30  6EF6               	movwf	tblptrl,c
   388   001F32  0E23               	movlw	high __pidataBANK0
   389   001F34  6EF7               	movwf	tblptrh,c
   390   001F36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   391   001F38  6EF8               	movwf	tblptru,c
   392   001F3A  EE00  F0BD         	lfsr	0,__pdataBANK0
   393   001F3E  EE10 F014          	lfsr	1,20
   394   001F42                     copy_data0:
   395   001F42  0009               	tblrd		*+
   396   001F44  CFF5 FFEE          	movff	tablat,postinc0
   397   001F48  50E5               	movf	postdec1,w,c
   398   001F4A  50E1               	movf	fsr1l,w,c
   399   001F4C  E1FA               	bnz	copy_data0
   400                           
   401                           ; Initialize objects allocated to COMRAM (16 bytes)
   402                           ; load TBLPTR registers with __pidataCOMRAM
   403   001F4E  0E04               	movlw	low __pidataCOMRAM
   404   001F50  6EF6               	movwf	tblptrl,c
   405   001F52  0E24               	movlw	high __pidataCOMRAM
   406   001F54  6EF7               	movwf	tblptrh,c
   407   001F56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   408   001F58  6EF8               	movwf	tblptru,c
   409   001F5A  EE00  F029         	lfsr	0,__pdataCOMRAM
   410   001F5E  EE10 F010          	lfsr	1,16
   411   001F62                     copy_data1:
   412   001F62  0009               	tblrd		*+
   413   001F64  CFF5 FFEE          	movff	tablat,postinc0
   414   001F68  50E5               	movf	postdec1,w,c
   415   001F6A  50E1               	movf	fsr1l,w,c
   416   001F6C  E1FA               	bnz	copy_data1
   417                           
   418                           ; Clear objects allocated to BANK0 (68 bytes)
   419   001F6E  EE00  F060         	lfsr	0,__pbssBANK0
   420   001F72  0E44               	movlw	68
   421   001F74                     clear_0:
   422   001F74  6AEE               	clrf	postinc0,c
   423   001F76  06E8               	decf	wreg,f,c
   424   001F78  E1FD               	bnz	clear_0
   425                           
   426                           ; Clear objects allocated to COMRAM (13 bytes)
   427   001F7A  EE00  F039         	lfsr	0,__pbssCOMRAM
   428   001F7E  0E0D               	movlw	13
   429   001F80                     clear_1:
   430   001F80  6AEE               	clrf	postinc0,c
   431   001F82  06E8               	decf	wreg,f,c
   432   001F84  E1FD               	bnz	clear_1
   433   001F86                     end_of_initialization:
   434                           	callstack 0
   435   001F86                     __end_of__initialization:
   436                           	callstack 0
   437   001F86  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   438   001F88  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   439   001F8A  0100               	movlb	0
   440   001F8C  EFF2  F00A         	goto	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMRAM
   443   000039                     __pbssCOMRAM:
   444                           	callstack 0
   445   000039                     _rtc:
   446                           	callstack 0
   447   000039                     	ds	6
   448   00003F                     _res:
   449                           	callstack 0
   450   00003F                     	ds	2
   451   000041                     _MSSP_InterruptHandler:
   452                           	callstack 0
   453   000041                     	ds	2
   454   000043                     _eevalue:
   455                           	callstack 0
   456   000043                     	ds	1
   457   000044                     _temp_value:
   458                           	callstack 0
   459   000044                     	ds	1
   460   000045                     _eusartRxLastError:
   461                           	callstack 0
   462   000045                     	ds	1
   463                           
   464                           	psect	dataCOMRAM
   465   000029                     __pdataCOMRAM:
   466                           	callstack 0
   467   000029                     _tris_registers:
   468                           	callstack 0
   469   000029                     	ds	10
   470   000033                     _lcd_obj:
   471                           	callstack 0
   472   000033                     	ds	6
   473                           
   474                           	psect	bssBANK0
   475   000060                     __pbssBANK0:
   476                           	callstack 0
   477   000060                     _I2C_Status:
   478                           	callstack 0
   479   000060                     	ds	36
   480   000084                     _date_time:
   481                           	callstack 0
   482   000084                     	ds	20
   483   000098                     	ds	6
   484   00009E                     _rtc_obj:
   485                           	callstack 0
   486   00009E                     	ds	6
   487                           
   488                           	psect	dataBANK0
   489   0000BD                     __pdataBANK0:
   490                           	callstack 0
   491   0000BD                     _port_registers:
   492                           	callstack 0
   493   0000BD                     	ds	10
   494   0000C7                     _lat_registers:
   495                           	callstack 0
   496   0000C7                     	ds	10
   497                           
   498                           	psect	cstackBANK0
   499   0000A4                     __pcstackBANK0:
   500                           	callstack 0
   501   0000A4                     ??_send_4bit_data:
   502   0000A4                     ?_Set_RTC_Date_Time:
   503                           	callstack 0
   504                           
   505                           ; 6 bytes @ 0x0
   506   0000A4                     	ds	4
   507   0000A8                     lcd_4bit_send_command@lcd:
   508                           	callstack 0
   509   0000A8                     lcd_4bit_send_char_data@lcd:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x4
   513   0000A8                     	ds	2
   514   0000AA                     lcd_4bit_send_command@command:
   515                           	callstack 0
   516   0000AA                     lcd_4bit_send_char_data@data:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x6
   520   0000AA                     	ds	1
   521   0000AB                     lcd_4bit_send_command@l_counter:
   522                           	callstack 0
   523   0000AB                     lcd_4bit_send_char_data@l_counter:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x7
   527   0000AB                     	ds	1
   528   0000AC                     lcd_4bit_send_command@ret:
   529                           	callstack 0
   530   0000AC                     lcd_4bit_send_char_data@ret:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x8
   534   0000AC                     	ds	1
   535   0000AD                     lcd_4bit_intialize@lcd:
   536                           	callstack 0
   537   0000AD                     lcd_4bit_send_string@lcd:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x9
   541   0000AD                     	ds	2
   542   0000AF                     ??_lcd_4bit_intialize:
   543   0000AF                     lcd_4bit_send_string@str:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0xB
   547   0000AF                     	ds	2
   548   0000B1                     lcd_4bit_intialize@l_data_pins_counter:
   549                           	callstack 0
   550   0000B1                     Print_RTC_Date_Time@rtc_obj:
   551                           	callstack 0
   552                           
   553                           ; 6 bytes @ 0xD
   554   0000B1                     	ds	1
   555   0000B2                     lcd_4bit_intialize@ret:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xE
   559   0000B2                     	ds	5
   560   0000B7                     Print_RTC_Date_Time@i:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x13
   564   0000B7                     	ds	2
   565   0000B9                     Print_RTC_Date_Time@i_2230:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x15
   569   0000B9                     	ds	2
   570   0000BB                     ??_main:
   571                           
   572                           ; 1 bytes @ 0x17
   573   0000BB                     	ds	2
   574                           
   575                           	psect	cstackCOMRAM
   576   000001                     __pcstackCOMRAM:
   577                           	callstack 0
   578   000001                     I2C_MasterSendTxData@data:
   579                           	callstack 0
   580   000001                     i2I2C_SetBuffer@buffer:
   581                           	callstack 0
   582   000001                     i2I2C_SetCallback@cb:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x0
   586   000001                     	ds	1
   587   000002                     
   588                           ; 1 bytes @ 0x1
   589   000002                     	ds	1
   590   000003                     i2I2C_SetBuffer@bufferSize:
   591                           	callstack 0
   592   000003                     i2I2C_SetCallback@ptr:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x2
   596   000003                     	ds	2
   597   000005                     i2I2C_SetCallback@idx:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x4
   601   000005                     	ds	1
   602   000006                     i2I2C_SetDataCompleteCallback@cb:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x5
   606   000006                     	ds	2
   607   000008                     i2I2C_SetDataCompleteCallback@ptr:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x7
   611   000008                     	ds	2
   612   00000A                     rd1RegCompleteHandler@ptr:
   613                           	callstack 0
   614   00000A                     rd2RegCompleteHandler@ptr:
   615                           	callstack 0
   616   00000A                     wr1RegCompleteHandler@ptr:
   617                           	callstack 0
   618   00000A                     wr2RegCompleteHandler@ptr:
   619                           	callstack 0
   620   00000A                     rdBlkRegCompleteHandler@ptr:
   621                           	callstack 0
   622   00000A                     I2C_CallbackReturnReset@funPtr:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x9
   626   00000A                     	ds	2
   627   00000C                     ??_I2C_DO_TX:
   628   00000C                     ??_I2C_DO_RX:
   629   00000C                     ??_I2C_DO_TX_EMPTY:
   630   00000C                     ??_I2C_DO_ADDRESS_NACK:
   631   00000C                     
   632                           ; 1 bytes @ 0xB
   633   00000C                     	ds	2
   634   00000E                     ??_I2C_MasterFsm:
   635                           
   636                           ; 1 bytes @ 0xD
   637   00000E                     	ds	2
   638   000010                     ??_INTERRUPT_InterruptManagerHigh:
   639                           
   640                           ; 1 bytes @ 0xF
   641   000010                     	ds	10
   642   00001A                     ?___awdiv:
   643                           	callstack 0
   644   00001A                     ?___awmod:
   645                           	callstack 0
   646   00001A                     EUSART_Write@txData:
   647                           	callstack 0
   648   00001A                     I2C_Close@returnValue:
   649                           	callstack 0
   650   00001A                     I2C_MasterOperation@read:
   651                           	callstack 0
   652   00001A                     EUSART_SetFramingErrorHandler@interruptHandler:
   653                           	callstack 0
   654   00001A                     EUSART_SetOverrunErrorHandler@interruptHandler:
   655                           	callstack 0
   656   00001A                     EUSART_SetErrorHandler@interruptHandler:
   657                           	callstack 0
   658   00001A                     I2C_SetBuffer@buffer:
   659                           	callstack 0
   660   00001A                     I2C_SetInterruptHandler@InterruptHandler:
   661                           	callstack 0
   662   00001A                     I2C_SetCallback@cb:
   663                           	callstack 0
   664   00001A                     gpio_pin_direction_initialize@_pin_config:
   665                           	callstack 0
   666   00001A                     gpio_pin_write_logic@_pin_config:
   667                           	callstack 0
   668   00001A                     ___awdiv@dividend:
   669                           	callstack 0
   670   00001A                     ___awmod@dividend:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x19
   674   00001A                     	ds	1
   675   00001B                     I2C_MasterOperation@returnValue:
   676                           	callstack 0
   677   00001B                     EUART_Send_String@text:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x1A
   681   00001B                     	ds	1
   682   00001C                     ??_gpio_pin_direction_initialize:
   683   00001C                     I2C_Open@address:
   684                           	callstack 0
   685   00001C                     gpio_pin_write_logic@logic:
   686                           	callstack 0
   687   00001C                     I2C_SetBuffer@bufferSize:
   688                           	callstack 0
   689   00001C                     I2C_SetCallback@ptr:
   690                           	callstack 0
   691   00001C                     ___awdiv@divisor:
   692                           	callstack 0
   693   00001C                     ___awmod@divisor:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x1B
   697   00001C                     	ds	1
   698   00001D                     ??_gpio_pin_write_logic:
   699   00001D                     I2C_Open@returnValue:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x1C
   703   00001D                     	ds	1
   704   00001E                     I2C_SetCallback@idx:
   705                           	callstack 0
   706   00001E                     ___awdiv@counter:
   707                           	callstack 0
   708   00001E                     ___awmod@counter:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x1D
   712   00001E                     	ds	1
   713   00001F                     ___awdiv@sign:
   714                           	callstack 0
   715   00001F                     ___awmod@sign:
   716                           	callstack 0
   717   00001F                     I2C_SetDataCompleteCallback@cb:
   718                           	callstack 0
   719   00001F                     I2C_SetAddressNackCallback@cb:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x1E
   723   00001F                     	ds	1
   724   000020                     ___awdiv@quotient:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x1F
   728   000020                     	ds	1
   729   000021                     I2C_SetDataCompleteCallback@ptr:
   730                           	callstack 0
   731   000021                     I2C_SetAddressNackCallback@ptr:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x20
   735   000021                     	ds	1
   736   000022                     gpio_pin_direction_initialize@ret:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x21
   740   000022                     	ds	1
   741   000023                     I2C_Read1ByteRegister@reg:
   742                           	callstack 0
   743   000023                     I2C_Write1ByteRegister@reg:
   744                           	callstack 0
   745   000023                     gpio_pin_write_logic@ret:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x22
   749   000023                     	ds	1
   750   000024                     I2C_Read1ByteRegister@address:
   751                           	callstack 0
   752   000024                     I2C_Write1ByteRegister@data:
   753                           	callstack 0
   754   000024                     send_4bit_data@lcd:
   755                           	callstack 0
   756   000024                     send_4bit_enable_signal@lcd:
   757                           	callstack 0
   758   000024                     gpio_pin_initialize@_pin_config:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x23
   762   000024                     	ds	1
   763   000025                     I2C_Read1ByteRegister@returnValue:
   764                           	callstack 0
   765   000025                     I2C_Write1ByteRegister@address:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x24
   769   000025                     	ds	1
   770   000026                     ??_gpio_pin_initialize:
   771   000026                     send_4bit_data@data:
   772                           	callstack 0
   773   000026                     send_4bit_enable_signal@ret:
   774                           	callstack 0
   775   000026                     EEPROM_Read_1Byte@reg:
   776                           	callstack 0
   777   000026                     EEPROM_Write_1Byte@reg:
   778                           	callstack 0
   779   000026                     Read_Temprature@address:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x25
   783   000026                     	ds	1
   784   000027                     send_4bit_data@ret:
   785                           	callstack 0
   786   000027                     EEPROM_Read_1Byte@address:
   787                           	callstack 0
   788   000027                     EEPROM_Write_1Byte@data:
   789                           	callstack 0
   790   000027                     gpio_pin_initialize@ret:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x26
   794   000027                     	ds	1
   795   000028                     send_4bit_data@l_counter:
   796                           	callstack 0
   797   000028                     EEPROM_Write_1Byte@address:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x27
   801   000028                     	ds	1
   802   000029                     
   803                           ; 1 bytes @ 0x28
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 56 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels required when called: 12
   829 ;; This function calls:
   830 ;;		_EEPROM_Read_1Byte
   831 ;;		_EEPROM_Write_1Byte
   832 ;;		_EUART_Send_String
   833 ;;		_I2C_Write1ByteRegister
   834 ;;		_Print_RTC_Date_Time
   835 ;;		_Read_Temprature
   836 ;;		_SYSTEM_Initialize
   837 ;;		_Set_RTC_Date_Time
   838 ;;		___awdiv
   839 ;;		___awmod
   840 ;;		_lcd_4bit_intialize
   841 ;;		_lcd_4bit_send_char_data
   842 ;;		_lcd_4bit_send_command
   843 ;;		_lcd_4bit_send_string
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text0
   850   0015E4                     __ptext0:
   851                           	callstack 0
   852   0015E4                     _main:
   853                           	callstack 19
   854   0015E4                     
   855                           ;main.c: 59:     SYSTEM_Initialize();
   856   0015E4  ECC5  F011         	call	_SYSTEM_Initialize	;wreg free
   857   0015E8                     
   858                           ;main.c: 66:     (INTCONbits.GIEH = 1);
   859   0015E8  8EF2               	bsf	242,7,c	;volatile
   860   0015EA                     
   861                           ;main.c: 69:     (INTCONbits.GIEL = 1);
   862   0015EA  8CF2               	bsf	242,6,c	;volatile
   863   0015EC                     
   864                           ;main.c: 78:     (INTCONbits.PEIE = 1);
   865   0015EC  8CF2               	bsf	242,6,c	;volatile
   866   0015EE                     
   867                           ;main.c: 82:     EUART_Send_String("Karim Ramadan -> Smart Home\r");
   868   0015EE  0E21               	movlw	low STR_1
   869   0015F0  6E1B               	movwf	EUART_Send_String@text^0,c
   870   0015F2  0E10               	movlw	high STR_1
   871   0015F4  6E1C               	movwf	(EUART_Send_String@text+1)^0,c
   872   0015F6  ECB1  F010         	call	_EUART_Send_String	;wreg free
   873   0015FA                     
   874                           ;main.c: 83:     lcd_4bit_intialize(&lcd_obj);
   875   0015FA  0E33               	movlw	low _lcd_obj
   876   0015FC  0100               	movlb	0	; () banked
   877   0015FE  6FAD               	movwf	lcd_4bit_intialize@lcd& (0+255),b
   878   001600  0E00               	movlw	high _lcd_obj
   879   001602  6FAE               	movwf	(lcd_4bit_intialize@lcd+1)& (0+255),b
   880   001604  ECEB  F008         	call	_lcd_4bit_intialize	;wreg free
   881   001608                     l5191:
   882                           
   883                           ;main.c: 85:     {;main.c: 86:         lcd_4bit_send_command(&lcd_obj, 0X01);
   884   001608  0E33               	movlw	low _lcd_obj
   885   00160A  0100               	movlb	0	; () banked
   886   00160C  6FA8               	movwf	lcd_4bit_send_command@lcd& (0+255),b
   887   00160E  0E00               	movlw	high _lcd_obj
   888   001610  6FA9               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
   889   001612  0E01               	movlw	1
   890   001614  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
   891   001616  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
   892   00161A                     
   893                           ;main.c: 87:         rtc_obj = Set_RTC_Date_Time();
   894   00161A  ECF7  F00F         	call	_Set_RTC_Date_Time	;wreg free
   895   00161E  EE20  F09E         	lfsr	2,_rtc_obj
   896   001622  0E05               	movlw	5
   897   001624                     u3021:
   898   001624  CFEB FFDB          	movff	plusw0,plusw2
   899   001628  06E8               	decf	wreg,f,c
   900   00162A  E2FC               	bc	u3021
   901                           
   902                           ;main.c: 88:         Print_RTC_Date_Time(rtc_obj);
   903   00162C  EE20  F09E         	lfsr	2,_rtc_obj
   904   001630  EE00  F0B1         	lfsr	0,Print_RTC_Date_Time@rtc_obj
   905   001634  0E05               	movlw	5
   906   001636                     u3031:
   907   001636  CFDB FFEB          	movff	plusw2,plusw0
   908   00163A  06E8               	decf	wreg,f,c
   909   00163C  E2FC               	bc	u3031
   910   00163E  EC2F  F008         	call	_Print_RTC_Date_Time	;wreg free
   911   001642                     
   912                           ;main.c: 89:         temp_value = Read_Temprature(0x9A);
   913   001642  0E9A               	movlw	154
   914   001644  EC12  F012         	call	_Read_Temprature
   915   001648  6E44               	movwf	_temp_value^0,c
   916   00164A                     
   917                           ;main.c: 90:         EEPROM_Write_1Byte(0xA2,0x08,0x11);
   918   00164A  0E08               	movlw	8
   919   00164C  6E26               	movwf	EEPROM_Write_1Byte@reg^0,c
   920   00164E  0E11               	movlw	17
   921   001650  6E27               	movwf	EEPROM_Write_1Byte@data^0,c
   922   001652  0EA2               	movlw	162
   923   001654  ECF9  F011         	call	_EEPROM_Write_1Byte
   924   001658                     
   925                           ;main.c: 91:         eevalue = EEPROM_Read_1Byte(0xA2,0x08);
   926   001658  0E08               	movlw	8
   927   00165A  6E26               	movwf	EEPROM_Read_1Byte@reg^0,c
   928   00165C  0EA2               	movlw	162
   929   00165E  EC19  F012         	call	_EEPROM_Read_1Byte
   930   001662  6E43               	movwf	_eevalue^0,c
   931   001664                     
   932                           ;main.c: 92:         I2C_Write1ByteRegister(0x10,0x00,temp_value);
   933   001664  0E00               	movlw	0
   934   001666  6E23               	movwf	I2C_Write1ByteRegister@reg^0,c
   935   001668  C044  F024         	movff	_temp_value,I2C_Write1ByteRegister@data
   936   00166C  0E10               	movlw	16
   937   00166E  EC2D  F00F         	call	_I2C_Write1ByteRegister
   938   001672                     
   939                           ;main.c: 93:         lcd_4bit_send_string(&lcd_obj,"Temperature: ");
   940   001672  0E33               	movlw	low _lcd_obj
   941   001674  0100               	movlb	0	; () banked
   942   001676  6FAD               	movwf	lcd_4bit_send_string@lcd& (0+255),b
   943   001678  0E00               	movlw	high _lcd_obj
   944   00167A  6FAE               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
   945   00167C  0E3E               	movlw	low STR_2
   946   00167E  6FAF               	movwf	lcd_4bit_send_string@str& (0+255),b
   947   001680  0E10               	movlw	high STR_2
   948   001682  6FB0               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
   949   001684  EC25  F010         	call	_lcd_4bit_send_string	;wreg free
   950   001688                     
   951                           ;main.c: 94:         lcd_4bit_send_char_data(&lcd_obj,(temp_value/10)+'0');
   952   001688  0E33               	movlw	low _lcd_obj
   953   00168A  0100               	movlb	0	; () banked
   954   00168C  6FA8               	movwf	lcd_4bit_send_char_data@lcd& (0+255),b
   955   00168E  0E00               	movlw	high _lcd_obj
   956   001690  6FA9               	movwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),b
   957   001692  C044  F01A         	movff	_temp_value,___awdiv@dividend
   958   001696  6A1B               	clrf	(___awdiv@dividend+1)^0,c
   959   001698  0E00               	movlw	0
   960   00169A  6E1D               	movwf	(___awdiv@divisor+1)^0,c
   961   00169C  0E0A               	movlw	10
   962   00169E  6E1C               	movwf	___awdiv@divisor^0,c
   963   0016A0  EC7E  F00B         	call	___awdiv	;wreg free
   964   0016A4  501A               	movf	?___awdiv^0,w,c
   965   0016A6  0F30               	addlw	48
   966   0016A8  0100               	movlb	0	; () banked
   967   0016AA  6FAA               	movwf	lcd_4bit_send_char_data@data& (0+255),b
   968   0016AC  ECC4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
   969   0016B0                     
   970                           ;main.c: 95:         lcd_4bit_send_char_data(&lcd_obj,(temp_value%10)+'0');
   971   0016B0  0E33               	movlw	low _lcd_obj
   972   0016B2  0100               	movlb	0	; () banked
   973   0016B4  6FA8               	movwf	lcd_4bit_send_char_data@lcd& (0+255),b
   974   0016B6  0E00               	movlw	high _lcd_obj
   975   0016B8  6FA9               	movwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),b
   976   0016BA  C044  F01A         	movff	_temp_value,___awmod@dividend
   977   0016BE  6A1B               	clrf	(___awmod@dividend+1)^0,c
   978   0016C0  0E00               	movlw	0
   979   0016C2  6E1D               	movwf	(___awmod@divisor+1)^0,c
   980   0016C4  0E0A               	movlw	10
   981   0016C6  6E1C               	movwf	___awmod@divisor^0,c
   982   0016C8  EC42  F00C         	call	___awmod	;wreg free
   983   0016CC  501A               	movf	?___awmod^0,w,c
   984   0016CE  0F30               	addlw	48
   985   0016D0  0100               	movlb	0	; () banked
   986   0016D2  6FAA               	movwf	lcd_4bit_send_char_data@data& (0+255),b
   987   0016D4  ECC4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
   988   0016D8                     
   989                           ;main.c: 96:         _delay((unsigned long)((500)*(16000000/4000.0)));
   990   0016D8  0E0B               	movlw	11
   991   0016DA  0100               	movlb	0	; () banked
   992   0016DC  6FBC               	movwf	(??_main+1)& (0+255),b
   993   0016DE  0E26               	movlw	38
   994   0016E0  6FBB               	movwf	??_main& (0+255),b
   995   0016E2  0E5D               	movlw	93
   996   0016E4                     u3177:
   997   0016E4  2EE8               	decfsz	wreg,f,c
   998   0016E6  D7FE               	bra	u3177
   999   0016E8  2FBB               	decfsz	??_main& (0+255),f,b
  1000   0016EA  D7FC               	bra	u3177
  1001   0016EC  2FBC               	decfsz	(??_main+1)& (0+255),f,b
  1002   0016EE  D7FA               	bra	u3177
  1003   0016F0  F000 F000          	nop2	
  1004   0016F4  EF04  F00B         	goto	l5191
  1005   0016F8  EF5B  F000         	goto	start
  1006   0016FC                     __end_of_main:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _lcd_4bit_intialize *****************
  1010 ;; Defined at:
  1011 ;;		line 9 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  lcd             2    9[BANK0 ] PTR const struct .
  1014 ;;		 -> lcd_obj(6), 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  ret             1   14[BANK0 ] unsigned char 
  1017 ;;  l_data_pins_    1   13[BANK0 ] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      unsigned char 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;Total ram usage:        6 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; Hardware stack levels required when called: 10
  1034 ;; This function calls:
  1035 ;;		_gpio_pin_initialize
  1036 ;;		_lcd_4bit_send_command
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text1
  1043   0011D6                     __ptext1:
  1044                           	callstack 0
  1045   0011D6                     _lcd_4bit_intialize:
  1046                           	callstack 20
  1047   0011D6                     
  1048                           ;Modules/chr_LCD/ecu_chr_lcd.c: 11:     uint8 l_data_pins_counter = 0;
  1049   0011D6  0E00               	movlw	0
  1050   0011D8  0100               	movlb	0	; () banked
  1051   0011DA  6FB1               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1052   0011DC                     
  1053                           ; BSR set to: 0
  1054                           ;Modules/chr_LCD/ecu_chr_lcd.c: 12:     if (((void*)0) == lcd) {
  1055   0011DC  51AD               	movf	lcd_4bit_intialize@lcd& (0+255),w,b
  1056   0011DE  11AE               	iorwf	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1057   0011E0  A4D8               	btfss	status,2,c
  1058   0011E2  EFF5  F008         	goto	u2941
  1059   0011E6  EFF7  F008         	goto	u2940
  1060   0011EA                     u2941:
  1061   0011EA  EFF9  F008         	goto	l5049
  1062   0011EE                     u2940:
  1063   0011EE                     
  1064                           ; BSR set to: 0
  1065                           ;Modules/chr_LCD/ecu_chr_lcd.c: 14:     } else {
  1066   0011EE  EF9B  F009         	goto	l765
  1067   0011F2                     l5049:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;Modules/chr_LCD/ecu_chr_lcd.c: 15:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1071   0011F2  0E01               	movlw	1
  1072   0011F4  25AD               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1073   0011F6  6E24               	movwf	gpio_pin_initialize@_pin_config^0,c
  1074   0011F8  0E00               	movlw	0
  1075   0011FA  21AE               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1076   0011FC  6E25               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1077   0011FE  EC3C  F00D         	call	_gpio_pin_initialize	;wreg free
  1078   001202  0100               	movlb	0	; () banked
  1079   001204  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1080                           
  1081                           ;Modules/chr_LCD/ecu_chr_lcd.c: 16:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  1082   001206  C0AD  F024         	movff	lcd_4bit_intialize@lcd,gpio_pin_initialize@_pin_config
  1083   00120A  C0AE  F025         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_initialize@_pin_config+1
  1084   00120E  EC3C  F00D         	call	_gpio_pin_initialize	;wreg free
  1085   001212  0100               	movlb	0	; () banked
  1086   001214  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1087   001216                     
  1088                           ; BSR set to: 0
  1089                           ;Modules/chr_LCD/ecu_chr_lcd.c: 17:         for (l_data_pins_counter = 0; l_data_pins_co
      +                          unter < 8; l_data_pins_counter++) {
  1090   001216  0E00               	movlw	0
  1091   001218  6FB1               	movwf	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1092   00121A                     l5057:
  1093                           
  1094                           ; BSR set to: 0
  1095   00121A  51B1               	movf	lcd_4bit_intialize@l_data_pins_counter& (0+255),w,b
  1096   00121C  25AD               	addwf	lcd_4bit_intialize@lcd& (0+255),w,b
  1097   00121E  6FAF               	movwf	??_lcd_4bit_intialize& (0+255),b
  1098   001220  0E00               	movlw	0
  1099   001222  21AE               	addwfc	(lcd_4bit_intialize@lcd+1)& (0+255),w,b
  1100   001224  6FB0               	movwf	(??_lcd_4bit_intialize+1)& (0+255),b
  1101   001226  0E02               	movlw	2
  1102   001228  25AF               	addwf	??_lcd_4bit_intialize& (0+255),w,b
  1103   00122A  6E24               	movwf	gpio_pin_initialize@_pin_config^0,c
  1104   00122C  0E00               	movlw	0
  1105   00122E  21B0               	addwfc	(??_lcd_4bit_intialize+1)& (0+255),w,b
  1106   001230  6E25               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
  1107   001232  EC3C  F00D         	call	_gpio_pin_initialize	;wreg free
  1108   001236                     
  1109                           ;Modules/chr_LCD/ecu_chr_lcd.c: 19:         }
  1110   001236  0100               	movlb	0	; () banked
  1111   001238  2BB1               	incf	lcd_4bit_intialize@l_data_pins_counter& (0+255),f,b
  1112   00123A                     
  1113                           ; BSR set to: 0
  1114   00123A  0E07               	movlw	7
  1115   00123C  65B1               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter& (0+255),b
  1116   00123E  EF23  F009         	goto	u2951
  1117   001242  EF25  F009         	goto	u2950
  1118   001246                     u2951:
  1119   001246  EF0D  F009         	goto	l5057
  1120   00124A                     u2950:
  1121   00124A                     
  1122                           ; BSR set to: 0
  1123   00124A  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1124   00124E  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1125   001252  0E38               	movlw	56
  1126   001254  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1127   001256  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1128   00125A                     
  1129                           ;Modules/chr_LCD/ecu_chr_lcd.c: 21:         _delay((unsigned long)((20)*(16000000/4000.0
      +                          )));
  1130   00125A  0E68               	movlw	104
  1131   00125C  0100               	movlb	0	; () banked
  1132   00125E  6FAF               	movwf	??_lcd_4bit_intialize& (0+255),b
  1133   001260  0EE4               	movlw	228
  1134   001262                     u3187:
  1135   001262  2EE8               	decfsz	wreg,f,c
  1136   001264  D7FE               	bra	u3187
  1137   001266  2FAF               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1138   001268  D7FC               	bra	u3187
  1139   00126A  F000               	nop	
  1140   00126C  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1141   001270  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1142   001274  0E38               	movlw	56
  1143   001276  0100               	movlb	0	; () banked
  1144   001278  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1145   00127A  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1146                           
  1147                           ;Modules/chr_LCD/ecu_chr_lcd.c: 23:         _delay((unsigned long)((5)*(16000000/4000.0)
      +                          ));
  1148   00127E  0E1A               	movlw	26
  1149   001280  0100               	movlb	0	; () banked
  1150   001282  6FAF               	movwf	??_lcd_4bit_intialize& (0+255),b
  1151   001284  0EF8               	movlw	248
  1152   001286                     u3197:
  1153   001286  2EE8               	decfsz	wreg,f,c
  1154   001288  D7FE               	bra	u3197
  1155   00128A  2FAF               	decfsz	??_lcd_4bit_intialize& (0+255),f,b
  1156   00128C  D7FC               	bra	u3197
  1157   00128E  F000               	nop	
  1158   001290  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1159   001294  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1160   001298  0E38               	movlw	56
  1161   00129A  0100               	movlb	0	; () banked
  1162   00129C  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1163   00129E  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1164   0012A2                     
  1165                           ;Modules/chr_LCD/ecu_chr_lcd.c: 25:         _delay((unsigned long)((150)*(16000000/40000
      +                          00.0)));
  1166   0012A2  0EC8               	movlw	200
  1167   0012A4                     u3207:
  1168   0012A4  2EE8               	decfsz	wreg,f,c
  1169   0012A6  D7FE               	bra	u3207
  1170                           
  1171                           ;Modules/chr_LCD/ecu_chr_lcd.c: 26:         ret = lcd_4bit_send_command(lcd, 0x38);
  1172   0012A8  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1173   0012AC  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1174   0012B0  0E38               	movlw	56
  1175   0012B2  0100               	movlb	0	; () banked
  1176   0012B4  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1177   0012B6  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1178   0012BA  0100               	movlb	0	; () banked
  1179   0012BC  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1180                           
  1181                           ;Modules/chr_LCD/ecu_chr_lcd.c: 27:         ret = lcd_4bit_send_command(lcd, 0X01);
  1182   0012BE  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1183   0012C2  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1184   0012C6  0E01               	movlw	1
  1185   0012C8  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1186   0012CA  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1187   0012CE  0100               	movlb	0	; () banked
  1188   0012D0  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1189                           
  1190                           ;Modules/chr_LCD/ecu_chr_lcd.c: 28:         ret = lcd_4bit_send_command(lcd, 0x02);
  1191   0012D2  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1192   0012D6  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1193   0012DA  0E02               	movlw	2
  1194   0012DC  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1195   0012DE  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1196   0012E2  0100               	movlb	0	; () banked
  1197   0012E4  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1198                           
  1199                           ;Modules/chr_LCD/ecu_chr_lcd.c: 29:         ret = lcd_4bit_send_command(lcd, 0x06);
  1200   0012E6  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1201   0012EA  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1202   0012EE  0E06               	movlw	6
  1203   0012F0  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1204   0012F2  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1205   0012F6  0100               	movlb	0	; () banked
  1206   0012F8  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1207                           
  1208                           ;Modules/chr_LCD/ecu_chr_lcd.c: 30:         ret = lcd_4bit_send_command(lcd, 0x0C);
  1209   0012FA  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1210   0012FE  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1211   001302  0E0C               	movlw	12
  1212   001304  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1213   001306  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1214   00130A  0100               	movlb	0	; () banked
  1215   00130C  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1216                           
  1217                           ;Modules/chr_LCD/ecu_chr_lcd.c: 31:         ret = lcd_4bit_send_command(lcd, 0x28);
  1218   00130E  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1219   001312  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1220   001316  0E28               	movlw	40
  1221   001318  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1222   00131A  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1223   00131E  0100               	movlb	0	; () banked
  1224   001320  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1225                           
  1226                           ;Modules/chr_LCD/ecu_chr_lcd.c: 32:         ret = lcd_4bit_send_command(lcd, 0x80);
  1227   001322  C0AD  F0A8         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1228   001326  C0AE  F0A9         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1229   00132A  0E80               	movlw	128
  1230   00132C  6FAA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1231   00132E  EC81  F00D         	call	_lcd_4bit_send_command	;wreg free
  1232   001332  0100               	movlb	0	; () banked
  1233   001334  6FB2               	movwf	lcd_4bit_intialize@ret& (0+255),b
  1234   001336                     l765:
  1235                           
  1236                           ; BSR set to: 0
  1237   001336  0012               	return		;funcret
  1238   001338                     __end_of_lcd_4bit_intialize:
  1239                           	callstack 0
  1240                           
  1241 ;; *************** function _lcd_4bit_send_command *****************
  1242 ;; Defined at:
  1243 ;;		line 37 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  lcd             2    4[BANK0 ] PTR const struct .
  1246 ;;		 -> lcd_obj(6), 
  1247 ;;  command         1    6[BANK0 ] unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  ret             1    8[BANK0 ] unsigned char 
  1250 ;;  l_counter       1    7[BANK0 ] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      unsigned char 
  1253 ;; Registers used:
  1254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1260 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;Total ram usage:        5 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 9
  1267 ;; This function calls:
  1268 ;;		_gpio_pin_write_logic
  1269 ;;		_send_4bit_data
  1270 ;;		_send_4bit_enable_signal
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;;		_lcd_4bit_intialize
  1274 ;;		_lcd_4bit_send_custom_char
  1275 ;;		_lcd_4bit_set_cursor
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text2
  1280   001B02                     __ptext2:
  1281                           	callstack 0
  1282   001B02                     _lcd_4bit_send_command:
  1283                           	callstack 21
  1284   001B02                     
  1285                           ;Modules/chr_LCD/ecu_chr_lcd.c: 39:     uint8 l_counter = 0;
  1286   001B02  0E00               	movlw	0
  1287   001B04  0100               	movlb	0	; () banked
  1288   001B06  6FAB               	movwf	lcd_4bit_send_command@l_counter& (0+255),b
  1289   001B08                     
  1290                           ; BSR set to: 0
  1291                           ;Modules/chr_LCD/ecu_chr_lcd.c: 40:     if (((void*)0) == lcd) {
  1292   001B08  51A8               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  1293   001B0A  11A9               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  1294   001B0C  A4D8               	btfss	status,2,c
  1295   001B0E  EF8B  F00D         	goto	u2851
  1296   001B12  EF8D  F00D         	goto	u2850
  1297   001B16                     u2851:
  1298   001B16  EF91  F00D         	goto	l4969
  1299   001B1A                     u2850:
  1300   001B1A                     
  1301                           ; BSR set to: 0
  1302                           ;Modules/chr_LCD/ecu_chr_lcd.c: 41:         ret = (Std_ReturnType)0x00;
  1303   001B1A  0E00               	movlw	0
  1304   001B1C  6FAC               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1305                           
  1306                           ;Modules/chr_LCD/ecu_chr_lcd.c: 42:     } else {
  1307   001B1E  EFC2  F00D         	goto	l4971
  1308   001B22                     l4969:
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;Modules/chr_LCD/ecu_chr_lcd.c: 43:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), G
      +                          PIO_LOW);
  1312   001B22  0E01               	movlw	1
  1313   001B24  25A8               	addwf	lcd_4bit_send_command@lcd& (0+255),w,b
  1314   001B26  6E1A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1315   001B28  0E00               	movlw	0
  1316   001B2A  21A9               	addwfc	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  1317   001B2C  6E1B               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1318   001B2E  0E00               	movlw	0
  1319   001B30  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  1320   001B32  EC4D  F00A         	call	_gpio_pin_write_logic	;wreg free
  1321   001B36  0100               	movlb	0	; () banked
  1322   001B38  6FAC               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1323                           
  1324                           ;Modules/chr_LCD/ecu_chr_lcd.c: 44:         ret = send_4bit_data(lcd, command >> 4);
  1325   001B3A  C0A8  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_data@lcd
  1326   001B3E  C0A9  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_data@lcd+1
  1327   001B42  39AA               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  1328   001B44  0B0F               	andlw	15
  1329   001B46  6E26               	movwf	send_4bit_data@data^0,c
  1330   001B48  ECC8  F00F         	call	_send_4bit_data	;wreg free
  1331   001B4C  0100               	movlb	0	; () banked
  1332   001B4E  6FAC               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1333                           
  1334                           ;Modules/chr_LCD/ecu_chr_lcd.c: 45:         ret = send_4bit_enable_signal(lcd);
  1335   001B50  C0A8  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_enable_signal@lcd
  1336   001B54  C0A9  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_enable_signal@lcd+1
  1337   001B58  ECE6  F010         	call	_send_4bit_enable_signal	;wreg free
  1338   001B5C  0100               	movlb	0	; () banked
  1339   001B5E  6FAC               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1340                           
  1341                           ;Modules/chr_LCD/ecu_chr_lcd.c: 46:         ret = send_4bit_data(lcd, command);
  1342   001B60  C0A8  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_data@lcd
  1343   001B64  C0A9  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_data@lcd+1
  1344   001B68  C0AA  F026         	movff	lcd_4bit_send_command@command,send_4bit_data@data
  1345   001B6C  ECC8  F00F         	call	_send_4bit_data	;wreg free
  1346   001B70  0100               	movlb	0	; () banked
  1347   001B72  6FAC               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1348                           
  1349                           ;Modules/chr_LCD/ecu_chr_lcd.c: 47:         ret = send_4bit_enable_signal(lcd);
  1350   001B74  C0A8  F024         	movff	lcd_4bit_send_command@lcd,send_4bit_enable_signal@lcd
  1351   001B78  C0A9  F025         	movff	lcd_4bit_send_command@lcd+1,send_4bit_enable_signal@lcd+1
  1352   001B7C  ECE6  F010         	call	_send_4bit_enable_signal	;wreg free
  1353   001B80  0100               	movlb	0	; () banked
  1354   001B82  6FAC               	movwf	lcd_4bit_send_command@ret& (0+255),b
  1355   001B84                     l4971:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;Modules/chr_LCD/ecu_chr_lcd.c: 49:     return ret;
  1359   001B84  51AC               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  1360   001B86                     
  1361                           ; BSR set to: 0
  1362   001B86  0012               	return		;funcret
  1363   001B88                     __end_of_lcd_4bit_send_command:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _gpio_pin_initialize *****************
  1367 ;; Defined at:
  1368 ;;		line 140 in file "MCAL/hal_gpio.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  _pin_config     2   35[COMRAM] PTR const struct .
  1371 ;;		 -> lcd_obj.lcd_data(4), lcd_obj(6), 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  ret             1   38[COMRAM] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      unsigned char 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        4 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 8
  1390 ;; This function calls:
  1391 ;;		_gpio_pin_direction_initialize
  1392 ;;		_gpio_pin_write_logic
  1393 ;; This function is called by:
  1394 ;;		_lcd_4bit_intialize
  1395 ;;		_lcd_8bit_intialize
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text3
  1400   001A78                     __ptext3:
  1401                           	callstack 0
  1402   001A78                     _gpio_pin_initialize:
  1403                           	callstack 21
  1404   001A78                     
  1405                           ;MCAL/hal_gpio.c: 142:     if(((void*)0) == _pin_config || _pin_config->pin >= 8 || _pin
      +                          _config->port >= 5){
  1406   001A78  5024               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1407   001A7A  1025               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
  1408   001A7C  B4D8               	btfsc	status,2,c
  1409   001A7E  EF43  F00D         	goto	u2881
  1410   001A82  EF45  F00D         	goto	u2880
  1411   001A86                     u2881:
  1412   001A86  EF65  F00D         	goto	l4995
  1413   001A8A                     u2880:
  1414   001A8A  C024  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1415   001A8E  C025  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1416   001A92  30DF               	rrcf	223,w,c
  1417   001A94  32E8               	rrcf	wreg,f,c
  1418   001A96  32E8               	rrcf	wreg,f,c
  1419   001A98  0B07               	andlw	7
  1420   001A9A  6E26               	movwf	??_gpio_pin_initialize^0,c
  1421   001A9C  0E08               	movlw	8
  1422   001A9E  6026               	cpfslt	??_gpio_pin_initialize^0,c
  1423   001AA0  EF54  F00D         	goto	u2891
  1424   001AA4  EF56  F00D         	goto	u2890
  1425   001AA8                     u2891:
  1426   001AA8  EF65  F00D         	goto	l4995
  1427   001AAC                     u2890:
  1428   001AAC  C024  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1429   001AB0  C025  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1430   001AB4  50DF               	movf	223,w,c
  1431   001AB6  0B07               	andlw	7
  1432   001AB8  6E26               	movwf	??_gpio_pin_initialize^0,c
  1433   001ABA  0E04               	movlw	4
  1434   001ABC  6426               	cpfsgt	??_gpio_pin_initialize^0,c
  1435   001ABE  EF63  F00D         	goto	u2901
  1436   001AC2  EF65  F00D         	goto	u2900
  1437   001AC6                     u2901:
  1438   001AC6  EF69  F00D         	goto	l4997
  1439   001ACA                     u2900:
  1440   001ACA                     l4995:
  1441                           
  1442                           ;MCAL/hal_gpio.c: 143:         ret = (Std_ReturnType)0x00;
  1443   001ACA  0E00               	movlw	0
  1444   001ACC  6E27               	movwf	gpio_pin_initialize@ret^0,c
  1445                           
  1446                           ;MCAL/hal_gpio.c: 144:     }
  1447   001ACE  EF7F  F00D         	goto	l4999
  1448   001AD2                     l4997:
  1449                           
  1450                           ;MCAL/hal_gpio.c: 146:         ret = gpio_pin_direction_initialize(_pin_config);
  1451   001AD2  C024  F01A         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1452   001AD6  C025  F01B         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  1453   001ADA  EC9C  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1454   001ADE  6E27               	movwf	gpio_pin_initialize@ret^0,c
  1455                           
  1456                           ;MCAL/hal_gpio.c: 147:         ret = gpio_pin_write_logic(_pin_config,_pin_config->logic
      +                          );
  1457   001AE0  C024  F01A         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1458   001AE4  C025  F01B         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1459   001AE8  C024  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1460   001AEC  C025  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1461   001AF0  0E00               	movlw	0
  1462   001AF2  BEDF               	btfsc	indf2,7,c
  1463   001AF4  0E01               	movlw	1
  1464   001AF6  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  1465   001AF8  EC4D  F00A         	call	_gpio_pin_write_logic	;wreg free
  1466   001AFC  6E27               	movwf	gpio_pin_initialize@ret^0,c
  1467   001AFE                     l4999:
  1468                           
  1469                           ;MCAL/hal_gpio.c: 149:     return ret;
  1470   001AFE  5027               	movf	gpio_pin_initialize@ret^0,w,c
  1471   001B00  0012               	return		;funcret
  1472   001B02                     __end_of_gpio_pin_initialize:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _gpio_pin_direction_initialize *****************
  1476 ;; Defined at:
  1477 ;;		line 25 in file "MCAL/hal_gpio.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  1480 ;;		 -> lcd_obj.lcd_data(4), lcd_obj(6), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  ret             1   33[COMRAM] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;Total ram usage:        9 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 7
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_gpio_pin_initialize
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text4
  1507   001338                     __ptext4:
  1508                           	callstack 0
  1509   001338                     _gpio_pin_direction_initialize:
  1510                           	callstack 21
  1511   001338                     
  1512                           ;MCAL/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1513   001338  0E01               	movlw	1
  1514   00133A  6E22               	movwf	gpio_pin_direction_initialize@ret^0,c
  1515   00133C                     
  1516                           ;MCAL/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin >= 8 || _pin_
      +                          config->port >= 5){
  1517   00133C  501A               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1518   00133E  101B               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  1519   001340  B4D8               	btfsc	status,2,c
  1520   001342  EFA5  F009         	goto	u2771
  1521   001346  EFA7  F009         	goto	u2770
  1522   00134A                     u2771:
  1523   00134A  EFC7  F009         	goto	l4937
  1524   00134E                     u2770:
  1525   00134E  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1526   001352  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1527   001356  30DF               	rrcf	223,w,c
  1528   001358  32E8               	rrcf	wreg,f,c
  1529   00135A  32E8               	rrcf	wreg,f,c
  1530   00135C  0B07               	andlw	7
  1531   00135E  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1532   001360  0E08               	movlw	8
  1533   001362  601C               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1534   001364  EFB6  F009         	goto	u2781
  1535   001368  EFB8  F009         	goto	u2780
  1536   00136C                     u2781:
  1537   00136C  EFC7  F009         	goto	l4937
  1538   001370                     u2780:
  1539   001370  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1540   001374  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1541   001378  50DF               	movf	223,w,c
  1542   00137A  0B07               	andlw	7
  1543   00137C  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1544   00137E  0E04               	movlw	4
  1545   001380  641C               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1546   001382  EFC5  F009         	goto	u2791
  1547   001386  EFC7  F009         	goto	u2790
  1548   00138A                     u2791:
  1549   00138A  EF2A  F00A         	goto	l4945
  1550   00138E                     u2790:
  1551   00138E                     l4937:
  1552                           
  1553                           ;MCAL/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  1554   00138E  0E00               	movlw	0
  1555   001390  6E22               	movwf	gpio_pin_direction_initialize@ret^0,c
  1556                           
  1557                           ;MCAL/hal_gpio.c: 29:     }
  1558   001392  EF4B  F00A         	goto	l4947
  1559   001396                     l4939:
  1560                           
  1561                           ;MCAL/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= ~((uint8) 1
      +                          <<_pin_config->pin));
  1562   001396  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1563   00139A  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1564   00139E  30DF               	rrcf	223,w,c
  1565   0013A0  32E8               	rrcf	wreg,f,c
  1566   0013A2  32E8               	rrcf	wreg,f,c
  1567   0013A4  0B07               	andlw	7
  1568   0013A6  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1569   0013A8  0E01               	movlw	1
  1570   0013AA  6E1D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1571   0013AC  2A1C               	incf	??_gpio_pin_direction_initialize^0,f,c
  1572   0013AE  EFDB  F009         	goto	u2804
  1573   0013B2                     u2805:
  1574   0013B2  90D8               	bcf	status,0,c
  1575   0013B4  361D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1576   0013B6                     u2804:
  1577   0013B6  2E1C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1578   0013B8  EFD9  F009         	goto	u2805
  1579   0013BC  501D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1580   0013BE  0AFF               	xorlw	255
  1581   0013C0  6E1E               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1582   0013C2  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1583   0013C6  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1584   0013CA  50DF               	movf	223,w,c
  1585   0013CC  0B07               	andlw	7
  1586   0013CE  6E1F               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1587   0013D0  501F               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1588   0013D2  0D02               	mullw	2
  1589   0013D4  0E29               	movlw	low _tris_registers
  1590   0013D6  24F3               	addwf	243,w,c
  1591   0013D8  6ED9               	movwf	fsr2l,c
  1592   0013DA  0E00               	movlw	high _tris_registers
  1593   0013DC  20F4               	addwfc	prodh,w,c
  1594   0013DE  6EDA               	movwf	fsr2h,c
  1595   0013E0  CFDE F020          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1596   0013E4  CFDD F021          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1597   0013E8  C020  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1598   0013EC  C021  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1599   0013F0  501E               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1600   0013F2  16DF               	andwf	indf2,f,c
  1601                           
  1602                           ;MCAL/hal_gpio.c: 34:                 break;
  1603   0013F4  EF4B  F00A         	goto	l4947
  1604   0013F8                     l4941:
  1605                           
  1606                           ;MCAL/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= ((uint8) 1<
      +                          <_pin_config->pin));
  1607   0013F8  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1608   0013FC  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1609   001400  30DF               	rrcf	223,w,c
  1610   001402  32E8               	rrcf	wreg,f,c
  1611   001404  32E8               	rrcf	wreg,f,c
  1612   001406  0B07               	andlw	7
  1613   001408  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1614   00140A  0E01               	movlw	1
  1615   00140C  6E1D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1616   00140E  2A1C               	incf	??_gpio_pin_direction_initialize^0,f,c
  1617   001410  EF0C  F00A         	goto	u2814
  1618   001414                     u2815:
  1619   001414  90D8               	bcf	status,0,c
  1620   001416  361D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1621   001418                     u2814:
  1622   001418  2E1C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1623   00141A  EF0A  F00A         	goto	u2815
  1624   00141E  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1625   001422  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1626   001426  50DF               	movf	223,w,c
  1627   001428  0B07               	andlw	7
  1628   00142A  6E1E               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1629   00142C  501E               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1630   00142E  0D02               	mullw	2
  1631   001430  0E29               	movlw	low _tris_registers
  1632   001432  24F3               	addwf	243,w,c
  1633   001434  6ED9               	movwf	fsr2l,c
  1634   001436  0E00               	movlw	high _tris_registers
  1635   001438  20F4               	addwfc	prodh,w,c
  1636   00143A  6EDA               	movwf	fsr2h,c
  1637   00143C  CFDE F01F          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1638   001440  CFDD F020          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1639   001444  C01F  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1640   001448  C020  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1641   00144C  501D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1642   00144E  12DF               	iorwf	indf2,f,c
  1643                           
  1644                           ;MCAL/hal_gpio.c: 37:                 break;
  1645   001450  EF4B  F00A         	goto	l4947
  1646   001454                     l4945:
  1647   001454  C01A  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1648   001458  C01B  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1649   00145C  BCDF               	btfsc	indf2,6,c
  1650   00145E  EF33  F00A         	goto	u2821
  1651   001462  EF36  F00A         	goto	u2820
  1652   001466                     u2821:
  1653   001466  0E01               	movlw	1
  1654   001468  EF37  F00A         	goto	u2830
  1655   00146C                     u2820:
  1656   00146C  0E00               	movlw	0
  1657   00146E                     u2830:
  1658   00146E  6E1C               	movwf	??_gpio_pin_direction_initialize^0,c
  1659   001470  6A1D               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1660                           
  1661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 1, Range of values is 0 to 0
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte            4     3 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668   001472  501D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1669   001474  0A00               	xorlw	0	; case 0
  1670   001476  B4D8               	btfsc	status,2,c
  1671   001478  EF40  F00A         	goto	l5501
  1672   00147C  EFC7  F009         	goto	l4937
  1673   001480                     l5501:
  1674                           
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 2, Range of values is 0 to 1
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte            7     4 (average)
  1680                           ;	Chosen strategy is simple_byte
  1681   001480  501C               	movf	??_gpio_pin_direction_initialize^0,w,c
  1682   001482  0A00               	xorlw	0	; case 0
  1683   001484  B4D8               	btfsc	status,2,c
  1684   001486  EFCB  F009         	goto	l4939
  1685   00148A  0A01               	xorlw	1	; case 1
  1686   00148C  B4D8               	btfsc	status,2,c
  1687   00148E  EFFC  F009         	goto	l4941
  1688   001492  EFC7  F009         	goto	l4937
  1689   001496                     l4947:
  1690                           
  1691                           ;MCAL/hal_gpio.c: 42:     return ret;
  1692   001496  5022               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1693   001498  0012               	return		;funcret
  1694   00149A                     __end_of_gpio_pin_direction_initialize:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function ___awmod *****************
  1698 ;; Defined at:
  1699 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  dividend        2   25[COMRAM] int 
  1702 ;;  divisor         2   27[COMRAM] int 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  sign            1   30[COMRAM] unsigned char 
  1705 ;;  counter         1   29[COMRAM] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2   25[COMRAM] int 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;Total ram usage:        6 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 7
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text5
  1730   001884                     __ptext5:
  1731                           	callstack 0
  1732   001884                     ___awmod:
  1733                           	callstack 23
  1734   001884  0E00               	movlw	0
  1735   001886  6E1F               	movwf	___awmod@sign^0,c
  1736   001888  BE1B               	btfsc	(___awmod@dividend+1)^0,7,c
  1737   00188A  EF4B  F00C         	goto	u2080
  1738   00188E  EF49  F00C         	goto	u2081
  1739   001892                     u2081:
  1740   001892  EF51  F00C         	goto	l4239
  1741   001896                     u2080:
  1742   001896  6C1A               	negf	___awmod@dividend^0,c
  1743   001898  1E1B               	comf	(___awmod@dividend+1)^0,f,c
  1744   00189A  B0D8               	btfsc	status,0,c
  1745   00189C  2A1B               	incf	(___awmod@dividend+1)^0,f,c
  1746   00189E  0E01               	movlw	1
  1747   0018A0  6E1F               	movwf	___awmod@sign^0,c
  1748   0018A2                     l4239:
  1749   0018A2  BE1D               	btfsc	(___awmod@divisor+1)^0,7,c
  1750   0018A4  EF58  F00C         	goto	u2090
  1751   0018A8  EF56  F00C         	goto	u2091
  1752   0018AC                     u2091:
  1753   0018AC  EF5C  F00C         	goto	l4243
  1754   0018B0                     u2090:
  1755   0018B0  6C1C               	negf	___awmod@divisor^0,c
  1756   0018B2  1E1D               	comf	(___awmod@divisor+1)^0,f,c
  1757   0018B4  B0D8               	btfsc	status,0,c
  1758   0018B6  2A1D               	incf	(___awmod@divisor+1)^0,f,c
  1759   0018B8                     l4243:
  1760   0018B8  501C               	movf	___awmod@divisor^0,w,c
  1761   0018BA  101D               	iorwf	(___awmod@divisor+1)^0,w,c
  1762   0018BC  B4D8               	btfsc	status,2,c
  1763   0018BE  EF63  F00C         	goto	u2101
  1764   0018C2  EF65  F00C         	goto	u2100
  1765   0018C6                     u2101:
  1766   0018C6  EF89  F00C         	goto	l4259
  1767   0018CA                     u2100:
  1768   0018CA  0E01               	movlw	1
  1769   0018CC  6E1E               	movwf	___awmod@counter^0,c
  1770   0018CE  EF6D  F00C         	goto	l4249
  1771   0018D2                     l4247:
  1772   0018D2  90D8               	bcf	status,0,c
  1773   0018D4  361C               	rlcf	___awmod@divisor^0,f,c
  1774   0018D6  361D               	rlcf	(___awmod@divisor+1)^0,f,c
  1775   0018D8  2A1E               	incf	___awmod@counter^0,f,c
  1776   0018DA                     l4249:
  1777   0018DA  AE1D               	btfss	(___awmod@divisor+1)^0,7,c
  1778   0018DC  EF72  F00C         	goto	u2111
  1779   0018E0  EF74  F00C         	goto	u2110
  1780   0018E4                     u2111:
  1781   0018E4  EF69  F00C         	goto	l4247
  1782   0018E8                     u2110:
  1783   0018E8                     l4251:
  1784   0018E8  501C               	movf	___awmod@divisor^0,w,c
  1785   0018EA  5C1A               	subwf	___awmod@dividend^0,w,c
  1786   0018EC  501D               	movf	(___awmod@divisor+1)^0,w,c
  1787   0018EE  581B               	subwfb	(___awmod@dividend+1)^0,w,c
  1788   0018F0  A0D8               	btfss	status,0,c
  1789   0018F2  EF7D  F00C         	goto	u2121
  1790   0018F6  EF7F  F00C         	goto	u2120
  1791   0018FA                     u2121:
  1792   0018FA  EF83  F00C         	goto	l4255
  1793   0018FE                     u2120:
  1794   0018FE  501C               	movf	___awmod@divisor^0,w,c
  1795   001900  5E1A               	subwf	___awmod@dividend^0,f,c
  1796   001902  501D               	movf	(___awmod@divisor+1)^0,w,c
  1797   001904  5A1B               	subwfb	(___awmod@dividend+1)^0,f,c
  1798   001906                     l4255:
  1799   001906  90D8               	bcf	status,0,c
  1800   001908  321D               	rrcf	(___awmod@divisor+1)^0,f,c
  1801   00190A  321C               	rrcf	___awmod@divisor^0,f,c
  1802   00190C  2E1E               	decfsz	___awmod@counter^0,f,c
  1803   00190E  EF74  F00C         	goto	l4251
  1804   001912                     l4259:
  1805   001912  501F               	movf	___awmod@sign^0,w,c
  1806   001914  B4D8               	btfsc	status,2,c
  1807   001916  EF8F  F00C         	goto	u2131
  1808   00191A  EF91  F00C         	goto	u2130
  1809   00191E                     u2131:
  1810   00191E  EF95  F00C         	goto	l4263
  1811   001922                     u2130:
  1812   001922  6C1A               	negf	___awmod@dividend^0,c
  1813   001924  1E1B               	comf	(___awmod@dividend+1)^0,f,c
  1814   001926  B0D8               	btfsc	status,0,c
  1815   001928  2A1B               	incf	(___awmod@dividend+1)^0,f,c
  1816   00192A                     l4263:
  1817   00192A  C01A  F01A         	movff	___awmod@dividend,?___awmod
  1818   00192E  C01B  F01B         	movff	___awmod@dividend+1,?___awmod+1
  1819   001932  0012               	return		;funcret
  1820   001934                     __end_of___awmod:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function ___awdiv *****************
  1824 ;; Defined at:
  1825 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  dividend        2   25[COMRAM] int 
  1828 ;;  divisor         2   27[COMRAM] int 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  quotient        2   31[COMRAM] int 
  1831 ;;  sign            1   30[COMRAM] unsigned char 
  1832 ;;  counter         1   29[COMRAM] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2   25[COMRAM] int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 7
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text6
  1857   0016FC                     __ptext6:
  1858                           	callstack 0
  1859   0016FC                     ___awdiv:
  1860                           	callstack 23
  1861   0016FC  0E00               	movlw	0
  1862   0016FE  6E1F               	movwf	___awdiv@sign^0,c
  1863   001700  BE1D               	btfsc	(___awdiv@divisor+1)^0,7,c
  1864   001702  EF87  F00B         	goto	u2020
  1865   001706  EF85  F00B         	goto	u2021
  1866   00170A                     u2021:
  1867   00170A  EF8D  F00B         	goto	l4195
  1868   00170E                     u2020:
  1869   00170E  6C1C               	negf	___awdiv@divisor^0,c
  1870   001710  1E1D               	comf	(___awdiv@divisor+1)^0,f,c
  1871   001712  B0D8               	btfsc	status,0,c
  1872   001714  2A1D               	incf	(___awdiv@divisor+1)^0,f,c
  1873   001716  0E01               	movlw	1
  1874   001718  6E1F               	movwf	___awdiv@sign^0,c
  1875   00171A                     l4195:
  1876   00171A  BE1B               	btfsc	(___awdiv@dividend+1)^0,7,c
  1877   00171C  EF94  F00B         	goto	u2030
  1878   001720  EF92  F00B         	goto	u2031
  1879   001724                     u2031:
  1880   001724  EF9A  F00B         	goto	l4201
  1881   001728                     u2030:
  1882   001728  6C1A               	negf	___awdiv@dividend^0,c
  1883   00172A  1E1B               	comf	(___awdiv@dividend+1)^0,f,c
  1884   00172C  B0D8               	btfsc	status,0,c
  1885   00172E  2A1B               	incf	(___awdiv@dividend+1)^0,f,c
  1886   001730  0E01               	movlw	1
  1887   001732  1A1F               	xorwf	___awdiv@sign^0,f,c
  1888   001734                     l4201:
  1889   001734  0E00               	movlw	0
  1890   001736  6E21               	movwf	(___awdiv@quotient+1)^0,c
  1891   001738  0E00               	movlw	0
  1892   00173A  6E20               	movwf	___awdiv@quotient^0,c
  1893   00173C  501C               	movf	___awdiv@divisor^0,w,c
  1894   00173E  101D               	iorwf	(___awdiv@divisor+1)^0,w,c
  1895   001740  B4D8               	btfsc	status,2,c
  1896   001742  EFA5  F00B         	goto	u2041
  1897   001746  EFA7  F00B         	goto	u2040
  1898   00174A                     u2041:
  1899   00174A  EFCF  F00B         	goto	l4223
  1900   00174E                     u2040:
  1901   00174E  0E01               	movlw	1
  1902   001750  6E1E               	movwf	___awdiv@counter^0,c
  1903   001752  EFAF  F00B         	goto	l4209
  1904   001756                     l4207:
  1905   001756  90D8               	bcf	status,0,c
  1906   001758  361C               	rlcf	___awdiv@divisor^0,f,c
  1907   00175A  361D               	rlcf	(___awdiv@divisor+1)^0,f,c
  1908   00175C  2A1E               	incf	___awdiv@counter^0,f,c
  1909   00175E                     l4209:
  1910   00175E  AE1D               	btfss	(___awdiv@divisor+1)^0,7,c
  1911   001760  EFB4  F00B         	goto	u2051
  1912   001764  EFB6  F00B         	goto	u2050
  1913   001768                     u2051:
  1914   001768  EFAB  F00B         	goto	l4207
  1915   00176C                     u2050:
  1916   00176C                     l4211:
  1917   00176C  90D8               	bcf	status,0,c
  1918   00176E  3620               	rlcf	___awdiv@quotient^0,f,c
  1919   001770  3621               	rlcf	(___awdiv@quotient+1)^0,f,c
  1920   001772  501C               	movf	___awdiv@divisor^0,w,c
  1921   001774  5C1A               	subwf	___awdiv@dividend^0,w,c
  1922   001776  501D               	movf	(___awdiv@divisor+1)^0,w,c
  1923   001778  581B               	subwfb	(___awdiv@dividend+1)^0,w,c
  1924   00177A  A0D8               	btfss	status,0,c
  1925   00177C  EFC2  F00B         	goto	u2061
  1926   001780  EFC4  F00B         	goto	u2060
  1927   001784                     u2061:
  1928   001784  EFC9  F00B         	goto	l4219
  1929   001788                     u2060:
  1930   001788  501C               	movf	___awdiv@divisor^0,w,c
  1931   00178A  5E1A               	subwf	___awdiv@dividend^0,f,c
  1932   00178C  501D               	movf	(___awdiv@divisor+1)^0,w,c
  1933   00178E  5A1B               	subwfb	(___awdiv@dividend+1)^0,f,c
  1934   001790  8020               	bsf	___awdiv@quotient^0,0,c
  1935   001792                     l4219:
  1936   001792  90D8               	bcf	status,0,c
  1937   001794  321D               	rrcf	(___awdiv@divisor+1)^0,f,c
  1938   001796  321C               	rrcf	___awdiv@divisor^0,f,c
  1939   001798  2E1E               	decfsz	___awdiv@counter^0,f,c
  1940   00179A  EFB6  F00B         	goto	l4211
  1941   00179E                     l4223:
  1942   00179E  501F               	movf	___awdiv@sign^0,w,c
  1943   0017A0  B4D8               	btfsc	status,2,c
  1944   0017A2  EFD5  F00B         	goto	u2071
  1945   0017A6  EFD7  F00B         	goto	u2070
  1946   0017AA                     u2071:
  1947   0017AA  EFDB  F00B         	goto	l4227
  1948   0017AE                     u2070:
  1949   0017AE  6C20               	negf	___awdiv@quotient^0,c
  1950   0017B0  1E21               	comf	(___awdiv@quotient+1)^0,f,c
  1951   0017B2  B0D8               	btfsc	status,0,c
  1952   0017B4  2A21               	incf	(___awdiv@quotient+1)^0,f,c
  1953   0017B6                     l4227:
  1954   0017B6  C020  F01A         	movff	___awdiv@quotient,?___awdiv
  1955   0017BA  C021  F01B         	movff	___awdiv@quotient+1,?___awdiv+1
  1956   0017BE  0012               	return		;funcret
  1957   0017C0                     __end_of___awdiv:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _Set_RTC_Date_Time *****************
  1961 ;; Defined at:
  1962 ;;		line 4 in file "Modules/RTC/RTC.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  6    0[BANK0 ] struct .
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1976 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;Total ram usage:        6 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 11
  1983 ;; This function calls:
  1984 ;;		_I2C_Read1ByteRegister
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text7
  1991   001FEE                     __ptext7:
  1992                           	callstack 0
  1993   001FEE                     _Set_RTC_Date_Time:
  1994                           	callstack 19
  1995   001FEE                     
  1996                           ;Modules/RTC/RTC.c: 5:     rtc.Seconds = I2C_Read1ByteRegister(0xD0,0x00);
  1997   001FEE  0E00               	movlw	0
  1998   001FF0  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  1999   001FF2  0ED0               	movlw	208
  2000   001FF4  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2001   001FF8  6E39               	movwf	_rtc^0,c
  2002                           
  2003                           ;Modules/RTC/RTC.c: 6:     rtc.Minutes = I2C_Read1ByteRegister(0xD0,0x01);
  2004   001FFA  0E01               	movlw	1
  2005   001FFC  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  2006   001FFE  0ED0               	movlw	208
  2007   002000  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2008   002004  6E3A               	movwf	(_rtc+1)^0,c
  2009                           
  2010                           ;Modules/RTC/RTC.c: 7:     rtc.Hours = I2C_Read1ByteRegister(0xD0,0x02);
  2011   002006  0E02               	movlw	2
  2012   002008  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  2013   00200A  0ED0               	movlw	208
  2014   00200C  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2015   002010  6E3B               	movwf	(_rtc+2)^0,c
  2016                           
  2017                           ;Modules/RTC/RTC.c: 8:     rtc.Day = I2C_Read1ByteRegister(0xD0,0x04);
  2018   002012  0E04               	movlw	4
  2019   002014  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  2020   002016  0ED0               	movlw	208
  2021   002018  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2022   00201C  6E3C               	movwf	(_rtc+3)^0,c
  2023                           
  2024                           ;Modules/RTC/RTC.c: 9:     rtc.Month = I2C_Read1ByteRegister(0xD0,0x05);
  2025   00201E  0E05               	movlw	5
  2026   002020  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  2027   002022  0ED0               	movlw	208
  2028   002024  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2029   002028  6E3D               	movwf	(_rtc+4)^0,c
  2030                           
  2031                           ;Modules/RTC/RTC.c: 10:     rtc.Year = I2C_Read1ByteRegister(0xD0,0x06);
  2032   00202A  0E06               	movlw	6
  2033   00202C  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  2034   00202E  0ED0               	movlw	208
  2035   002030  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2036   002034  6E3E               	movwf	(_rtc+5)^0,c
  2037   002036                     
  2038                           ;Modules/RTC/RTC.c: 11:     return rtc;
  2039   002036  EE20  F039         	lfsr	2,_rtc
  2040   00203A  EE00  F0A4         	lfsr	0,?_Set_RTC_Date_Time
  2041   00203E  0E05               	movlw	5
  2042   002040                     u2961:
  2043   002040  CFDB FFEB          	movff	plusw2,plusw0
  2044   002044  06E8               	decf	wreg,f,c
  2045   002046  E2FC               	bc	u2961
  2046   002048  0012               	return		;funcret
  2047   00204A                     __end_of_Set_RTC_Date_Time:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _SYSTEM_Initialize *****************
  2051 ;; Defined at:
  2052 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 9
  2073 ;; This function calls:
  2074 ;;		_EUSART_Initialize
  2075 ;;		_I2C_Initialize
  2076 ;;		_INTERRUPT_Initialize
  2077 ;;		_OSCILLATOR_Initialize
  2078 ;;		_PIN_MANAGER_Initialize
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text8
  2085   00238A                     __ptext8:
  2086                           	callstack 0
  2087   00238A                     _SYSTEM_Initialize:
  2088                           	callstack 21
  2089   00238A                     
  2090                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2091   00238A  EC52  F012         	call	_INTERRUPT_Initialize	;wreg free
  2092   00238E                     
  2093                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2094   00238E  ECE5  F011         	call	_I2C_Initialize	;wreg free
  2095   002392                     
  2096                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2097   002392  ECCE  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2098   002396                     
  2099                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2100   002396  EC39  F012         	call	_OSCILLATOR_Initialize	;wreg free
  2101   00239A                     
  2102                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2103   00239A  EC92  F010         	call	_EUSART_Initialize	;wreg free
  2104   00239E  0012               	return		;funcret
  2105   0023A0                     __end_of_SYSTEM_Initialize:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _PIN_MANAGER_Initialize *****************
  2109 ;; Defined at:
  2110 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 7
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_SYSTEM_Initialize
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text9
  2139   00219C                     __ptext9:
  2140                           	callstack 0
  2141   00219C                     _PIN_MANAGER_Initialize:
  2142                           	callstack 22
  2143   00219C                     
  2144                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2145   00219C  0E00               	movlw	0
  2146   00219E  6E8D               	movwf	141,c	;volatile
  2147                           
  2148                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2149   0021A0  0E00               	movlw	0
  2150   0021A2  6E8C               	movwf	140,c	;volatile
  2151                           
  2152                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2153   0021A4  0E00               	movlw	0
  2154   0021A6  6E89               	movwf	137,c	;volatile
  2155                           
  2156                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2157   0021A8  0E00               	movlw	0
  2158   0021AA  6E8A               	movwf	138,c	;volatile
  2159                           
  2160                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2161   0021AC  0E00               	movlw	0
  2162   0021AE  6E8B               	movwf	139,c	;volatile
  2163                           
  2164                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2165   0021B0  0E07               	movlw	7
  2166   0021B2  6E96               	movwf	150,c	;volatile
  2167   0021B4                     
  2168                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2169   0021B4  6892               	setf	146,c	;volatile
  2170   0021B6                     
  2171                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2172   0021B6  6893               	setf	147,c	;volatile
  2173                           
  2174                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2175   0021B8  0EBF               	movlw	191
  2176   0021BA  6E94               	movwf	148,c	;volatile
  2177   0021BC                     
  2178                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2179   0021BC  6895               	setf	149,c	;volatile
  2180   0021BE                     
  2181                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  2182   0021BE  687E               	setf	126,c	;volatile
  2183                           
  2184                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  2185   0021C0  0E1F               	movlw	31
  2186   0021C2  6E7F               	movwf	127,c	;volatile
  2187                           
  2188                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  2189   0021C4  0E00               	movlw	0
  2190   0021C6  6E7C               	movwf	124,c	;volatile
  2191   0021C8                     
  2192                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  2193   0021C8  8EF1               	bsf	241,7,c	;volatile
  2194   0021CA  0012               	return		;funcret
  2195   0021CC                     __end_of_PIN_MANAGER_Initialize:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _OSCILLATOR_Initialize *****************
  2199 ;; Defined at:
  2200 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 7
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_SYSTEM_Initialize
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text10
  2229   002472                     __ptext10:
  2230                           	callstack 0
  2231   002472                     _OSCILLATOR_Initialize:
  2232                           	callstack 22
  2233   002472                     
  2234                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x40;
  2235   002472  0E40               	movlw	64
  2236   002474  6ED3               	movwf	211,c	;volatile
  2237                           
  2238                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2239   002476  0E00               	movlw	0
  2240   002478  6E9B               	movwf	155,c	;volatile
  2241   00247A  0012               	return		;funcret
  2242   00247C                     __end_of_OSCILLATOR_Initialize:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _INTERRUPT_Initialize *****************
  2246 ;; Defined at:
  2247 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		None
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 7
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_SYSTEM_Initialize
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text11
  2276   0024A4                     __ptext11:
  2277                           	callstack 0
  2278   0024A4                     _INTERRUPT_Initialize:
  2279                           	callstack 22
  2280   0024A4                     
  2281                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  2282   0024A4  8ED0               	bsf	208,7,c	;volatile
  2283                           
  2284                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR2bits.BCLIP = 1;
  2285   0024A6  86A2               	bsf	162,3,c	;volatile
  2286                           
  2287                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SSPIP = 1;
  2288   0024A8  869F               	bsf	159,3,c	;volatile
  2289   0024AA  0012               	return		;funcret
  2290   0024AC                     __end_of_INTERRUPT_Initialize:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function _I2C_Initialize *****************
  2294 ;; Defined at:
  2295 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 7
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_SYSTEM_Initialize
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text12
  2324   0023CA                     __ptext12:
  2325                           	callstack 0
  2326   0023CA                     _I2C_Initialize:
  2327                           	callstack 22
  2328   0023CA                     
  2329                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  2330   0023CA  0E80               	movlw	128
  2331   0023CC  6EC7               	movwf	199,c	;volatile
  2332                           
  2333                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2334   0023CE  0E08               	movlw	8
  2335   0023D0  6EC6               	movwf	198,c	;volatile
  2336                           
  2337                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2338   0023D2  0E00               	movlw	0
  2339   0023D4  6EC5               	movwf	197,c	;volatile
  2340                           
  2341                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  2342   0023D6  0E27               	movlw	39
  2343   0023D8  6EC8               	movwf	200,c	;volatile
  2344   0023DA                     
  2345                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2346   0023DA  9AC6               	bcf	198,5,c	;volatile
  2347   0023DC  0012               	return		;funcret
  2348   0023DE                     __end_of_I2C_Initialize:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _EUSART_Initialize *****************
  2352 ;; Defined at:
  2353 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 8
  2374 ;; This function calls:
  2375 ;;		_EUSART_SetErrorHandler
  2376 ;;		_EUSART_SetFramingErrorHandler
  2377 ;;		_EUSART_SetOverrunErrorHandler
  2378 ;; This function is called by:
  2379 ;;		_SYSTEM_Initialize
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text13
  2384   002124                     __ptext13:
  2385                           	callstack 0
  2386   002124                     _EUSART_Initialize:
  2387                           	callstack 21
  2388   002124                     
  2389                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2390   002124  0E08               	movlw	8
  2391   002126  6EB8               	movwf	184,c	;volatile
  2392                           
  2393                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2394   002128  0E90               	movlw	144
  2395   00212A  6EAB               	movwf	171,c	;volatile
  2396                           
  2397                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2398   00212C  0E24               	movlw	36
  2399   00212E  6EAC               	movwf	172,c	;volatile
  2400                           
  2401                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xA0;
  2402   002130  0EA0               	movlw	160
  2403   002132  6EAF               	movwf	175,c	;volatile
  2404                           
  2405                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  2406   002134  0E01               	movlw	1
  2407   002136  6EB0               	movwf	176,c	;volatile
  2408   002138                     
  2409                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2410   002138  0E00               	movlw	0
  2411   00213A  6E1A               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  2412   00213C  0E00               	movlw	0
  2413   00213E  6E1B               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  2414   002140  EC43  F012         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2415   002144                     
  2416                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2417   002144  0E00               	movlw	0
  2418   002146  6E1A               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  2419   002148  0E00               	movlw	0
  2420   00214A  6E1B               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2421   00214C  EC3E  F012         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2422   002150                     
  2423                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2424   002150  0E00               	movlw	0
  2425   002152  6E1A               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  2426   002154  0E00               	movlw	0
  2427   002156  6E1B               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  2428   002158  EC48  F012         	call	_EUSART_SetErrorHandler	;wreg free
  2429   00215C                     
  2430                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2431   00215C  0E00               	movlw	0
  2432   00215E  6E45               	movwf	_eusartRxLastError^0,c	;volatile
  2433   002160  0012               	return		;funcret
  2434   002162                     __end_of_EUSART_Initialize:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2438 ;; Defined at:
  2439 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  interruptHan    2   25[COMRAM] PTR FTN()void 
  2442 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;Total ram usage:        2 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 7
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_EUSART_Initialize
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text14
  2469   00247C                     __ptext14:
  2470                           	callstack 0
  2471   00247C                     _EUSART_SetOverrunErrorHandler:
  2472                           	callstack 21
  2473   00247C                     
  2474                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  2475   00247C  C01A  F0D3         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2476   002480  C01B  F0D4         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2477   002484  0012               	return		;funcret
  2478   002486                     __end_of_EUSART_SetOverrunErrorHandler:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2482 ;; Defined at:
  2483 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  interruptHan    2   25[COMRAM] PTR FTN()void 
  2486 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 7
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_EUSART_Initialize
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text15
  2513   002486                     __ptext15:
  2514                           	callstack 0
  2515   002486                     _EUSART_SetFramingErrorHandler:
  2516                           	callstack 21
  2517   002486                     
  2518                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  2519   002486  C01A  F0D5         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2520   00248A  C01B  F0D6         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2521   00248E  0012               	return		;funcret
  2522   002490                     __end_of_EUSART_SetFramingErrorHandler:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _EUSART_SetErrorHandler *****************
  2526 ;; Defined at:
  2527 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  interruptHan    2   25[COMRAM] PTR FTN()void 
  2530 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        2 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 7
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_EUSART_Initialize
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text16
  2557   002490                     __ptext16:
  2558                           	callstack 0
  2559   002490                     _EUSART_SetErrorHandler:
  2560                           	callstack 21
  2561   002490                     
  2562                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  2563   002490  C01A  F0D1         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2564   002494  C01B  F0D2         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2565   002498  0012               	return		;funcret
  2566   00249A                     __end_of_EUSART_SetErrorHandler:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _Read_Temprature *****************
  2570 ;; Defined at:
  2571 ;;		line 2 in file "Modules/Temprature_Sensor/Temp_Sensor.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  address         1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  address         1   37[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      unsigned char 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 11
  2592 ;; This function calls:
  2593 ;;		_I2C_Read1ByteRegister
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text17
  2600   002424                     __ptext17:
  2601                           	callstack 0
  2602   002424                     _Read_Temprature:
  2603                           	callstack 19
  2604                           
  2605                           ;incstack = 0
  2606                           ;Read_Temprature@address stored from wreg
  2607   002424  6E26               	movwf	Read_Temprature@address^0,c
  2608   002426                     
  2609                           ;Modules/Temprature_Sensor/Temp_Sensor.c: 3:     return I2C_Read1ByteRegister(address,0x
      +                          00);
  2610   002426  0E00               	movlw	0
  2611   002428  6E23               	movwf	I2C_Read1ByteRegister@reg^0,c
  2612   00242A  5026               	movf	Read_Temprature@address^0,w,c
  2613   00242C  ECBB  F00E         	call	_I2C_Read1ByteRegister
  2614   002430  0012               	return		;funcret
  2615   002432                     __end_of_Read_Temprature:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _Print_RTC_Date_Time *****************
  2619 ;; Defined at:
  2620 ;;		line 13 in file "Modules/RTC/RTC.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  rtc_obj         6   13[BANK0 ] struct .
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  i               2   21[BANK0 ] int 
  2625 ;;  i               2   19[BANK0 ] int 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:       10 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 11
  2642 ;; This function calls:
  2643 ;;		_EUART_Send_String
  2644 ;;		_EUSART_Write
  2645 ;;		_lcd_4bit_send_char_data
  2646 ;;		_lcd_4bit_send_string
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text18
  2653   00105E                     __ptext18:
  2654                           	callstack 0
  2655   00105E                     _Print_RTC_Date_Time:
  2656                           	callstack 19
  2657   00105E                     
  2658                           ;Modules/RTC/RTC.c: 14:     date_time[0] = (rtc_obj.Hours>>4)+'0';
  2659   00105E  0100               	movlb	0	; () banked
  2660   001060  39B3               	swapf	(Print_RTC_Date_Time@rtc_obj+2)& (0+255),w,b
  2661   001062  0B0F               	andlw	15
  2662   001064  0F30               	addlw	48
  2663   001066  6F84               	movwf	_date_time& (0+255),b
  2664                           
  2665                           ;Modules/RTC/RTC.c: 15:     date_time[1] = (rtc_obj.Hours&0x0F)+'0';
  2666   001068  51B3               	movf	(Print_RTC_Date_Time@rtc_obj+2)& (0+255),w,b
  2667   00106A  0B0F               	andlw	15
  2668   00106C  0F30               	addlw	48
  2669   00106E  6F85               	movwf	(_date_time+1)& (0+255),b
  2670   001070                     
  2671                           ; BSR set to: 0
  2672                           ;Modules/RTC/RTC.c: 16:     date_time[2] = ':';
  2673   001070  0E3A               	movlw	58
  2674   001072  6F86               	movwf	(_date_time+2)& (0+255),b
  2675   001074                     
  2676                           ; BSR set to: 0
  2677                           ;Modules/RTC/RTC.c: 17:     date_time[3] = (rtc_obj.Minutes>>4)+'0';
  2678   001074  39B2               	swapf	(Print_RTC_Date_Time@rtc_obj+1)& (0+255),w,b
  2679   001076  0B0F               	andlw	15
  2680   001078  0F30               	addlw	48
  2681   00107A  6F87               	movwf	(_date_time+3)& (0+255),b
  2682   00107C                     
  2683                           ; BSR set to: 0
  2684                           ;Modules/RTC/RTC.c: 18:     date_time[4] = (rtc_obj.Minutes&0x0F)+'0';
  2685   00107C  51B2               	movf	(Print_RTC_Date_Time@rtc_obj+1)& (0+255),w,b
  2686   00107E  0B0F               	andlw	15
  2687   001080  0F30               	addlw	48
  2688   001082  6F88               	movwf	(_date_time+4)& (0+255),b
  2689   001084                     
  2690                           ; BSR set to: 0
  2691                           ;Modules/RTC/RTC.c: 19:     date_time[5] = ':';
  2692   001084  0E3A               	movlw	58
  2693   001086  6F89               	movwf	(_date_time+5)& (0+255),b
  2694                           
  2695                           ;Modules/RTC/RTC.c: 20:     date_time[6] = (rtc_obj.Seconds>>4)+'0';
  2696   001088  39B1               	swapf	Print_RTC_Date_Time@rtc_obj& (0+255),w,b
  2697   00108A  0B0F               	andlw	15
  2698   00108C  0F30               	addlw	48
  2699   00108E  6F8A               	movwf	(_date_time+6)& (0+255),b
  2700                           
  2701                           ;Modules/RTC/RTC.c: 21:     date_time[7] = (rtc_obj.Seconds&0x0F)+'0';
  2702   001090  51B1               	movf	Print_RTC_Date_Time@rtc_obj& (0+255),w,b
  2703   001092  0B0F               	andlw	15
  2704   001094  0F30               	addlw	48
  2705   001096  6F8B               	movwf	(_date_time+7)& (0+255),b
  2706   001098                     
  2707                           ; BSR set to: 0
  2708                           ;Modules/RTC/RTC.c: 22:     date_time[9] = '\r';
  2709   001098  0E0D               	movlw	13
  2710   00109A  6F8D               	movwf	(_date_time+9)& (0+255),b
  2711   00109C                     
  2712                           ; BSR set to: 0
  2713                           ;Modules/RTC/RTC.c: 23:     date_time[10] = (rtc_obj.Day>>4)+'0';
  2714   00109C  39B4               	swapf	(Print_RTC_Date_Time@rtc_obj+3)& (0+255),w,b
  2715   00109E  0B0F               	andlw	15
  2716   0010A0  0F30               	addlw	48
  2717   0010A2  6F8E               	movwf	(_date_time+10)& (0+255),b
  2718   0010A4                     
  2719                           ; BSR set to: 0
  2720                           ;Modules/RTC/RTC.c: 24:     date_time[11] = (rtc_obj.Day&0x0F)+'0';
  2721   0010A4  51B4               	movf	(Print_RTC_Date_Time@rtc_obj+3)& (0+255),w,b
  2722   0010A6  0B0F               	andlw	15
  2723   0010A8  0F30               	addlw	48
  2724   0010AA  6F8F               	movwf	(_date_time+11)& (0+255),b
  2725   0010AC                     
  2726                           ; BSR set to: 0
  2727                           ;Modules/RTC/RTC.c: 25:     date_time[12] = ':';
  2728   0010AC  0E3A               	movlw	58
  2729   0010AE  6F90               	movwf	(_date_time+12)& (0+255),b
  2730                           
  2731                           ;Modules/RTC/RTC.c: 26:     date_time[13] = (rtc_obj.Month>>4)+'0';
  2732   0010B0  39B5               	swapf	(Print_RTC_Date_Time@rtc_obj+4)& (0+255),w,b
  2733   0010B2  0B0F               	andlw	15
  2734   0010B4  0F30               	addlw	48
  2735   0010B6  6F91               	movwf	(_date_time+13)& (0+255),b
  2736                           
  2737                           ;Modules/RTC/RTC.c: 27:     date_time[14] = (rtc_obj.Month&0x0F)+'0';
  2738   0010B8  51B5               	movf	(Print_RTC_Date_Time@rtc_obj+4)& (0+255),w,b
  2739   0010BA  0B0F               	andlw	15
  2740   0010BC  0F30               	addlw	48
  2741   0010BE  6F92               	movwf	(_date_time+14)& (0+255),b
  2742   0010C0                     
  2743                           ; BSR set to: 0
  2744                           ;Modules/RTC/RTC.c: 28:     date_time[15] = ':';
  2745   0010C0  0E3A               	movlw	58
  2746   0010C2  6F93               	movwf	(_date_time+15)& (0+255),b
  2747   0010C4                     
  2748                           ; BSR set to: 0
  2749                           ;Modules/RTC/RTC.c: 29:     date_time[16] = (rtc_obj.Year>>4)+'0';
  2750   0010C4  39B6               	swapf	(Print_RTC_Date_Time@rtc_obj+5)& (0+255),w,b
  2751   0010C6  0B0F               	andlw	15
  2752   0010C8  0F30               	addlw	48
  2753   0010CA  6F94               	movwf	(_date_time+16)& (0+255),b
  2754   0010CC                     
  2755                           ; BSR set to: 0
  2756                           ;Modules/RTC/RTC.c: 30:     date_time[17] = (rtc_obj.Year&0x0F)+'0';
  2757   0010CC  51B6               	movf	(Print_RTC_Date_Time@rtc_obj+5)& (0+255),w,b
  2758   0010CE  0B0F               	andlw	15
  2759   0010D0  0F30               	addlw	48
  2760   0010D2  6F95               	movwf	(_date_time+17)& (0+255),b
  2761   0010D4                     
  2762                           ; BSR set to: 0
  2763                           ;Modules/RTC/RTC.c: 31:     date_time[18] = '\r';
  2764   0010D4  0E0D               	movlw	13
  2765   0010D6  6F96               	movwf	(_date_time+18)& (0+255),b
  2766   0010D8                     
  2767                           ; BSR set to: 0
  2768                           ;Modules/RTC/RTC.c: 32:     EUART_Send_String("Time: ");
  2769   0010D8  0E4C               	movlw	low STR_5
  2770   0010DA  6E1B               	movwf	EUART_Send_String@text^0,c
  2771   0010DC  0E10               	movlw	high STR_5
  2772   0010DE  6E1C               	movwf	(EUART_Send_String@text+1)^0,c
  2773   0010E0  ECB1  F010         	call	_EUART_Send_String	;wreg free
  2774   0010E4                     
  2775                           ;Modules/RTC/RTC.c: 33:     lcd_4bit_send_string(&lcd_obj,"Time: ");
  2776   0010E4  0E33               	movlw	low _lcd_obj
  2777   0010E6  0100               	movlb	0	; () banked
  2778   0010E8  6FAD               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  2779   0010EA  0E00               	movlw	high _lcd_obj
  2780   0010EC  6FAE               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  2781   0010EE  0E4C               	movlw	low STR_5
  2782   0010F0  6FAF               	movwf	lcd_4bit_send_string@str& (0+255),b
  2783   0010F2  0E10               	movlw	high STR_5
  2784   0010F4  6FB0               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  2785   0010F6  EC25  F010         	call	_lcd_4bit_send_string	;wreg free
  2786   0010FA                     
  2787                           ;Modules/RTC/RTC.c: 34:     for(int i=0;i<10;i++){
  2788   0010FA  0E00               	movlw	0
  2789   0010FC  0100               	movlb	0	; () banked
  2790   0010FE  6FB8               	movwf	(Print_RTC_Date_Time@i+1)& (0+255),b
  2791   001100  0E00               	movlw	0
  2792   001102  6FB7               	movwf	Print_RTC_Date_Time@i& (0+255),b
  2793   001104                     l5117:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;Modules/RTC/RTC.c: 35:         EUSART_Write(date_time[i]);
  2797   001104  0E84               	movlw	low _date_time
  2798   001106  25B7               	addwf	Print_RTC_Date_Time@i& (0+255),w,b
  2799   001108  6ED9               	movwf	fsr2l,c
  2800   00110A  0E00               	movlw	high _date_time
  2801   00110C  21B8               	addwfc	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  2802   00110E  6EDA               	movwf	fsr2h,c
  2803   001110  50DF               	movf	indf2,w,c
  2804   001112  ECD0  F011         	call	_EUSART_Write
  2805   001116                     
  2806                           ;Modules/RTC/RTC.c: 36:         lcd_4bit_send_char_data(&lcd_obj,date_time[i]);
  2807   001116  0E33               	movlw	low _lcd_obj
  2808   001118  0100               	movlb	0	; () banked
  2809   00111A  6FA8               	movwf	lcd_4bit_send_char_data@lcd& (0+255),b
  2810   00111C  0E00               	movlw	high _lcd_obj
  2811   00111E  6FA9               	movwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),b
  2812   001120  0E84               	movlw	low _date_time
  2813   001122  25B7               	addwf	Print_RTC_Date_Time@i& (0+255),w,b
  2814   001124  6ED9               	movwf	fsr2l,c
  2815   001126  0E00               	movlw	high _date_time
  2816   001128  21B8               	addwfc	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  2817   00112A  6EDA               	movwf	fsr2h,c
  2818   00112C  50DF               	movf	indf2,w,c
  2819   00112E  6FAA               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  2820   001130  ECC4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
  2821   001134                     
  2822                           ;Modules/RTC/RTC.c: 37:     }
  2823   001134  0100               	movlb	0	; () banked
  2824   001136  4BB7               	infsnz	Print_RTC_Date_Time@i& (0+255),f,b
  2825   001138  2BB8               	incf	(Print_RTC_Date_Time@i+1)& (0+255),f,b
  2826   00113A                     
  2827                           ; BSR set to: 0
  2828   00113A  BFB8               	btfsc	(Print_RTC_Date_Time@i+1)& (0+255),7,b
  2829   00113C  EFA9  F008         	goto	u2971
  2830   001140  51B8               	movf	(Print_RTC_Date_Time@i+1)& (0+255),w,b
  2831   001142  E109               	bnz	u2970
  2832   001144  0E0A               	movlw	10
  2833   001146  5DB7               	subwf	Print_RTC_Date_Time@i& (0+255),w,b
  2834   001148  A0D8               	btfss	status,0,c
  2835   00114A  EFA9  F008         	goto	u2971
  2836   00114E  EFAB  F008         	goto	u2970
  2837   001152                     u2971:
  2838   001152  EF82  F008         	goto	l5117
  2839   001156                     u2970:
  2840   001156                     
  2841                           ; BSR set to: 0
  2842                           ;Modules/RTC/RTC.c: 38:     EUART_Send_String("Date: ");
  2843   001156  0E53               	movlw	low STR_7
  2844   001158  6E1B               	movwf	EUART_Send_String@text^0,c
  2845   00115A  0E10               	movlw	high STR_7
  2846   00115C  6E1C               	movwf	(EUART_Send_String@text+1)^0,c
  2847   00115E  ECB1  F010         	call	_EUART_Send_String	;wreg free
  2848   001162                     
  2849                           ;Modules/RTC/RTC.c: 39:     lcd_4bit_send_string(&lcd_obj,"Date: ");
  2850   001162  0E33               	movlw	low _lcd_obj
  2851   001164  0100               	movlb	0	; () banked
  2852   001166  6FAD               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  2853   001168  0E00               	movlw	high _lcd_obj
  2854   00116A  6FAE               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  2855   00116C  0E53               	movlw	low STR_7
  2856   00116E  6FAF               	movwf	lcd_4bit_send_string@str& (0+255),b
  2857   001170  0E10               	movlw	high STR_7
  2858   001172  6FB0               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  2859   001174  EC25  F010         	call	_lcd_4bit_send_string	;wreg free
  2860   001178                     
  2861                           ;Modules/RTC/RTC.c: 40:     for(int i=10;i<19;i++){
  2862   001178  0E00               	movlw	0
  2863   00117A  0100               	movlb	0	; () banked
  2864   00117C  6FBA               	movwf	(Print_RTC_Date_Time@i_2230+1)& (0+255),b
  2865   00117E  0E0A               	movlw	10
  2866   001180  6FB9               	movwf	Print_RTC_Date_Time@i_2230& (0+255),b
  2867   001182                     l5135:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;Modules/RTC/RTC.c: 41:         EUSART_Write(date_time[i]);
  2871   001182  0E84               	movlw	low _date_time
  2872   001184  25B9               	addwf	Print_RTC_Date_Time@i_2230& (0+255),w,b
  2873   001186  6ED9               	movwf	fsr2l,c
  2874   001188  0E00               	movlw	high _date_time
  2875   00118A  21BA               	addwfc	(Print_RTC_Date_Time@i_2230+1)& (0+255),w,b
  2876   00118C  6EDA               	movwf	fsr2h,c
  2877   00118E  50DF               	movf	indf2,w,c
  2878   001190  ECD0  F011         	call	_EUSART_Write
  2879   001194                     
  2880                           ;Modules/RTC/RTC.c: 42:         lcd_4bit_send_char_data(&lcd_obj,date_time[i]);
  2881   001194  0E33               	movlw	low _lcd_obj
  2882   001196  0100               	movlb	0	; () banked
  2883   001198  6FA8               	movwf	lcd_4bit_send_char_data@lcd& (0+255),b
  2884   00119A  0E00               	movlw	high _lcd_obj
  2885   00119C  6FA9               	movwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),b
  2886   00119E  0E84               	movlw	low _date_time
  2887   0011A0  25B9               	addwf	Print_RTC_Date_Time@i_2230& (0+255),w,b
  2888   0011A2  6ED9               	movwf	fsr2l,c
  2889   0011A4  0E00               	movlw	high _date_time
  2890   0011A6  21BA               	addwfc	(Print_RTC_Date_Time@i_2230+1)& (0+255),w,b
  2891   0011A8  6EDA               	movwf	fsr2h,c
  2892   0011AA  50DF               	movf	indf2,w,c
  2893   0011AC  6FAA               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  2894   0011AE  ECC4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
  2895   0011B2                     
  2896                           ;Modules/RTC/RTC.c: 43:     }
  2897   0011B2  0100               	movlb	0	; () banked
  2898   0011B4  4BB9               	infsnz	Print_RTC_Date_Time@i_2230& (0+255),f,b
  2899   0011B6  2BBA               	incf	(Print_RTC_Date_Time@i_2230+1)& (0+255),f,b
  2900   0011B8                     
  2901                           ; BSR set to: 0
  2902   0011B8  BFBA               	btfsc	(Print_RTC_Date_Time@i_2230+1)& (0+255),7,b
  2903   0011BA  EFE8  F008         	goto	u2981
  2904   0011BE  51BA               	movf	(Print_RTC_Date_Time@i_2230+1)& (0+255),w,b
  2905   0011C0  E109               	bnz	u2980
  2906   0011C2  0E13               	movlw	19
  2907   0011C4  5DB9               	subwf	Print_RTC_Date_Time@i_2230& (0+255),w,b
  2908   0011C6  A0D8               	btfss	status,0,c
  2909   0011C8  EFE8  F008         	goto	u2981
  2910   0011CC  EFEA  F008         	goto	u2980
  2911   0011D0                     u2981:
  2912   0011D0  EFC1  F008         	goto	l5135
  2913   0011D4                     u2980:
  2914   0011D4                     
  2915                           ; BSR set to: 0
  2916   0011D4  0012               	return		;funcret
  2917   0011D6                     __end_of_Print_RTC_Date_Time:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _lcd_4bit_send_string *****************
  2921 ;; Defined at:
  2922 ;;		line 78 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  lcd             2    9[BANK0 ] PTR const struct .
  2925 ;;		 -> lcd_obj(6), 
  2926 ;;  str             2   11[BANK0 ] PTR unsigned char 
  2927 ;;		 -> STR_8(7), STR_6(7), STR_2(14), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  ret             1    0        unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      unsigned char 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        4 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 10
  2946 ;; This function calls:
  2947 ;;		_lcd_4bit_send_char_data
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;;		_Print_RTC_Date_Time
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text19
  2955   00204A                     __ptext19:
  2956                           	callstack 0
  2957   00204A                     _lcd_4bit_send_string:
  2958                           	callstack 20
  2959   00204A                     
  2960                           ;Modules/chr_LCD/ecu_chr_lcd.c: 80:     if (((void*)0) == lcd) {
  2961   00204A  0100               	movlb	0	; () banked
  2962   00204C  51AD               	movf	lcd_4bit_send_string@lcd& (0+255),w,b
  2963   00204E  11AE               	iorwf	(lcd_4bit_send_string@lcd+1)& (0+255),w,b
  2964   002050  A4D8               	btfss	status,2,c
  2965   002052  EF2D  F010         	goto	u2861
  2966   002056  EF2F  F010         	goto	u2860
  2967   00205A                     u2861:
  2968   00205A  EF42  F010         	goto	l4985
  2969   00205E                     u2860:
  2970   00205E                     
  2971                           ; BSR set to: 0
  2972                           ;Modules/chr_LCD/ecu_chr_lcd.c: 82:     } else {
  2973   00205E  EF51  F010         	goto	l788
  2974   002062                     l4981:
  2975                           
  2976                           ; BSR set to: 0
  2977   002062  C0AD  F0A8         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  2978   002066  C0AE  F0A9         	movff	lcd_4bit_send_string@lcd+1,lcd_4bit_send_char_data@lcd+1
  2979   00206A  C0AF  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  2980   00206E  C0B0  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  2981   002072                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2982   002072  6AF8               	clrf	tblptru,c
  2983   002074                     	endif
  2984   002074                     	if	0	;tblptru may be non-zero
  2985   002074                     	endif
  2986   002074  0008               	tblrd		*
  2987   002076  CFF5 F0AA          	movff	tablat,lcd_4bit_send_char_data@data
  2988   00207A  ECC4  F00D         	call	_lcd_4bit_send_char_data	;wreg free
  2989   00207E  0100               	movlb	0	; () banked
  2990   002080  4BAF               	infsnz	lcd_4bit_send_string@str& (0+255),f,b
  2991   002082  2BB0               	incf	(lcd_4bit_send_string@str+1)& (0+255),f,b
  2992   002084                     l4985:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;Modules/chr_LCD/ecu_chr_lcd.c: 83:         while (*str) {
  2996   002084  C0AF  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  2997   002088  C0B0  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  2998   00208C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2999   00208C  6AF8               	clrf	tblptru,c
  3000   00208E                     	endif
  3001   00208E                     	if	0	;tblptru may be non-zero
  3002   00208E                     	endif
  3003   00208E  0008               	tblrd		*
  3004   002090  50F5               	movf	tablat,w,c
  3005   002092  0900               	iorlw	0
  3006   002094  A4D8               	btfss	status,2,c
  3007   002096  EF4F  F010         	goto	u2871
  3008   00209A  EF51  F010         	goto	u2870
  3009   00209E                     u2871:
  3010   00209E  EF31  F010         	goto	l4981
  3011   0020A2                     u2870:
  3012   0020A2                     l788:
  3013                           
  3014                           ; BSR set to: 0
  3015   0020A2  0012               	return		;funcret
  3016   0020A4                     __end_of_lcd_4bit_send_string:
  3017                           	callstack 0
  3018                           
  3019 ;; *************** function _lcd_4bit_send_char_data *****************
  3020 ;; Defined at:
  3021 ;;		line 52 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  lcd             2    4[BANK0 ] PTR const struct .
  3024 ;;		 -> lcd_obj(6), 
  3025 ;;  data            1    6[BANK0 ] unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  ret             1    8[BANK0 ] unsigned char 
  3028 ;;  l_counter       1    7[BANK0 ] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      unsigned char 
  3031 ;; Registers used:
  3032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3038 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;Total ram usage:        5 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 9
  3045 ;; This function calls:
  3046 ;;		_gpio_pin_write_logic
  3047 ;;		_send_4bit_data
  3048 ;;		_send_4bit_enable_signal
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;;		_lcd_4bit_send_string
  3052 ;;		_Print_RTC_Date_Time
  3053 ;;		_lcd_4bit_send_char_data_pos
  3054 ;;		_lcd_4bit_send_string_pos
  3055 ;;		_lcd_4bit_send_custom_char
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text20
  3060   001B88                     __ptext20:
  3061                           	callstack 0
  3062   001B88                     _lcd_4bit_send_char_data:
  3063                           	callstack 20
  3064   001B88                     
  3065                           ;Modules/chr_LCD/ecu_chr_lcd.c: 54:     uint8 l_counter = 0;
  3066   001B88  0E00               	movlw	0
  3067   001B8A  0100               	movlb	0	; () banked
  3068   001B8C  6FAB               	movwf	lcd_4bit_send_char_data@l_counter& (0+255),b
  3069   001B8E                     
  3070                           ; BSR set to: 0
  3071                           ;Modules/chr_LCD/ecu_chr_lcd.c: 55:     if (((void*)0) == lcd) {
  3072   001B8E  51A8               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  3073   001B90  11A9               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  3074   001B92  A4D8               	btfss	status,2,c
  3075   001B94  EFCE  F00D         	goto	u2761
  3076   001B98  EFD0  F00D         	goto	u2760
  3077   001B9C                     u2761:
  3078   001B9C  EFD4  F00D         	goto	l4923
  3079   001BA0                     u2760:
  3080   001BA0                     
  3081                           ; BSR set to: 0
  3082                           ;Modules/chr_LCD/ecu_chr_lcd.c: 56:         ret = (Std_ReturnType)0x00;
  3083   001BA0  0E00               	movlw	0
  3084   001BA2  6FAC               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3085                           
  3086                           ;Modules/chr_LCD/ecu_chr_lcd.c: 57:     } else {
  3087   001BA4  EF05  F00E         	goto	l4925
  3088   001BA8                     l4923:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;Modules/chr_LCD/ecu_chr_lcd.c: 58:         ret = gpio_pin_write_logic(&(lcd->lcd_rs), G
      +                          PIO_HIGH);
  3092   001BA8  0E01               	movlw	1
  3093   001BAA  25A8               	addwf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  3094   001BAC  6E1A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3095   001BAE  0E00               	movlw	0
  3096   001BB0  21A9               	addwfc	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  3097   001BB2  6E1B               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3098   001BB4  0E01               	movlw	1
  3099   001BB6  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  3100   001BB8  EC4D  F00A         	call	_gpio_pin_write_logic	;wreg free
  3101   001BBC  0100               	movlb	0	; () banked
  3102   001BBE  6FAC               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3103                           
  3104                           ;Modules/chr_LCD/ecu_chr_lcd.c: 59:         ret = send_4bit_data(lcd, data >> 4);
  3105   001BC0  C0A8  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_data@lcd
  3106   001BC4  C0A9  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_data@lcd+1
  3107   001BC8  39AA               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  3108   001BCA  0B0F               	andlw	15
  3109   001BCC  6E26               	movwf	send_4bit_data@data^0,c
  3110   001BCE  ECC8  F00F         	call	_send_4bit_data	;wreg free
  3111   001BD2  0100               	movlb	0	; () banked
  3112   001BD4  6FAC               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3113                           
  3114                           ;Modules/chr_LCD/ecu_chr_lcd.c: 60:         ret = send_4bit_enable_signal(lcd);
  3115   001BD6  C0A8  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_enable_signal@lcd
  3116   001BDA  C0A9  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_enable_signal@lcd+1
  3117   001BDE  ECE6  F010         	call	_send_4bit_enable_signal	;wreg free
  3118   001BE2  0100               	movlb	0	; () banked
  3119   001BE4  6FAC               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3120                           
  3121                           ;Modules/chr_LCD/ecu_chr_lcd.c: 61:         ret = send_4bit_data(lcd, data);
  3122   001BE6  C0A8  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_data@lcd
  3123   001BEA  C0A9  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_data@lcd+1
  3124   001BEE  C0AA  F026         	movff	lcd_4bit_send_char_data@data,send_4bit_data@data
  3125   001BF2  ECC8  F00F         	call	_send_4bit_data	;wreg free
  3126   001BF6  0100               	movlb	0	; () banked
  3127   001BF8  6FAC               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3128                           
  3129                           ;Modules/chr_LCD/ecu_chr_lcd.c: 62:         ret = send_4bit_enable_signal(lcd);
  3130   001BFA  C0A8  F024         	movff	lcd_4bit_send_char_data@lcd,send_4bit_enable_signal@lcd
  3131   001BFE  C0A9  F025         	movff	lcd_4bit_send_char_data@lcd+1,send_4bit_enable_signal@lcd+1
  3132   001C02  ECE6  F010         	call	_send_4bit_enable_signal	;wreg free
  3133   001C06  0100               	movlb	0	; () banked
  3134   001C08  6FAC               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  3135   001C0A                     l4925:
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;Modules/chr_LCD/ecu_chr_lcd.c: 64:     return ret;
  3139   001C0A  51AC               	movf	lcd_4bit_send_char_data@ret& (0+255),w,b
  3140   001C0C                     
  3141                           ; BSR set to: 0
  3142   001C0C  0012               	return		;funcret
  3143   001C0E                     __end_of_lcd_4bit_send_char_data:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _send_4bit_enable_signal *****************
  3147 ;; Defined at:
  3148 ;;		line 278 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  lcd             2   35[COMRAM] PTR const struct .
  3151 ;;		 -> lcd_obj(6), 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  ret             1   37[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      unsigned char 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        3 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 8
  3170 ;; This function calls:
  3171 ;;		_gpio_pin_write_logic
  3172 ;; This function is called by:
  3173 ;;		_lcd_4bit_send_command
  3174 ;;		_lcd_4bit_send_char_data
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text21
  3179   0021CC                     __ptext21:
  3180                           	callstack 0
  3181   0021CC                     _send_4bit_enable_signal:
  3182                           	callstack 20
  3183   0021CC  C024  F01A         	movff	send_4bit_enable_signal@lcd,gpio_pin_write_logic@_pin_config
  3184   0021D0  C025  F01B         	movff	send_4bit_enable_signal@lcd+1,gpio_pin_write_logic@_pin_config+1
  3185   0021D4  0E01               	movlw	1
  3186   0021D6  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  3187   0021D8  EC4D  F00A         	call	_gpio_pin_write_logic	;wreg free
  3188   0021DC                     
  3189                           ;Modules/chr_LCD/ecu_chr_lcd.c: 281:     _delay((unsigned long)((5)*(16000000/4000000.0)
      +                          ));
  3190   0021DC  0E06               	movlw	6
  3191   0021DE                     u3217:
  3192   0021DE  2EE8               	decfsz	wreg,f,c
  3193   0021E0  D7FE               	bra	u3217
  3194   0021E2  F000 F000          	nop2	
  3195   0021E6                     
  3196                           ;Modules/chr_LCD/ecu_chr_lcd.c: 282:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO
      +                          _LOW);
  3197   0021E6  C024  F01A         	movff	send_4bit_enable_signal@lcd,gpio_pin_write_logic@_pin_config
  3198   0021EA  C025  F01B         	movff	send_4bit_enable_signal@lcd+1,gpio_pin_write_logic@_pin_config+1
  3199   0021EE  0E00               	movlw	0
  3200   0021F0  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  3201   0021F2  EC4D  F00A         	call	_gpio_pin_write_logic	;wreg free
  3202   0021F6  6E26               	movwf	send_4bit_enable_signal@ret^0,c
  3203   0021F8                     
  3204                           ;Modules/chr_LCD/ecu_chr_lcd.c: 283:     return ret;
  3205   0021F8  5026               	movf	send_4bit_enable_signal@ret^0,w,c
  3206   0021FA  0012               	return		;funcret
  3207   0021FC                     __end_of_send_4bit_enable_signal:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _send_4bit_data *****************
  3211 ;; Defined at:
  3212 ;;		line 260 in file "Modules/chr_LCD/ecu_chr_lcd.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  lcd             2   35[COMRAM] PTR const struct .
  3215 ;;		 -> lcd_obj(6), 
  3216 ;;  data            1   37[COMRAM] unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  l_counter       1   39[COMRAM] unsigned char 
  3219 ;;  ret             1   38[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      unsigned char 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;Total ram usage:        9 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 8
  3236 ;; This function calls:
  3237 ;;		_gpio_pin_write_logic
  3238 ;; This function is called by:
  3239 ;;		_lcd_4bit_send_command
  3240 ;;		_lcd_4bit_send_char_data
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text22
  3245   001F90                     __ptext22:
  3246                           	callstack 0
  3247   001F90                     _send_4bit_data:
  3248                           	callstack 20
  3249   001F90                     
  3250                           ;Modules/chr_LCD/ecu_chr_lcd.c: 262:     uint8 l_counter = 0;
  3251   001F90  0E00               	movlw	0
  3252   001F92  6E28               	movwf	send_4bit_data@l_counter^0,c
  3253                           
  3254                           ;Modules/chr_LCD/ecu_chr_lcd.c: 263:     for (l_counter = 0; l_counter < 4; l_counter++)
      +                           {
  3255   001F94  0E00               	movlw	0
  3256   001F96  6E28               	movwf	send_4bit_data@l_counter^0,c
  3257   001F98                     l4891:
  3258                           
  3259                           ;Modules/chr_LCD/ecu_chr_lcd.c: 264:         ret = gpio_pin_write_logic(&(lcd->lcd_data[
      +                          l_counter]), data >> l_counter & 0x01);
  3260   001F98  5028               	movf	send_4bit_data@l_counter^0,w,c
  3261   001F9A  2424               	addwf	send_4bit_data@lcd^0,w,c
  3262   001F9C  0100               	movlb	0	; () banked
  3263   001F9E  6FA4               	movwf	??_send_4bit_data& (0+255),b
  3264   001FA0  0E00               	movlw	0
  3265   001FA2  2025               	addwfc	(send_4bit_data@lcd+1)^0,w,c
  3266   001FA4  6FA5               	movwf	(??_send_4bit_data+1)& (0+255),b
  3267   001FA6  0E02               	movlw	2
  3268   001FA8  25A4               	addwf	??_send_4bit_data& (0+255),w,b
  3269   001FAA  6E1A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3270   001FAC  0E00               	movlw	0
  3271   001FAE  21A5               	addwfc	(??_send_4bit_data+1)& (0+255),w,b
  3272   001FB0  6E1B               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3273   001FB2  C028  F0A6         	movff	send_4bit_data@l_counter,??_send_4bit_data+2
  3274   001FB6  C026  F0A7         	movff	send_4bit_data@data,??_send_4bit_data+3
  3275   001FBA  2BA6               	incf	(??_send_4bit_data+2)& (0+255),f,b
  3276   001FBC  EFE2  F00F         	goto	u2734
  3277   001FC0                     u2735:
  3278   001FC0  90D8               	bcf	status,0,c
  3279   001FC2  33A7               	rrcf	(??_send_4bit_data+3)& (0+255),f,b
  3280   001FC4                     u2734:
  3281   001FC4  2FA6               	decfsz	(??_send_4bit_data+2)& (0+255),f,b
  3282   001FC6  EFE0  F00F         	goto	u2735
  3283   001FCA  0100               	movlb	0	; () banked
  3284   001FCC  51A7               	movf	(??_send_4bit_data+3)& (0+255),w,b
  3285   001FCE  0B01               	andlw	1
  3286   001FD0  6E1C               	movwf	gpio_pin_write_logic@logic^0,c
  3287   001FD2  EC4D  F00A         	call	_gpio_pin_write_logic	;wreg free
  3288   001FD6  6E27               	movwf	send_4bit_data@ret^0,c
  3289   001FD8                     
  3290                           ;Modules/chr_LCD/ecu_chr_lcd.c: 265:     }
  3291   001FD8  2A28               	incf	send_4bit_data@l_counter^0,f,c
  3292   001FDA  0E03               	movlw	3
  3293   001FDC  6428               	cpfsgt	send_4bit_data@l_counter^0,c
  3294   001FDE  EFF3  F00F         	goto	u2741
  3295   001FE2  EFF5  F00F         	goto	u2740
  3296   001FE6                     u2741:
  3297   001FE6  EFCC  F00F         	goto	l4891
  3298   001FEA                     u2740:
  3299   001FEA                     
  3300                           ;Modules/chr_LCD/ecu_chr_lcd.c: 266:     return ret;
  3301   001FEA  5027               	movf	send_4bit_data@ret^0,w,c
  3302   001FEC  0012               	return		;funcret
  3303   001FEE                     __end_of_send_4bit_data:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _gpio_pin_write_logic *****************
  3307 ;; Defined at:
  3308 ;;		line 74 in file "MCAL/hal_gpio.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  _pin_config     2   25[COMRAM] PTR const struct .
  3311 ;;		 -> lcd_obj.lcd_data(4), lcd_obj(6), 
  3312 ;;  logic           1   27[COMRAM] enum E3348
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  ret             1   34[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:       10 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 7
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_lcd_4bit_send_command
  3335 ;;		_lcd_4bit_send_char_data
  3336 ;;		_send_4bit_data
  3337 ;;		_send_4bit_enable_signal
  3338 ;;		_gpio_pin_initialize
  3339 ;;		_lcd_8bit_send_command
  3340 ;;		_lcd_8bit_send_char_data
  3341 ;;		_send_8bit_data
  3342 ;;		_send_8bit_enable_signal
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text23
  3347   00149A                     __ptext23:
  3348                           	callstack 0
  3349   00149A                     _gpio_pin_write_logic:
  3350                           	callstack 20
  3351   00149A                     
  3352                           ;MCAL/hal_gpio.c: 75:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3353   00149A  0E01               	movlw	1
  3354   00149C  6E23               	movwf	gpio_pin_write_logic@ret^0,c
  3355   00149E                     
  3356                           ;MCAL/hal_gpio.c: 76:     if(((void*)0) == _pin_config || _pin_config->pin >= 8 || _pin_
      +                          config->port >= 5){
  3357   00149E  501A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3358   0014A0  101B               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  3359   0014A2  B4D8               	btfsc	status,2,c
  3360   0014A4  EF56  F00A         	goto	u2681
  3361   0014A8  EF58  F00A         	goto	u2680
  3362   0014AC                     u2681:
  3363   0014AC  EF78  F00A         	goto	l4867
  3364   0014B0                     u2680:
  3365   0014B0  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3366   0014B4  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3367   0014B8  30DF               	rrcf	223,w,c
  3368   0014BA  32E8               	rrcf	wreg,f,c
  3369   0014BC  32E8               	rrcf	wreg,f,c
  3370   0014BE  0B07               	andlw	7
  3371   0014C0  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  3372   0014C2  0E08               	movlw	8
  3373   0014C4  601D               	cpfslt	??_gpio_pin_write_logic^0,c
  3374   0014C6  EF67  F00A         	goto	u2691
  3375   0014CA  EF69  F00A         	goto	u2690
  3376   0014CE                     u2691:
  3377   0014CE  EF78  F00A         	goto	l4867
  3378   0014D2                     u2690:
  3379   0014D2  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3380   0014D6  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3381   0014DA  50DF               	movf	223,w,c
  3382   0014DC  0B07               	andlw	7
  3383   0014DE  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  3384   0014E0  0E04               	movlw	4
  3385   0014E2  641D               	cpfsgt	??_gpio_pin_write_logic^0,c
  3386   0014E4  EF76  F00A         	goto	u2701
  3387   0014E8  EF78  F00A         	goto	u2700
  3388   0014EC                     u2701:
  3389   0014EC  EFDB  F00A         	goto	l4875
  3390   0014F0                     u2700:
  3391   0014F0                     l4867:
  3392                           
  3393                           ;MCAL/hal_gpio.c: 77:         ret = (Std_ReturnType)0x00;
  3394   0014F0  0E00               	movlw	0
  3395   0014F2  6E23               	movwf	gpio_pin_write_logic@ret^0,c
  3396                           
  3397                           ;MCAL/hal_gpio.c: 78:     }
  3398   0014F4  EFF0  F00A         	goto	l4877
  3399   0014F8                     l4869:
  3400                           
  3401                           ;MCAL/hal_gpio.c: 82:                 (*lat_registers[_pin_config->port] |= ((uint8) 1<<
      +                          _pin_config->pin));
  3402   0014F8  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3403   0014FC  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3404   001500  30DF               	rrcf	223,w,c
  3405   001502  32E8               	rrcf	wreg,f,c
  3406   001504  32E8               	rrcf	wreg,f,c
  3407   001506  0B07               	andlw	7
  3408   001508  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  3409   00150A  0E01               	movlw	1
  3410   00150C  6E1E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3411   00150E  2A1D               	incf	??_gpio_pin_write_logic^0,f,c
  3412   001510  EF8C  F00A         	goto	u2714
  3413   001514                     u2715:
  3414   001514  90D8               	bcf	status,0,c
  3415   001516  361E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3416   001518                     u2714:
  3417   001518  2E1D               	decfsz	??_gpio_pin_write_logic^0,f,c
  3418   00151A  EF8A  F00A         	goto	u2715
  3419   00151E  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3420   001522  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3421   001526  50DF               	movf	223,w,c
  3422   001528  0B07               	andlw	7
  3423   00152A  6E1F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3424   00152C  501F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3425   00152E  0D02               	mullw	2
  3426   001530  0EC7               	movlw	low _lat_registers
  3427   001532  24F3               	addwf	243,w,c
  3428   001534  6ED9               	movwf	fsr2l,c
  3429   001536  0E00               	movlw	high _lat_registers
  3430   001538  20F4               	addwfc	prodh,w,c
  3431   00153A  6EDA               	movwf	fsr2h,c
  3432   00153C  CFDE F020          	movff	postinc2,??_gpio_pin_write_logic+3
  3433   001540  CFDD F021          	movff	postdec2,??_gpio_pin_write_logic+4
  3434   001544  C020  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3435   001548  C021  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3436   00154C  501E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3437   00154E  12DF               	iorwf	indf2,f,c
  3438                           
  3439                           ;MCAL/hal_gpio.c: 83:                 break;
  3440   001550  EFF0  F00A         	goto	l4877
  3441   001554                     l4871:
  3442                           
  3443                           ;MCAL/hal_gpio.c: 85:                 (*lat_registers[_pin_config->port] &= ~((uint8) 1<
      +                          <_pin_config->pin));
  3444   001554  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3445   001558  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3446   00155C  30DF               	rrcf	223,w,c
  3447   00155E  32E8               	rrcf	wreg,f,c
  3448   001560  32E8               	rrcf	wreg,f,c
  3449   001562  0B07               	andlw	7
  3450   001564  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  3451   001566  0E01               	movlw	1
  3452   001568  6E1E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3453   00156A  2A1D               	incf	??_gpio_pin_write_logic^0,f,c
  3454   00156C  EFBA  F00A         	goto	u2724
  3455   001570                     u2725:
  3456   001570  90D8               	bcf	status,0,c
  3457   001572  361E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3458   001574                     u2724:
  3459   001574  2E1D               	decfsz	??_gpio_pin_write_logic^0,f,c
  3460   001576  EFB8  F00A         	goto	u2725
  3461   00157A  501E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3462   00157C  0AFF               	xorlw	255
  3463   00157E  6E1F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3464   001580  C01A  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3465   001584  C01B  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3466   001588  50DF               	movf	223,w,c
  3467   00158A  0B07               	andlw	7
  3468   00158C  6E20               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3469   00158E  5020               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3470   001590  0D02               	mullw	2
  3471   001592  0EC7               	movlw	low _lat_registers
  3472   001594  24F3               	addwf	243,w,c
  3473   001596  6ED9               	movwf	fsr2l,c
  3474   001598  0E00               	movlw	high _lat_registers
  3475   00159A  20F4               	addwfc	prodh,w,c
  3476   00159C  6EDA               	movwf	fsr2h,c
  3477   00159E  CFDE F021          	movff	postinc2,??_gpio_pin_write_logic+4
  3478   0015A2  CFDD F022          	movff	postdec2,??_gpio_pin_write_logic+5
  3479   0015A6  C021  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3480   0015AA  C022  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3481   0015AE  501F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3482   0015B0  16DF               	andwf	indf2,f,c
  3483                           
  3484                           ;MCAL/hal_gpio.c: 86:                 break;
  3485   0015B2  EFF0  F00A         	goto	l4877
  3486   0015B6                     l4875:
  3487   0015B6  501C               	movf	gpio_pin_write_logic@logic^0,w,c
  3488   0015B8  6E1D               	movwf	??_gpio_pin_write_logic^0,c
  3489   0015BA  6A1E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3490                           
  3491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3492                           ; Switch size 1, requested type "simple"
  3493                           ; Number of cases is 1, Range of values is 0 to 0
  3494                           ; switch strategies available:
  3495                           ; Name         Instructions Cycles
  3496                           ; simple_byte            4     3 (average)
  3497                           ;	Chosen strategy is simple_byte
  3498   0015BC  501E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3499   0015BE  0A00               	xorlw	0	; case 0
  3500   0015C0  B4D8               	btfsc	status,2,c
  3501   0015C2  EFE5  F00A         	goto	l5503
  3502   0015C6  EF78  F00A         	goto	l4867
  3503   0015CA                     l5503:
  3504                           
  3505                           ; Switch size 1, requested type "simple"
  3506                           ; Number of cases is 2, Range of values is 0 to 1
  3507                           ; switch strategies available:
  3508                           ; Name         Instructions Cycles
  3509                           ; simple_byte            7     4 (average)
  3510                           ;	Chosen strategy is simple_byte
  3511   0015CA  501D               	movf	??_gpio_pin_write_logic^0,w,c
  3512   0015CC  0A00               	xorlw	0	; case 0
  3513   0015CE  B4D8               	btfsc	status,2,c
  3514   0015D0  EFAA  F00A         	goto	l4871
  3515   0015D4  0A01               	xorlw	1	; case 1
  3516   0015D6  B4D8               	btfsc	status,2,c
  3517   0015D8  EF7C  F00A         	goto	l4869
  3518   0015DC  EF78  F00A         	goto	l4867
  3519   0015E0                     l4877:
  3520                           
  3521                           ;MCAL/hal_gpio.c: 90:     return ret;
  3522   0015E0  5023               	movf	gpio_pin_write_logic@ret^0,w,c
  3523   0015E2  0012               	return		;funcret
  3524   0015E4                     __end_of_gpio_pin_write_logic:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _EUART_Send_String *****************
  3528 ;; Defined at:
  3529 ;;		line 3 in file "Modules/UART_Logging_Print/UART_Log.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  text            2   26[COMRAM] PTR unsigned char 
  3532 ;;		 -> STR_7(7), STR_5(7), STR_1(29), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;Total ram usage:        2 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 8
  3551 ;; This function calls:
  3552 ;;		_EUSART_Write
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;;		_Print_RTC_Date_Time
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text24
  3560   002162                     __ptext24:
  3561                           	callstack 0
  3562   002162                     _EUART_Send_String:
  3563                           	callstack 21
  3564   002162                     
  3565                           ;Modules/UART_Logging_Print/UART_Log.c: 4:     while(*text !='\0'){
  3566   002162  EFBE  F010         	goto	l4961
  3567   002166                     l4957:
  3568                           
  3569                           ;Modules/UART_Logging_Print/UART_Log.c: 5:         EUSART_Write(*text++);
  3570   002166  C01B  FFF6         	movff	EUART_Send_String@text,tblptrl
  3571   00216A  C01C  FFF7         	movff	EUART_Send_String@text+1,tblptrh
  3572   00216E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3573   00216E  6AF8               	clrf	tblptru,c
  3574   002170                     	endif
  3575   002170                     	if	0	;tblptru may be non-zero
  3576   002170                     	endif
  3577   002170  0008               	tblrd		*
  3578   002172  50F5               	movf	tablat,w,c
  3579   002174  ECD0  F011         	call	_EUSART_Write
  3580   002178  4A1B               	infsnz	EUART_Send_String@text^0,f,c
  3581   00217A  2A1C               	incf	(EUART_Send_String@text+1)^0,f,c
  3582   00217C                     l4961:
  3583                           
  3584                           ;Modules/UART_Logging_Print/UART_Log.c: 4:     while(*text !='\0'){
  3585   00217C  C01B  FFF6         	movff	EUART_Send_String@text,tblptrl
  3586   002180  C01C  FFF7         	movff	EUART_Send_String@text+1,tblptrh
  3587   002184                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3588   002184  6AF8               	clrf	tblptru,c
  3589   002186                     	endif
  3590   002186                     	if	0	;tblptru may be non-zero
  3591   002186                     	endif
  3592   002186  0008               	tblrd		*
  3593   002188  50F5               	movf	tablat,w,c
  3594   00218A  0900               	iorlw	0
  3595   00218C  A4D8               	btfss	status,2,c
  3596   00218E  EFCB  F010         	goto	u2841
  3597   002192  EFCD  F010         	goto	u2840
  3598   002196                     u2841:
  3599   002196  EFB3  F010         	goto	l4957
  3600   00219A                     u2840:
  3601   00219A  0012               	return		;funcret
  3602   00219C                     __end_of_EUART_Send_String:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _EUSART_Write *****************
  3606 ;; Defined at:
  3607 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  txData          1    wreg     unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  txData          1   25[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;Total ram usage:        1 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 7
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_Print_RTC_Date_Time
  3632 ;;		_EUART_Send_String
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text25
  3637   0023A0                     __ptext25:
  3638                           	callstack 0
  3639   0023A0                     _EUSART_Write:
  3640                           	callstack 22
  3641                           
  3642                           ;incstack = 0
  3643                           ;EUSART_Write@txData stored from wreg
  3644   0023A0  6E1A               	movwf	EUSART_Write@txData^0,c
  3645   0023A2                     l171:
  3646                           
  3647                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
  3648   0023A2  A89E               	btfss	158,4,c	;volatile
  3649   0023A4  EFD6  F011         	goto	u2751
  3650   0023A8  EFD8  F011         	goto	u2750
  3651   0023AC                     u2751:
  3652   0023AC  EFD1  F011         	goto	l171
  3653   0023B0                     u2750:
  3654   0023B0                     
  3655                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3656   0023B0  C01A  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  3657   0023B4  0012               	return		;funcret
  3658   0023B6                     __end_of_EUSART_Write:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _EEPROM_Write_1Byte *****************
  3662 ;; Defined at:
  3663 ;;		line 5 in file "Modules/EEPROM/EEPROM.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  address         1    wreg     unsigned char 
  3666 ;;  reg             1   37[COMRAM] unsigned char 
  3667 ;;  data            1   38[COMRAM] unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  address         1   39[COMRAM] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;Total ram usage:        3 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 11
  3686 ;; This function calls:
  3687 ;;		_I2C_Write1ByteRegister
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text26
  3694   0023F2                     __ptext26:
  3695                           	callstack 0
  3696   0023F2                     _EEPROM_Write_1Byte:
  3697                           	callstack 19
  3698                           
  3699                           ;incstack = 0
  3700                           ;EEPROM_Write_1Byte@address stored from wreg
  3701   0023F2  6E28               	movwf	EEPROM_Write_1Byte@address^0,c
  3702   0023F4                     
  3703                           ;Modules/EEPROM/EEPROM.c: 6:     I2C_Write1ByteRegister(address,reg,data);
  3704   0023F4  C026  F023         	movff	EEPROM_Write_1Byte@reg,I2C_Write1ByteRegister@reg
  3705   0023F8  C027  F024         	movff	EEPROM_Write_1Byte@data,I2C_Write1ByteRegister@data
  3706   0023FC  5028               	movf	EEPROM_Write_1Byte@address^0,w,c
  3707   0023FE  EC2D  F00F         	call	_I2C_Write1ByteRegister
  3708   002402  0012               	return		;funcret
  3709   002404                     __end_of_EEPROM_Write_1Byte:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _I2C_Write1ByteRegister *****************
  3713 ;; Defined at:
  3714 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  address         1    wreg     unsigned char 
  3717 ;;  reg             1   34[COMRAM] unsigned char 
  3718 ;;  data            1   35[COMRAM] unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  address         1   36[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;Total ram usage:        3 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 10
  3737 ;; This function calls:
  3738 ;;		_I2C_Close
  3739 ;;		_I2C_MasterWrite
  3740 ;;		_I2C_Open
  3741 ;;		_I2C_SetAddressNackCallback
  3742 ;;		_I2C_SetBuffer
  3743 ;;		_I2C_SetDataCompleteCallback
  3744 ;; This function is called by:
  3745 ;;		_main
  3746 ;;		_EEPROM_Write_1Byte
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text27
  3751   001E5A                     __ptext27:
  3752                           	callstack 0
  3753   001E5A                     _I2C_Write1ByteRegister:
  3754                           	callstack 20
  3755                           
  3756                           ;incstack = 0
  3757                           ;I2C_Write1ByteRegister@address stored from wreg
  3758   001E5A  6E25               	movwf	I2C_Write1ByteRegister@address^0,c
  3759   001E5C                     l3889:
  3760   001E5C  5025               	movf	I2C_Write1ByteRegister@address^0,w,c
  3761   001E5E  ECED  F00C         	call	_I2C_Open
  3762   001E62  0900               	iorlw	0
  3763   001E64  B4D8               	btfsc	status,2,c
  3764   001E66  EF37  F00F         	goto	u1791
  3765   001E6A  EF39  F00F         	goto	u1790
  3766   001E6E                     u1791:
  3767   001E6E  EF2E  F00F         	goto	l3889
  3768   001E72                     u1790:
  3769   001E72                     
  3770                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  3771   001E72  0E28               	movlw	low _wr1RegCompleteHandler
  3772   001E74  6E1F               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3773   001E76  0E22               	movlw	high _wr1RegCompleteHandler
  3774   001E78  6E20               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3775   001E7A  0E24               	movlw	low I2C_Write1ByteRegister@data
  3776   001E7C  6E21               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3777   001E7E  0E00               	movlw	high I2C_Write1ByteRegister@data
  3778   001E80  6E22               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3779   001E82  ECA1  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  3780   001E86                     
  3781                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  3782   001E86  0E23               	movlw	low I2C_Write1ByteRegister@reg
  3783   001E88  6E1A               	movwf	I2C_SetBuffer@buffer^0,c
  3784   001E8A  0E00               	movlw	high I2C_Write1ByteRegister@reg
  3785   001E8C  6E1B               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3786   001E8E  0E00               	movlw	0
  3787   001E90  6E1D               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3788   001E92  0E01               	movlw	1
  3789   001E94  6E1C               	movwf	I2C_SetBuffer@bufferSize^0,c
  3790   001E96  EC6C  F011         	call	_I2C_SetBuffer	;wreg free
  3791   001E9A                     
  3792                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3793   001E9A  0E00               	movlw	0
  3794   001E9C  6E1F               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3795   001E9E  0E00               	movlw	0
  3796   001EA0  6E20               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3797   001EA2  0E00               	movlw	0
  3798   001EA4  6E21               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3799   001EA6  0E00               	movlw	0
  3800   001EA8  6E22               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3801   001EAA  ECAD  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  3802   001EAE                     
  3803                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  3804   001EAE  EC56  F012         	call	_I2C_MasterWrite	;wreg free
  3805   001EB2                     l3899:
  3806   001EB2  ECFE  F010         	call	_I2C_Close	;wreg free
  3807   001EB6  06E8               	decf	wreg,f,c
  3808   001EB8  B4D8               	btfsc	status,2,c
  3809   001EBA  EF61  F00F         	goto	u1801
  3810   001EBE  EF63  F00F         	goto	u1800
  3811   001EC2                     u1801:
  3812   001EC2  EF59  F00F         	goto	l3899
  3813   001EC6                     u1800:
  3814   001EC6  0012               	return		;funcret
  3815   001EC8                     __end_of_I2C_Write1ByteRegister:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _EEPROM_Read_1Byte *****************
  3819 ;; Defined at:
  3820 ;;		line 2 in file "Modules/EEPROM/EEPROM.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  address         1    wreg     unsigned char 
  3823 ;;  reg             1   37[COMRAM] unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  address         1   38[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      unsigned char 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        2 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 11
  3842 ;; This function calls:
  3843 ;;		_I2C_Read1ByteRegister
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text28
  3850   002432                     __ptext28:
  3851                           	callstack 0
  3852   002432                     _EEPROM_Read_1Byte:
  3853                           	callstack 19
  3854                           
  3855                           ;incstack = 0
  3856                           ;EEPROM_Read_1Byte@address stored from wreg
  3857   002432  6E27               	movwf	EEPROM_Read_1Byte@address^0,c
  3858   002434                     
  3859                           ;Modules/EEPROM/EEPROM.c: 3:     return I2C_Read1ByteRegister(address,reg);
  3860   002434  C026  F023         	movff	EEPROM_Read_1Byte@reg,I2C_Read1ByteRegister@reg
  3861   002438  5027               	movf	EEPROM_Read_1Byte@address^0,w,c
  3862   00243A  ECBB  F00E         	call	_I2C_Read1ByteRegister
  3863   00243E  0012               	return		;funcret
  3864   002440                     __end_of_EEPROM_Read_1Byte:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _I2C_Read1ByteRegister *****************
  3868 ;; Defined at:
  3869 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  address         1    wreg     unsigned char 
  3872 ;;  reg             1   34[COMRAM] unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  address         1   35[COMRAM] unsigned char 
  3875 ;;  returnValue     1   36[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;Total ram usage:        3 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 10
  3892 ;; This function calls:
  3893 ;;		_I2C_Close
  3894 ;;		_I2C_MasterWrite
  3895 ;;		_I2C_Open
  3896 ;;		_I2C_SetAddressNackCallback
  3897 ;;		_I2C_SetBuffer
  3898 ;;		_I2C_SetDataCompleteCallback
  3899 ;; This function is called by:
  3900 ;;		_EEPROM_Read_1Byte
  3901 ;;		_Set_RTC_Date_Time
  3902 ;;		_Read_Temprature
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text29
  3907   001D76                     __ptext29:
  3908                           	callstack 0
  3909   001D76                     _I2C_Read1ByteRegister:
  3910                           	callstack 19
  3911                           
  3912                           ;incstack = 0
  3913                           ;I2C_Read1ByteRegister@address stored from wreg
  3914   001D76  6E24               	movwf	I2C_Read1ByteRegister@address^0,c
  3915   001D78                     
  3916                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  3917   001D78  0E00               	movlw	0
  3918   001D7A  6E25               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  3919   001D7C                     l3871:
  3920   001D7C  5024               	movf	I2C_Read1ByteRegister@address^0,w,c
  3921   001D7E  ECED  F00C         	call	_I2C_Open
  3922   001D82  0900               	iorlw	0
  3923   001D84  B4D8               	btfsc	status,2,c
  3924   001D86  EFC7  F00E         	goto	u1771
  3925   001D8A  EFC9  F00E         	goto	u1770
  3926   001D8E                     u1771:
  3927   001D8E  EFBE  F00E         	goto	l3871
  3928   001D92                     u1770:
  3929   001D92                     
  3930                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  3931   001D92  0E80               	movlw	low _rd1RegCompleteHandler
  3932   001D94  6E1F               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3933   001D96  0E22               	movlw	high _rd1RegCompleteHandler
  3934   001D98  6E20               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3935   001D9A  0E25               	movlw	low I2C_Read1ByteRegister@returnValue
  3936   001D9C  6E21               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3937   001D9E  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  3938   001DA0  6E22               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3939   001DA2  ECA1  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  3940   001DA6                     
  3941                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  3942   001DA6  0E23               	movlw	low I2C_Read1ByteRegister@reg
  3943   001DA8  6E1A               	movwf	I2C_SetBuffer@buffer^0,c
  3944   001DAA  0E00               	movlw	high I2C_Read1ByteRegister@reg
  3945   001DAC  6E1B               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3946   001DAE  0E00               	movlw	0
  3947   001DB0  6E1D               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3948   001DB2  0E01               	movlw	1
  3949   001DB4  6E1C               	movwf	I2C_SetBuffer@bufferSize^0,c
  3950   001DB6  EC6C  F011         	call	_I2C_SetBuffer	;wreg free
  3951   001DBA                     
  3952                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3953   001DBA  0E00               	movlw	0
  3954   001DBC  6E1F               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3955   001DBE  0E00               	movlw	0
  3956   001DC0  6E20               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3957   001DC2  0E00               	movlw	0
  3958   001DC4  6E21               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3959   001DC6  0E00               	movlw	0
  3960   001DC8  6E22               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3961   001DCA  ECAD  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  3962   001DCE                     
  3963                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  3964   001DCE  EC56  F012         	call	_I2C_MasterWrite	;wreg free
  3965   001DD2                     l3881:
  3966   001DD2  ECFE  F010         	call	_I2C_Close	;wreg free
  3967   001DD6  06E8               	decf	wreg,f,c
  3968   001DD8  B4D8               	btfsc	status,2,c
  3969   001DDA  EFF1  F00E         	goto	u1781
  3970   001DDE  EFF3  F00E         	goto	u1780
  3971   001DE2                     u1781:
  3972   001DE2  EFE9  F00E         	goto	l3881
  3973   001DE6                     u1780:
  3974   001DE6                     
  3975                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  3976   001DE6  5025               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  3977   001DE8  0012               	return		;funcret
  3978   001DEA                     __end_of_I2C_Read1ByteRegister:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _I2C_SetDataCompleteCallback *****************
  3982 ;; Defined at:
  3983 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  cb              2   30[COMRAM] PTR FTN(PTR void ,)enum 
  3986 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  3987 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  3988 ;;  ptr             2   32[COMRAM] PTR void 
  3989 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  3990 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;Total ram usage:        4 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 8
  4009 ;; This function calls:
  4010 ;;		_I2C_SetCallback
  4011 ;; This function is called by:
  4012 ;;		_I2C_Read1ByteRegister
  4013 ;;		_I2C_Write1ByteRegister
  4014 ;;		_I2C_Read2ByteRegister
  4015 ;;		_I2C_Write2ByteRegister
  4016 ;;		_I2C_ReadDataBlock
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text30
  4021   002342                     __ptext30:
  4022                           	callstack 0
  4023   002342                     _I2C_SetDataCompleteCallback:
  4024                           	callstack 20
  4025   002342                     
  4026                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  4027   002342  C01F  F01A         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  4028   002346  C020  F01B         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  4029   00234A  C021  F01C         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  4030   00234E  C022  F01D         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  4031   002352  0E00               	movlw	0
  4032   002354  EC45  F00E         	call	_I2C_SetCallback
  4033   002358  0012               	return		;funcret
  4034   00235A                     __end_of_I2C_SetDataCompleteCallback:
  4035                           	callstack 0
  4036                           
  4037 ;; *************** function _I2C_SetBuffer *****************
  4038 ;; Defined at:
  4039 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  buffer          2   25[COMRAM] PTR void 
  4042 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  4043 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  4044 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  4045 ;;  bufferSize      2   27[COMRAM] unsigned int 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;Total ram usage:        4 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; Hardware stack levels required when called: 7
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_I2C_Read1ByteRegister
  4068 ;;		_I2C_Write1ByteRegister
  4069 ;;		_I2C_Read2ByteRegister
  4070 ;;		_I2C_Write2ByteRegister
  4071 ;;		_I2C_WriteNBytes
  4072 ;;		_I2C_ReadNBytes
  4073 ;;		_I2C_ReadDataBlock
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text31
  4078   0022D8                     __ptext31:
  4079                           	callstack 0
  4080   0022D8                     _I2C_SetBuffer:
  4081                           	callstack 21
  4082   0022D8                     
  4083                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  4084   0022D8  0100               	movlb	0	; () banked
  4085   0022DA  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  4086   0022DC  EF72  F011         	goto	u1591
  4087   0022E0  EF74  F011         	goto	u1590
  4088   0022E4                     u1591:
  4089   0022E4  EF7D  F011         	goto	l479
  4090   0022E8                     u1590:
  4091   0022E8                     
  4092                           ; BSR set to: 0
  4093                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  4094   0022E8  C01A  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  4095   0022EC  C01B  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  4096   0022F0                     
  4097                           ; BSR set to: 0
  4098                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  4099   0022F0  C01C  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  4100   0022F4  C01D  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  4101   0022F8                     
  4102                           ; BSR set to: 0
  4103                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  4104   0022F8  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  4105   0022FA                     l479:
  4106                           
  4107                           ; BSR set to: 0
  4108   0022FA  0012               	return		;funcret
  4109   0022FC                     __end_of_I2C_SetBuffer:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _I2C_SetAddressNackCallback *****************
  4113 ;; Defined at:
  4114 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  cb              2   30[COMRAM] PTR FTN(PTR void ,)enum 
  4117 ;;		 -> NULL(1), 
  4118 ;;  ptr             2   32[COMRAM] PTR void 
  4119 ;;		 -> NULL(0), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;Total ram usage:        4 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; Hardware stack levels required when called: 8
  4138 ;; This function calls:
  4139 ;;		_I2C_SetCallback
  4140 ;; This function is called by:
  4141 ;;		_I2C_Read1ByteRegister
  4142 ;;		_I2C_Write1ByteRegister
  4143 ;;		_I2C_Read2ByteRegister
  4144 ;;		_I2C_Write2ByteRegister
  4145 ;;		_I2C_WriteNBytes
  4146 ;;		_I2C_ReadDataBlock
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text32
  4151   00235A                     __ptext32:
  4152                           	callstack 0
  4153   00235A                     _I2C_SetAddressNackCallback:
  4154                           	callstack 20
  4155   00235A                     
  4156                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4157   00235A  C01F  F01A         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  4158   00235E  C020  F01B         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  4159   002362  C021  F01C         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  4160   002366  C022  F01D         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  4161   00236A  0E02               	movlw	2
  4162   00236C  EC45  F00E         	call	_I2C_SetCallback
  4163   002370  0012               	return		;funcret
  4164   002372                     __end_of_I2C_SetAddressNackCallback:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _I2C_SetCallback *****************
  4168 ;; Defined at:
  4169 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  idx             1    wreg     enum E3139
  4172 ;;  cb              2   25[COMRAM] PTR FTN(PTR void ,)enum 
  4173 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  4174 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4175 ;;  ptr             2   27[COMRAM] PTR void 
  4176 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4177 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  idx             1   29[COMRAM] enum E3139
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;Total ram usage:        5 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 7
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_I2C_SetDataCompleteCallback
  4200 ;;		_I2C_SetAddressNackCallback
  4201 ;;		_I2C_SetWriteCollisionCallback
  4202 ;;		_I2C_SetDataNackCallback
  4203 ;;		_I2C_SetTimeoutCallback
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text33
  4208   001C8A                     __ptext33:
  4209                           	callstack 0
  4210   001C8A                     _I2C_SetCallback:
  4211                           	callstack 20
  4212                           
  4213                           ;incstack = 0
  4214                           ;I2C_SetCallback@idx stored from wreg
  4215   001C8A  6E1E               	movwf	I2C_SetCallback@idx^0,c
  4216   001C8C                     
  4217                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  4218   001C8C  501A               	movf	I2C_SetCallback@cb^0,w,c
  4219   001C8E  101B               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  4220   001C90  B4D8               	btfsc	status,2,c
  4221   001C92  EF4D  F00E         	goto	u1541
  4222   001C96  EF4F  F00E         	goto	u1540
  4223   001C9A                     u1541:
  4224   001C9A  EF69  F00E         	goto	l3493
  4225   001C9E                     u1540:
  4226   001C9E                     
  4227                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  4228   001C9E  501E               	movf	I2C_SetCallback@idx^0,w,c
  4229   001CA0  0D02               	mullw	2
  4230   001CA2  0E60               	movlw	low _I2C_Status
  4231   001CA4  24F3               	addwf	243,w,c
  4232   001CA6  6ED9               	movwf	fsr2l,c
  4233   001CA8  0E00               	movlw	high _I2C_Status
  4234   001CAA  20F4               	addwfc	prodh,w,c
  4235   001CAC  6EDA               	movwf	fsr2h,c
  4236   001CAE  C01A  FFDE         	movff	I2C_SetCallback@cb,postinc2
  4237   001CB2  C01B  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  4238                           
  4239                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  4240   001CB6  501E               	movf	I2C_SetCallback@idx^0,w,c
  4241   001CB8  0D02               	mullw	2
  4242   001CBA  0E6C               	movlw	low (_I2C_Status+12)
  4243   001CBC  24F3               	addwf	243,w,c
  4244   001CBE  6ED9               	movwf	fsr2l,c
  4245   001CC0  0E00               	movlw	high (_I2C_Status+12)
  4246   001CC2  20F4               	addwfc	prodh,w,c
  4247   001CC4  6EDA               	movwf	fsr2h,c
  4248   001CC6  C01C  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  4249   001CCA  C01D  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  4250                           
  4251                           ;mcc_generated_files/i2c_master.c: 310:     }
  4252   001CCE  EF7F  F00E         	goto	l502
  4253   001CD2                     l3493:
  4254                           
  4255                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  4256   001CD2  501E               	movf	I2C_SetCallback@idx^0,w,c
  4257   001CD4  0D02               	mullw	2
  4258   001CD6  0E60               	movlw	low _I2C_Status
  4259   001CD8  24F3               	addwf	243,w,c
  4260   001CDA  6ED9               	movwf	fsr2l,c
  4261   001CDC  0E00               	movlw	high _I2C_Status
  4262   001CDE  20F4               	addwfc	prodh,w,c
  4263   001CE0  6EDA               	movwf	fsr2h,c
  4264   001CE2  0E2E               	movlw	low _I2C_CallbackReturnStop
  4265   001CE4  6EDE               	movwf	postinc2,c
  4266   001CE6  0E25               	movlw	high _I2C_CallbackReturnStop
  4267   001CE8  6EDD               	movwf	postdec2,c
  4268                           
  4269                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  4270   001CEA  501E               	movf	I2C_SetCallback@idx^0,w,c
  4271   001CEC  0D02               	mullw	2
  4272   001CEE  0E6C               	movlw	low (_I2C_Status+12)
  4273   001CF0  24F3               	addwf	243,w,c
  4274   001CF2  6ED9               	movwf	fsr2l,c
  4275   001CF4  0E00               	movlw	high (_I2C_Status+12)
  4276   001CF6  20F4               	addwfc	prodh,w,c
  4277   001CF8  6EDA               	movwf	fsr2h,c
  4278   001CFA  6ADE               	clrf	postinc2,c
  4279   001CFC  6ADD               	clrf	postdec2,c
  4280   001CFE                     l502:
  4281   001CFE  0012               	return		;funcret
  4282   001D00                     __end_of_I2C_SetCallback:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _I2C_Open *****************
  4286 ;; Defined at:
  4287 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  address         1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  address         1   27[COMRAM] unsigned char 
  4292 ;;  returnValue     1   28[COMRAM] enum E358
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      enum E358
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:        2 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 8
  4309 ;; This function calls:
  4310 ;;		_I2C_MasterClearIrq
  4311 ;;		_I2C_MasterEnableIrq
  4312 ;;		_I2C_MasterOpen
  4313 ;;		_I2C_SetInterruptHandler
  4314 ;; This function is called by:
  4315 ;;		_I2C_Read1ByteRegister
  4316 ;;		_I2C_Write1ByteRegister
  4317 ;;		_I2C_Read2ByteRegister
  4318 ;;		_I2C_Write2ByteRegister
  4319 ;;		_I2C_WriteNBytes
  4320 ;;		_I2C_ReadNBytes
  4321 ;;		_I2C_ReadDataBlock
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text34
  4326   0019DA                     __ptext34:
  4327                           	callstack 0
  4328   0019DA                     _I2C_Open:
  4329                           	callstack 20
  4330                           
  4331                           ;incstack = 0
  4332                           ;I2C_Open@address stored from wreg
  4333   0019DA  6E1C               	movwf	I2C_Open@address^0,c
  4334   0019DC                     
  4335                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4336   0019DC  0E01               	movlw	1
  4337   0019DE  6E1D               	movwf	I2C_Open@returnValue^0,c
  4338   0019E0                     
  4339                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4340   0019E0  0100               	movlb	0	; () banked
  4341   0019E2  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  4342   0019E4  EFF6  F00C         	goto	u1581
  4343   0019E8  EFF8  F00C         	goto	u1580
  4344   0019EC                     u1581:
  4345   0019EC  EF3A  F00D         	goto	l3631
  4346   0019F0                     u1580:
  4347   0019F0                     
  4348                           ; BSR set to: 0
  4349                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4350   0019F0  C01C  F07C         	movff	I2C_Open@address,_I2C_Status+28
  4351   0019F4                     
  4352                           ; BSR set to: 0
  4353                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4354   0019F4  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4355   0019F6                     
  4356                           ; BSR set to: 0
  4357                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4358   0019F6  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  4359   0019F8                     
  4360                           ; BSR set to: 0
  4361                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4362   0019F8  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4363   0019FA                     
  4364                           ; BSR set to: 0
  4365                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4366   0019FA  0E0E               	movlw	14
  4367   0019FC  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4368   0019FE                     
  4369                           ; BSR set to: 0
  4370                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4371   0019FE  0E01               	movlw	1
  4372   001A00  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  4373   001A02  0EF4               	movlw	244
  4374   001A04  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  4375   001A06                     
  4376                           ; BSR set to: 0
  4377                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4378   001A06  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  4379   001A08                     
  4380                           ; BSR set to: 0
  4381                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4382   001A08  0E2E               	movlw	low _I2C_CallbackReturnStop
  4383   001A0A  6F60               	movwf	_I2C_Status& (0+255),b
  4384   001A0C  0E25               	movlw	high _I2C_CallbackReturnStop
  4385   001A0E  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  4386   001A10                     
  4387                           ; BSR set to: 0
  4388                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  4389   001A10  0E00               	movlw	0
  4390   001A12  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  4391   001A14  0E00               	movlw	0
  4392   001A16  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  4393   001A18                     
  4394                           ; BSR set to: 0
  4395                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  4396   001A18  0E2E               	movlw	low _I2C_CallbackReturnStop
  4397   001A1A  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  4398   001A1C  0E25               	movlw	high _I2C_CallbackReturnStop
  4399   001A1E  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  4400   001A20                     
  4401                           ; BSR set to: 0
  4402                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  4403   001A20  0E00               	movlw	0
  4404   001A22  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  4405   001A24  0E00               	movlw	0
  4406   001A26  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  4407   001A28                     
  4408                           ; BSR set to: 0
  4409                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  4410   001A28  0E2E               	movlw	low _I2C_CallbackReturnStop
  4411   001A2A  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  4412   001A2C  0E25               	movlw	high _I2C_CallbackReturnStop
  4413   001A2E  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  4414   001A30                     
  4415                           ; BSR set to: 0
  4416                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  4417   001A30  0E00               	movlw	0
  4418   001A32  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  4419   001A34  0E00               	movlw	0
  4420   001A36  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  4421   001A38                     
  4422                           ; BSR set to: 0
  4423                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  4424   001A38  0E2E               	movlw	low _I2C_CallbackReturnStop
  4425   001A3A  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  4426   001A3C  0E25               	movlw	high _I2C_CallbackReturnStop
  4427   001A3E  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  4428   001A40                     
  4429                           ; BSR set to: 0
  4430                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  4431   001A40  0E00               	movlw	0
  4432   001A42  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  4433   001A44  0E00               	movlw	0
  4434   001A46  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  4435   001A48                     
  4436                           ; BSR set to: 0
  4437                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  4438   001A48  0E2A               	movlw	low _I2C_CallbackReturnReset
  4439   001A4A  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  4440   001A4C  0E25               	movlw	high _I2C_CallbackReturnReset
  4441   001A4E  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  4442   001A50                     
  4443                           ; BSR set to: 0
  4444                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  4445   001A50  0E00               	movlw	0
  4446   001A52  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  4447   001A54  0E00               	movlw	0
  4448   001A56  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  4449   001A58                     
  4450                           ; BSR set to: 0
  4451                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  4452   001A58  0EF4               	movlw	low _I2C_MasterIsr
  4453   001A5A  6E1A               	movwf	I2C_SetInterruptHandler@InterruptHandler^0,c
  4454   001A5C  0E24               	movlw	high _I2C_MasterIsr
  4455   001A5E  6E1B               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)^0,c
  4456   001A60  EC4D  F012         	call	_I2C_SetInterruptHandler	;wreg free
  4457   001A64                     
  4458                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  4459   001A64  EC8B  F012         	call	_I2C_MasterClearIrq	;wreg free
  4460   001A68                     
  4461                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  4462   001A68  EC90  F011         	call	_I2C_MasterOpen	;wreg free
  4463   001A6C                     
  4464                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  4465   001A6C  EC83  F012         	call	_I2C_MasterEnableIrq	;wreg free
  4466   001A70                     
  4467                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  4468   001A70  0E00               	movlw	0
  4469   001A72  6E1D               	movwf	I2C_Open@returnValue^0,c
  4470   001A74                     l3631:
  4471                           
  4472                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  4473   001A74  501D               	movf	I2C_Open@returnValue^0,w,c
  4474   001A76  0012               	return		;funcret
  4475   001A78                     __end_of_I2C_Open:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _I2C_SetInterruptHandler *****************
  4479 ;; Defined at:
  4480 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  InterruptHan    2   25[COMRAM] PTR FTN()void 
  4483 ;;		 -> I2C_MasterIsr(1), 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;Total ram usage:        2 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 7
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_I2C_Open
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text35
  4510   00249A                     __ptext35:
  4511                           	callstack 0
  4512   00249A                     _I2C_SetInterruptHandler:
  4513                           	callstack 20
  4514   00249A                     
  4515                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  4516   00249A  C01A  F041         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  4517   00249E  C01B  F042         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  4518   0024A2  0012               	return		;funcret
  4519   0024A4                     __end_of_I2C_SetInterruptHandler:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function _I2C_MasterOpen *****************
  4523 ;; Defined at:
  4524 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      _Bool 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;Total ram usage:        0 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 7
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_I2C_Open
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text36
  4553   002320                     __ptext36:
  4554                           	callstack 0
  4555   002320                     _I2C_MasterOpen:
  4556                           	callstack 20
  4557   002320                     
  4558                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  4559   002320  BAC6               	btfsc	198,5,c	;volatile
  4560   002322  EF95  F011         	goto	u1511
  4561   002326  EF97  F011         	goto	u1510
  4562   00232A                     u1511:
  4563   00232A  EFA0  F011         	goto	l621
  4564   00232E                     u1510:
  4565   00232E                     
  4566                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x80;
  4567   00232E  0E80               	movlw	128
  4568   002330  6EC7               	movwf	199,c	;volatile
  4569                           
  4570                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  4571   002332  0E08               	movlw	8
  4572   002334  6EC6               	movwf	198,c	;volatile
  4573                           
  4574                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  4575   002336  0E00               	movlw	0
  4576   002338  6EC5               	movwf	197,c	;volatile
  4577                           
  4578                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x27;
  4579   00233A  0E27               	movlw	39
  4580   00233C  6EC8               	movwf	200,c	;volatile
  4581   00233E                     
  4582                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  4583   00233E  8AC6               	bsf	198,5,c	;volatile
  4584   002340                     l621:
  4585   002340  0012               	return		;funcret
  4586   002342                     __end_of_I2C_MasterOpen:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _I2C_MasterEnableIrq *****************
  4590 ;; Defined at:
  4591 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		None
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 7
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_I2C_Open
  4616 ;;		_I2C_SetTimeOut
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text37
  4621   002506                     __ptext37:
  4622                           	callstack 0
  4623   002506                     _I2C_MasterEnableIrq:
  4624                           	callstack 20
  4625   002506                     
  4626                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  4627   002506  869D               	bsf	157,3,c	;volatile
  4628   002508  0012               	return		;funcret
  4629   00250A                     __end_of_I2C_MasterEnableIrq:
  4630                           	callstack 0
  4631                           
  4632 ;; *************** function _I2C_MasterWrite *****************
  4633 ;; Defined at:
  4634 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      enum E358
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 9
  4655 ;; This function calls:
  4656 ;;		_I2C_MasterOperation
  4657 ;; This function is called by:
  4658 ;;		_I2C_Read1ByteRegister
  4659 ;;		_I2C_Write1ByteRegister
  4660 ;;		_I2C_Read2ByteRegister
  4661 ;;		_I2C_Write2ByteRegister
  4662 ;;		_I2C_WriteNBytes
  4663 ;;		_I2C_ReadDataBlock
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text38
  4668   0024AC                     __ptext38:
  4669                           	callstack 0
  4670   0024AC                     _I2C_MasterWrite:
  4671                           	callstack 19
  4672   0024AC                     
  4673                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4674   0024AC  0E00               	movlw	0
  4675   0024AE  EC52  F010         	call	_I2C_MasterOperation
  4676   0024B2  0012               	return		;funcret
  4677   0024B4                     __end_of_I2C_MasterWrite:
  4678                           	callstack 0
  4679                           
  4680 ;; *************** function _I2C_MasterOperation *****************
  4681 ;; Defined at:
  4682 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  read            1    wreg     _Bool 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  read            1   25[COMRAM] _Bool 
  4687 ;;  returnValue     1   26[COMRAM] enum E358
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      enum E358
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        2 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 8
  4704 ;; This function calls:
  4705 ;;		_I2C_MasterStart
  4706 ;; This function is called by:
  4707 ;;		_I2C_MasterWrite
  4708 ;;		_I2C_MasterRead
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text39
  4713   0020A4                     __ptext39:
  4714                           	callstack 0
  4715   0020A4                     _I2C_MasterOperation:
  4716                           	callstack 19
  4717                           
  4718                           ;incstack = 0
  4719                           ;I2C_MasterOperation@read stored from wreg
  4720   0020A4  6E1A               	movwf	I2C_MasterOperation@read^0,c
  4721   0020A6                     
  4722                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4723   0020A6  0E01               	movlw	1
  4724   0020A8  6E1B               	movwf	I2C_MasterOperation@returnValue^0,c
  4725   0020AA                     
  4726                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  4727   0020AA  0100               	movlb	0	; () banked
  4728   0020AC  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4729   0020AE  EF5B  F010         	goto	u1521
  4730   0020B2  EF5D  F010         	goto	u1520
  4731   0020B6                     u1521:
  4732   0020B6  EF70  F010         	goto	l3485
  4733   0020BA                     u1520:
  4734   0020BA                     
  4735                           ; BSR set to: 0
  4736                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  4737   0020BA  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  4738   0020BC                     
  4739                           ; BSR set to: 0
  4740                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  4741   0020BC  0E00               	movlw	0
  4742   0020BE  6E1B               	movwf	I2C_MasterOperation@returnValue^0,c
  4743   0020C0                     
  4744                           ; BSR set to: 0
  4745                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  4746   0020C0  501A               	movf	I2C_MasterOperation@read^0,w,c
  4747   0020C2  B4D8               	btfsc	status,2,c
  4748   0020C4  EF66  F010         	goto	u1531
  4749   0020C8  EF68  F010         	goto	u1530
  4750   0020CC                     u1531:
  4751   0020CC  EF6C  F010         	goto	l3481
  4752   0020D0                     u1530:
  4753   0020D0                     
  4754                           ; BSR set to: 0
  4755                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4756   0020D0  0E01               	movlw	1
  4757   0020D2  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4758                           
  4759                           ;mcc_generated_files/i2c_master.c: 237:         }
  4760   0020D4  EF6E  F010         	goto	l3483
  4761   0020D8                     l3481:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4765   0020D8  0E02               	movlw	2
  4766   0020DA  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4767   0020DC                     l3483:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  4771   0020DC  EC85  F012         	call	_I2C_MasterStart	;wreg free
  4772   0020E0                     l3485:
  4773                           
  4774                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  4775   0020E0  501B               	movf	I2C_MasterOperation@returnValue^0,w,c
  4776   0020E2  0012               	return		;funcret
  4777   0020E4                     __end_of_I2C_MasterOperation:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _I2C_MasterStart *****************
  4781 ;; Defined at:
  4782 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		None
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 7
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_I2C_MasterOperation
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text40
  4811   00250A                     __ptext40:
  4812                           	callstack 0
  4813   00250A                     _I2C_MasterStart:
  4814                           	callstack 19
  4815   00250A                     
  4816                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  4817   00250A  80C5               	bsf	197,0,c	;volatile
  4818   00250C  0012               	return		;funcret
  4819   00250E                     __end_of_I2C_MasterStart:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _I2C_Close *****************
  4823 ;; Defined at:
  4824 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  returnValue     1   25[COMRAM] enum E358
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      enum E358
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;Total ram usage:        1 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 8
  4845 ;; This function calls:
  4846 ;;		_I2C_MasterClearIrq
  4847 ;;		_I2C_MasterClose
  4848 ;;		_I2C_MasterDisableIrq
  4849 ;; This function is called by:
  4850 ;;		_I2C_Read1ByteRegister
  4851 ;;		_I2C_Write1ByteRegister
  4852 ;;		_I2C_Read2ByteRegister
  4853 ;;		_I2C_Write2ByteRegister
  4854 ;;		_I2C_WriteNBytes
  4855 ;;		_I2C_ReadNBytes
  4856 ;;		_I2C_ReadDataBlock
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text41
  4861   0021FC                     __ptext41:
  4862                           	callstack 0
  4863   0021FC                     _I2C_Close:
  4864                           	callstack 20
  4865   0021FC                     
  4866                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  4867   0021FC  0E01               	movlw	1
  4868   0021FE  6E1A               	movwf	I2C_Close@returnValue^0,c
  4869   002200                     
  4870                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  4871   002200  0100               	movlb	0	; () banked
  4872   002202  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4873   002204  EF06  F011         	goto	u1601
  4874   002208  EF08  F011         	goto	u1600
  4875   00220C                     u1601:
  4876   00220C  EF12  F011         	goto	l3661
  4877   002210                     u1600:
  4878   002210                     
  4879                           ; BSR set to: 0
  4880                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  4881   002210  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  4882                           
  4883                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  4884   002212  697C               	setf	(_I2C_Status+28)& (0+255),b
  4885   002214                     
  4886                           ; BSR set to: 0
  4887                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  4888   002214  EC8B  F012         	call	_I2C_MasterClearIrq	;wreg free
  4889                           
  4890                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  4891   002218  EC87  F012         	call	_I2C_MasterDisableIrq	;wreg free
  4892                           
  4893                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  4894   00221C  EC89  F012         	call	_I2C_MasterClose	;wreg free
  4895   002220                     
  4896                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  4897   002220  C082  F01A         	movff	_I2C_Status+34,I2C_Close@returnValue
  4898   002224                     l3661:
  4899                           
  4900                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  4901   002224  501A               	movf	I2C_Close@returnValue^0,w,c
  4902   002226  0012               	return		;funcret
  4903   002228                     __end_of_I2C_Close:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _I2C_MasterDisableIrq *****************
  4907 ;; Defined at:
  4908 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		None
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 7
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_I2C_Close
  4933 ;;		_I2C_SetTimeOut
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text42
  4938   00250E                     __ptext42:
  4939                           	callstack 0
  4940   00250E                     _I2C_MasterDisableIrq:
  4941                           	callstack 20
  4942   00250E                     
  4943                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  4944   00250E  969D               	bcf	157,3,c	;volatile
  4945   002510  0012               	return		;funcret
  4946   002512                     __end_of_I2C_MasterDisableIrq:
  4947                           	callstack 0
  4948                           
  4949 ;; *************** function _I2C_MasterClose *****************
  4950 ;; Defined at:
  4951 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		None
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;Total ram usage:        0 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 7
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_I2C_Close
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text43
  4980   002512                     __ptext43:
  4981                           	callstack 0
  4982   002512                     _I2C_MasterClose:
  4983                           	callstack 20
  4984   002512                     
  4985                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  4986   002512  9AC6               	bcf	198,5,c	;volatile
  4987   002514  0012               	return		;funcret
  4988   002516                     __end_of_I2C_MasterClose:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _I2C_MasterClearIrq *****************
  4992 ;; Defined at:
  4993 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		None
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 7
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_I2C_Open
  5018 ;;		_I2C_Close
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text44
  5023   002516                     __ptext44:
  5024                           	callstack 0
  5025   002516                     _I2C_MasterClearIrq:
  5026                           	callstack 20
  5027   002516                     
  5028                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  5029   002516  969E               	bcf	158,3,c	;volatile
  5030   002518  0012               	return		;funcret
  5031   00251A                     __end_of_I2C_MasterClearIrq:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  5035 ;; Defined at:
  5036 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:       10 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 6
  5057 ;; This function calls:
  5058 ;;		NULL
  5059 ;;		_I2C_MasterIsr
  5060 ;; This function is called by:
  5061 ;;		Interrupt level 2
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	intcode
  5066   000008                     __pintcode:
  5067                           	callstack 0
  5068   000008                     _INTERRUPT_InterruptManagerHigh:
  5069                           	callstack 19
  5070                           
  5071                           ;incstack = 0
  5072   000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5073   00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  5074   00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  5075   000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  5076   000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  5077   00001A  CFF3 F014          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  5078   00001E  CFF4 F015          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  5079   000022  CFF6 F016          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  5080   000026  CFF7 F017          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  5081   00002A  CFF8 F018          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  5082   00002E  CFF5 F019          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  5083   000032                     
  5084                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  5085   000032  A6A0               	btfss	160,3,c	;volatile
  5086   000034  EF1E  F000         	goto	i2u224_41
  5087   000038  EF20  F000         	goto	i2u224_40
  5088   00003C                     i2u224_41:
  5089   00003C  EF35  F000         	goto	i2l238
  5090   000040                     i2u224_40:
  5091   000040  A6A1               	btfss	161,3,c	;volatile
  5092   000042  EF25  F000         	goto	i2u225_41
  5093   000046  EF27  F000         	goto	i2u225_40
  5094   00004A                     i2u225_41:
  5095   00004A  EF35  F000         	goto	i2l238
  5096   00004E                     i2u225_40:
  5097   00004E                     i2l4339:
  5098                           
  5099                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         MSSP_InterruptHandler();
  5100   00004E  D802               	call	i2u226_48
  5101   000050  EF33  F000         	goto	i2u226_49
  5102   000054                     i2u226_48:
  5103   000054  0005               	push	
  5104   000056  6EFA               	movwf	pclath,c
  5105   000058  5041               	movf	_MSSP_InterruptHandler^0,w,c
  5106   00005A  6EFD               	movwf	tosl,c
  5107   00005C  5042               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  5108   00005E  6EFE               	movwf	tosh,c
  5109   000060  6AFF               	clrf	tosu,c
  5110   000062  50FA               	movf	pclath,w,c
  5111   000064  0012               	return		;indir
  5112   000066                     i2u226_49:
  5113                           
  5114                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  5115   000066  EF45  F000         	goto	i2l242
  5116   00006A                     i2l238:
  5117   00006A  A69D               	btfss	157,3,c	;volatile
  5118   00006C  EF3A  F000         	goto	i2u227_41
  5119   000070  EF3C  F000         	goto	i2u227_40
  5120   000074                     i2u227_41:
  5121   000074  EF45  F000         	goto	i2l242
  5122   000078                     i2u227_40:
  5123   000078  A69E               	btfss	158,3,c	;volatile
  5124   00007A  EF41  F000         	goto	i2u228_41
  5125   00007E  EF43  F000         	goto	i2u228_40
  5126   000082                     i2u228_41:
  5127   000082  EF45  F000         	goto	i2l242
  5128   000086                     i2u228_40:
  5129   000086  EF27  F000         	goto	i2l4339
  5130   00008A                     i2l242:
  5131   00008A  C019  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  5132   00008E  C018  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  5133   000092  C017  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  5134   000096  C016  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  5135   00009A  C015  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  5136   00009E  C014  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  5137   0000A2  C013  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  5138   0000A6  C012  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  5139   0000AA  C011  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5140   0000AE  C010  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5141   0000B2  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5142   0000B4  0011               	retfie		f
  5143   0000B6                     __end_of_INTERRUPT_InterruptManagerHigh:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _I2C_MasterIsr *****************
  5147 ;; Defined at:
  5148 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        0 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 5
  5169 ;; This function calls:
  5170 ;;		_I2C_MasterFsm
  5171 ;; This function is called by:
  5172 ;;		_I2C_Open
  5173 ;;		_INTERRUPT_InterruptManagerHigh
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text46
  5178   0024F4                     __ptext46:
  5179                           	callstack 0
  5180   0024F4                     _I2C_MasterIsr:
  5181                           	callstack 19
  5182   0024F4                     
  5183                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  5184   0024F4  ECF5  F00E         	call	_I2C_MasterFsm	;wreg free
  5185   0024F8  0012               	return		;funcret
  5186   0024FA                     __end_of_I2C_MasterIsr:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _I2C_MasterFsm *****************
  5190 ;; Defined at:
  5191 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;Total ram usage:        2 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 4
  5212 ;; This function calls:
  5213 ;;		_I2C_DO_ADDRESS_NACK
  5214 ;;		_I2C_DO_IDLE
  5215 ;;		_I2C_DO_RCEN
  5216 ;;		_I2C_DO_RESET
  5217 ;;		_I2C_DO_RX
  5218 ;;		_I2C_DO_RX_ACK
  5219 ;;		_I2C_DO_RX_NACK_RESTART
  5220 ;;		_I2C_DO_RX_NACK_STOP
  5221 ;;		_I2C_DO_SEND_ADR_READ
  5222 ;;		_I2C_DO_SEND_ADR_WRITE
  5223 ;;		_I2C_DO_SEND_RESTART
  5224 ;;		_I2C_DO_SEND_RESTART_READ
  5225 ;;		_I2C_DO_SEND_RESTART_WRITE
  5226 ;;		_I2C_DO_SEND_STOP
  5227 ;;		_I2C_DO_TX
  5228 ;;		_I2C_DO_TX_EMPTY
  5229 ;;		_I2C_MasterIsNack
  5230 ;;		i2_I2C_MasterClearIrq
  5231 ;; This function is called by:
  5232 ;;		_I2C_MasterIsr
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text47
  5237   001DEA                     __ptext47:
  5238                           	callstack 0
  5239   001DEA                     _I2C_MasterFsm:
  5240                           	callstack 19
  5241   001DEA                     
  5242                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  5243   001DEA  EC8D  F012         	call	i2_I2C_MasterClearIrq	;wreg free
  5244   001DEE                     
  5245                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5246   001DEE  0100               	movlb	0	; () banked
  5247   001DF0  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  5248   001DF2  EFFD  F00E         	goto	i2u181_41
  5249   001DF6  EFFF  F00E         	goto	i2u181_40
  5250   001DFA                     i2u181_41:
  5251   001DFA  EF0C  F00F         	goto	i2l3939
  5252   001DFE                     i2u181_40:
  5253   001DFE                     
  5254                           ; BSR set to: 0
  5255   001DFE  ECEF  F011         	call	_I2C_MasterIsNack	;wreg free
  5256   001E02  0900               	iorlw	0
  5257   001E04  B4D8               	btfsc	status,2,c
  5258   001E06  EF07  F00F         	goto	i2u182_41
  5259   001E0A  EF09  F00F         	goto	i2u182_40
  5260   001E0E                     i2u182_41:
  5261   001E0E  EF0C  F00F         	goto	i2l3939
  5262   001E12                     i2u182_40:
  5263   001E12                     
  5264                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5265   001E12  0E0F               	movlw	15
  5266   001E14  0100               	movlb	0	; () banked
  5267   001E16  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5268   001E18                     i2l3939:
  5269                           
  5270                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  5271   001E18  0100               	movlb	0	; () banked
  5272   001E1A  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  5273   001E1C  0D02               	mullw	2
  5274   001E1E  0E01               	movlw	low _i2c_fsmStateTable
  5275   001E20  24F3               	addwf	243,w,c
  5276   001E22  6EF6               	movwf	tblptrl,c
  5277   001E24  0E10               	movlw	high _i2c_fsmStateTable
  5278   001E26  20F4               	addwfc	244,w,c
  5279   001E28  6EF7               	movwf	tblptrh,c
  5280   001E2A                     	if	1	;There are 3 active tblptr bytes
  5281   001E2A  6AF8               	clrf	tblptru,c
  5282   001E2C  0E00               	movlw	low (__mediumconst shr (0+16))
  5283   001E2E  22F8               	addwfc	tblptru,f,c
  5284   001E30                     	endif
  5285   001E30  0009               	tblrd		*+
  5286   001E32  CFF5 F00E          	movff	tablat,??_I2C_MasterFsm
  5287   001E36  0009               	tblrd		*+
  5288   001E38  CFF5 F00F          	movff	tablat,??_I2C_MasterFsm+1
  5289   001E3C  D802               	call	i2u183_48
  5290   001E3E  EF2A  F00F         	goto	i2u183_49
  5291   001E42                     i2u183_48:
  5292   001E42  0005               	push	
  5293   001E44  6EFA               	movwf	pclath,c
  5294   001E46  500E               	movf	??_I2C_MasterFsm^0,w,c
  5295   001E48  6EFD               	movwf	tosl,c
  5296   001E4A  500F               	movf	(??_I2C_MasterFsm+1)^0,w,c
  5297   001E4C  6EFE               	movwf	tosh,c
  5298   001E4E  6AFF               	clrf	tosu,c
  5299   001E50  50FA               	movf	pclath,w,c
  5300   001E52  0012               	return		;indir
  5301   001E54                     i2u183_49:
  5302   001E54  0100               	movlb	0	; () banked
  5303   001E56  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5304   001E58                     
  5305                           ; BSR set to: 0
  5306   001E58  0012               	return		;funcret
  5307   001E5A                     __end_of_I2C_MasterFsm:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function i2_I2C_MasterClearIrq *****************
  5311 ;; Defined at:
  5312 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		None
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_I2C_MasterFsm
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text48
  5340   00251A                     __ptext48:
  5341                           	callstack 0
  5342   00251A                     i2_I2C_MasterClearIrq:
  5343                           	callstack 22
  5344   00251A                     
  5345                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  5346   00251A  969E               	bcf	158,3,c	;volatile
  5347   00251C  0012               	return		;funcret
  5348   00251E                     __end_ofi2_I2C_MasterClearIrq:
  5349                           	callstack 0
  5350                           
  5351 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5352 ;; Defined at:
  5353 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      enum E3121
  5360 ;; Registers used:
  5361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;Total ram usage:        2 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 3
  5374 ;; This function calls:
  5375 ;;		NULL
  5376 ;;		_I2C_CallbackReturnReset
  5377 ;;		_I2C_CallbackReturnStop
  5378 ;;		_I2C_DO_SEND_RESTART
  5379 ;;		_I2C_DO_SEND_STOP
  5380 ;;		_rd1RegCompleteHandler
  5381 ;;		_rd2RegCompleteHandler
  5382 ;;		_rdBlkRegCompleteHandler
  5383 ;;		_wr1RegCompleteHandler
  5384 ;;		_wr2RegCompleteHandler
  5385 ;; This function is called by:
  5386 ;;		_I2C_MasterFsm
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text49
  5391   001EC8                     __ptext49:
  5392                           	callstack 0
  5393   001EC8                     _I2C_DO_ADDRESS_NACK:
  5394                           	callstack 19
  5395   001EC8                     
  5396                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  5397   001EC8  0100               	movlb	0	; () banked
  5398   001ECA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5399   001ECC                     
  5400                           ; BSR set to: 0
  5401                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  5402   001ECC  0E02               	movlw	2
  5403   001ECE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5404                           
  5405                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5406   001ED0  EF72  F00F         	goto	i2l3823
  5407   001ED4                     i2l3813:
  5408                           
  5409                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  5410   001ED4  EC6A  F012         	call	_I2C_DO_SEND_RESTART	;wreg free
  5411   001ED8  EF96  F00F         	goto	i2l600
  5412   001EDC                     i2l3817:
  5413                           
  5414                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  5415   001EDC  EC66  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  5416   001EE0  EF96  F00F         	goto	i2l600
  5417   001EE4                     i2l3823:
  5418                           
  5419                           ; BSR set to: 0
  5420   001EE4  C070  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  5421   001EE8  C071  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  5422   001EEC  D802               	call	i2u168_48
  5423   001EEE  EF82  F00F         	goto	i2u168_49
  5424   001EF2                     i2u168_48:
  5425   001EF2  0005               	push	
  5426   001EF4  6EFA               	movwf	pclath,c
  5427   001EF6  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  5428   001EF8  6EFD               	movwf	tosl,c
  5429   001EFA  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  5430   001EFC  6EFE               	movwf	tosh,c
  5431   001EFE  6AFF               	clrf	tosu,c
  5432   001F00  50FA               	movf	pclath,w,c
  5433   001F02  0012               	return		;indir
  5434   001F04                     i2u168_49:
  5435   001F04  6E0C               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  5436   001F06  6A0D               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  5437                           
  5438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5439                           ; Switch size 1, requested type "simple"
  5440                           ; Number of cases is 1, Range of values is 0 to 0
  5441                           ; switch strategies available:
  5442                           ; Name         Instructions Cycles
  5443                           ; simple_byte            4     3 (average)
  5444                           ;	Chosen strategy is simple_byte
  5445   001F08  500D               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  5446   001F0A  0A00               	xorlw	0	; case 0
  5447   001F0C  B4D8               	btfsc	status,2,c
  5448   001F0E  EF8B  F00F         	goto	i2l5505
  5449   001F12  EF6E  F00F         	goto	i2l3817
  5450   001F16                     i2l5505:
  5451                           
  5452                           ; Switch size 1, requested type "simple"
  5453                           ; Number of cases is 2, Range of values is 2 to 3
  5454                           ; switch strategies available:
  5455                           ; Name         Instructions Cycles
  5456                           ; simple_byte            7     4 (average)
  5457                           ;	Chosen strategy is simple_byte
  5458   001F16  500C               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  5459   001F18  0A02               	xorlw	2	; case 2
  5460   001F1A  B4D8               	btfsc	status,2,c
  5461   001F1C  EF6A  F00F         	goto	i2l3813
  5462   001F20  0A01               	xorlw	1	; case 3
  5463   001F22  B4D8               	btfsc	status,2,c
  5464   001F24  EF6A  F00F         	goto	i2l3813
  5465   001F28  EF6E  F00F         	goto	i2l3817
  5466   001F2C                     i2l600:
  5467   001F2C  0012               	return		;funcret
  5468   001F2E                     __end_of_I2C_DO_ADDRESS_NACK:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _I2C_DO_RESET *****************
  5472 ;; Defined at:
  5473 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      enum E3121
  5480 ;; Registers used:
  5481 ;;		wreg, status,2
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_I2C_MasterFsm
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text50
  5501   00244E                     __ptext50:
  5502                           	callstack 0
  5503   00244E                     _I2C_DO_RESET:
  5504                           	callstack 22
  5505   00244E                     
  5506                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  5507   00244E  0100               	movlb	0	; () banked
  5508   002450  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5509   002452                     
  5510                           ; BSR set to: 0
  5511                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  5512   002452  0E00               	movlw	0
  5513   002454  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5514   002456                     
  5515                           ; BSR set to: 0
  5516                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  5517   002456  0E0E               	movlw	14
  5518   002458                     
  5519                           ; BSR set to: 0
  5520   002458  0012               	return		;funcret
  5521   00245A                     __end_of_I2C_DO_RESET:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5525 ;; Defined at:
  5526 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      enum E3121
  5533 ;; Registers used:
  5534 ;;		wreg, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;Total ram usage:        0 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 1
  5547 ;; This function calls:
  5548 ;;		_I2C_MasterSendNack
  5549 ;; This function is called by:
  5550 ;;		_I2C_DO_RX
  5551 ;;		_I2C_MasterFsm
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text51
  5556   0024B4                     __ptext51:
  5557                           	callstack 0
  5558   0024B4                     _I2C_DO_RX_NACK_RESTART:
  5559                           	callstack 21
  5560   0024B4                     
  5561                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  5562   0024B4  EC80  F012         	call	_I2C_MasterSendNack	;wreg free
  5563   0024B8                     
  5564                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  5565   0024B8  0E09               	movlw	9
  5566   0024BA  0012               	return		;funcret
  5567   0024BC                     __end_of_I2C_DO_RX_NACK_RESTART:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5571 ;; Defined at:
  5572 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;		None
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      enum E3121
  5579 ;; Registers used:
  5580 ;;		wreg, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;Total ram usage:        0 bytes
  5591 ;; Hardware stack levels used: 1
  5592 ;; Hardware stack levels required when called: 1
  5593 ;; This function calls:
  5594 ;;		_I2C_MasterSendNack
  5595 ;; This function is called by:
  5596 ;;		_I2C_DO_RX
  5597 ;;		_I2C_MasterFsm
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text52
  5602   0024BC                     __ptext52:
  5603                           	callstack 0
  5604   0024BC                     _I2C_DO_RX_NACK_STOP:
  5605                           	callstack 21
  5606   0024BC                     
  5607                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  5608   0024BC  EC80  F012         	call	_I2C_MasterSendNack	;wreg free
  5609   0024C0                     
  5610                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  5611   0024C0  0E0A               	movlw	10
  5612   0024C2  0012               	return		;funcret
  5613   0024C4                     __end_of_I2C_DO_RX_NACK_STOP:
  5614                           	callstack 0
  5615                           
  5616 ;; *************** function _I2C_DO_RX_ACK *****************
  5617 ;; Defined at:
  5618 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      enum E3121
  5625 ;; Registers used:
  5626 ;;		wreg, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; Hardware stack levels required when called: 1
  5639 ;; This function calls:
  5640 ;;		_I2C_MasterSendAck
  5641 ;; This function is called by:
  5642 ;;		_I2C_MasterFsm
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text53
  5647   0024C4                     __ptext53:
  5648                           	callstack 0
  5649   0024C4                     _I2C_DO_RX_ACK:
  5650                           	callstack 21
  5651   0024C4                     
  5652                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  5653   0024C4  EC7D  F012         	call	_I2C_MasterSendAck	;wreg free
  5654   0024C8                     
  5655                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  5656   0024C8  0E05               	movlw	5
  5657   0024CA  0012               	return		;funcret
  5658   0024CC                     __end_of_I2C_DO_RX_ACK:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _I2C_DO_SEND_STOP *****************
  5662 ;; Defined at:
  5663 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      enum E3121
  5670 ;; Registers used:
  5671 ;;		wreg, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used: 1
  5683 ;; Hardware stack levels required when called: 1
  5684 ;; This function calls:
  5685 ;;		_I2C_MasterStop
  5686 ;; This function is called by:
  5687 ;;		_I2C_DO_TX
  5688 ;;		_I2C_DO_TX_EMPTY
  5689 ;;		_I2C_DO_ADDRESS_NACK
  5690 ;;		_I2C_MasterFsm
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text54
  5695   0024CC                     __ptext54:
  5696                           	callstack 0
  5697   0024CC                     _I2C_DO_SEND_STOP:
  5698                           	callstack 20
  5699   0024CC                     
  5700                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  5701   0024CC  EC99  F012         	call	_I2C_MasterStop	;wreg free
  5702   0024D0                     
  5703                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  5704   0024D0  0E00               	movlw	0
  5705   0024D2  0012               	return		;funcret
  5706   0024D4                     __end_of_I2C_DO_SEND_STOP:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5710 ;; Defined at:
  5711 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      enum E3121
  5718 ;; Registers used:
  5719 ;;		wreg, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;Total ram usage:        0 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 1
  5732 ;; This function calls:
  5733 ;;		_I2C_MasterEnableRestart
  5734 ;; This function is called by:
  5735 ;;		_I2C_DO_TX_EMPTY
  5736 ;;		_I2C_DO_ADDRESS_NACK
  5737 ;;		_I2C_MasterFsm
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text55
  5742   0024D4                     __ptext55:
  5743                           	callstack 0
  5744   0024D4                     _I2C_DO_SEND_RESTART:
  5745                           	callstack 20
  5746   0024D4                     
  5747                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  5748   0024D4  EC9B  F012         	call	_I2C_MasterEnableRestart	;wreg free
  5749   0024D8                     
  5750                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  5751   0024D8  0E01               	movlw	1
  5752   0024DA  0012               	return		;funcret
  5753   0024DC                     __end_of_I2C_DO_SEND_RESTART:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5757 ;; Defined at:
  5758 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      enum E3121
  5765 ;; Registers used:
  5766 ;;		wreg, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 1
  5779 ;; This function calls:
  5780 ;;		_I2C_MasterEnableRestart
  5781 ;; This function is called by:
  5782 ;;		_I2C_DO_TX
  5783 ;;		_I2C_MasterFsm
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text56
  5788   0024DC                     __ptext56:
  5789                           	callstack 0
  5790   0024DC                     _I2C_DO_SEND_RESTART_WRITE:
  5791                           	callstack 20
  5792   0024DC                     
  5793                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  5794   0024DC  EC9B  F012         	call	_I2C_MasterEnableRestart	;wreg free
  5795   0024E0                     
  5796                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  5797   0024E0  0E02               	movlw	2
  5798   0024E2  0012               	return		;funcret
  5799   0024E4                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5800                           	callstack 0
  5801                           
  5802 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5803 ;; Defined at:
  5804 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      enum E3121
  5811 ;; Registers used:
  5812 ;;		wreg, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;Total ram usage:        0 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 1
  5825 ;; This function calls:
  5826 ;;		_I2C_MasterEnableRestart
  5827 ;; This function is called by:
  5828 ;;		_I2C_DO_TX
  5829 ;;		_I2C_MasterFsm
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text57
  5834   0024E4                     __ptext57:
  5835                           	callstack 0
  5836   0024E4                     _I2C_DO_SEND_RESTART_READ:
  5837                           	callstack 20
  5838   0024E4                     
  5839                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  5840   0024E4  EC9B  F012         	call	_I2C_MasterEnableRestart	;wreg free
  5841   0024E8                     
  5842                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  5843   0024E8  0E01               	movlw	1
  5844   0024EA  0012               	return		;funcret
  5845   0024EC                     __end_of_I2C_DO_SEND_RESTART_READ:
  5846                           	callstack 0
  5847                           
  5848 ;; *************** function _I2C_DO_RCEN *****************
  5849 ;; Defined at:
  5850 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      enum E3121
  5857 ;; Registers used:
  5858 ;;		wreg, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;Total ram usage:        0 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 1
  5871 ;; This function calls:
  5872 ;;		_I2C_MasterStartRx
  5873 ;; This function is called by:
  5874 ;;		_I2C_MasterFsm
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text58
  5879   00245A                     __ptext58:
  5880                           	callstack 0
  5881   00245A                     _I2C_DO_RCEN:
  5882                           	callstack 21
  5883   00245A                     
  5884                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  5885   00245A  0100               	movlb	0	; () banked
  5886   00245C  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5887   00245E                     
  5888                           ; BSR set to: 0
  5889                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  5890   00245E  EC93  F012         	call	_I2C_MasterStartRx	;wreg free
  5891   002462                     
  5892                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  5893   002462  0E04               	movlw	4
  5894   002464  0012               	return		;funcret
  5895   002466                     __end_of_I2C_DO_RCEN:
  5896                           	callstack 0
  5897                           
  5898 ;; *************** function _I2C_DO_RX *****************
  5899 ;; Defined at:
  5900 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      enum E3121
  5907 ;; Registers used:
  5908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;Total ram usage:        2 bytes
  5919 ;; Hardware stack levels used: 1
  5920 ;; Hardware stack levels required when called: 3
  5921 ;; This function calls:
  5922 ;;		NULL
  5923 ;;		_I2C_CallbackReturnReset
  5924 ;;		_I2C_CallbackReturnStop
  5925 ;;		_I2C_DO_RX_NACK_RESTART
  5926 ;;		_I2C_DO_RX_NACK_STOP
  5927 ;;		_I2C_MasterGetRxData
  5928 ;;		_I2C_MasterSendAck
  5929 ;;		_rd1RegCompleteHandler
  5930 ;;		_rd2RegCompleteHandler
  5931 ;;		_rdBlkRegCompleteHandler
  5932 ;;		_wr1RegCompleteHandler
  5933 ;;		_wr2RegCompleteHandler
  5934 ;; This function is called by:
  5935 ;;		_I2C_MasterFsm
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text59
  5940   001934                     __ptext59:
  5941                           	callstack 0
  5942   001934                     _I2C_DO_RX:
  5943                           	callstack 19
  5944   001934                     
  5945                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5946   001934  EC91  F012         	call	_I2C_MasterGetRxData	;wreg free
  5947   001938  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5948   00193C  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5949   001940  6EDF               	movwf	indf2,c
  5950   001942  0100               	movlb	0	; () banked
  5951   001944  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5952   001946  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5953   001948                     
  5954                           ; BSR set to: 0
  5955                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  5956   001948  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5957   00194A  A0D8               	btfss	status,0,c
  5958   00194C  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5959   00194E  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5960   001950  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5961   001952  B4D8               	btfsc	status,2,c
  5962   001954  EFAE  F00C         	goto	i2u165_41
  5963   001958  EFB0  F00C         	goto	i2u165_40
  5964   00195C                     i2u165_41:
  5965   00195C  EFB5  F00C         	goto	i2l537
  5966   001960                     i2u165_40:
  5967   001960                     
  5968                           ; BSR set to: 0
  5969                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  5970   001960  EC7D  F012         	call	_I2C_MasterSendAck	;wreg free
  5971   001964                     
  5972                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  5973   001964  0E05               	movlw	5
  5974   001966  EFEC  F00C         	goto	i2l538
  5975   00196A                     i2l537:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  5979   00196A  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5980                           
  5981                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5982   00196C  EFC0  F00C         	goto	i2l3757
  5983   001970                     i2l3747:
  5984                           
  5985                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  5986   001970  EC5A  F012         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  5987   001974  EFEC  F00C         	goto	i2l538
  5988   001978                     i2l3751:
  5989                           
  5990                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  5991   001978  EC5E  F012         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  5992   00197C  EFEC  F00C         	goto	i2l538
  5993   001980                     i2l3757:
  5994                           
  5995                           ; BSR set to: 0
  5996   001980  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5997   001984  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5998   001988  D802               	call	i2u166_48
  5999   00198A  EFD0  F00C         	goto	i2u166_49
  6000   00198E                     i2u166_48:
  6001   00198E  0005               	push	
  6002   001990  6EFA               	movwf	pclath,c
  6003   001992  5160               	movf	_I2C_Status& (0+255),w,b
  6004   001994  6EFD               	movwf	tosl,c
  6005   001996  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  6006   001998  6EFE               	movwf	tosh,c
  6007   00199A  6AFF               	clrf	tosu,c
  6008   00199C  50FA               	movf	pclath,w,c
  6009   00199E  0012               	return		;indir
  6010   0019A0                     i2u166_49:
  6011   0019A0  6E0C               	movwf	??_I2C_DO_RX^0,c
  6012   0019A2  6A0D               	clrf	(??_I2C_DO_RX+1)^0,c
  6013                           
  6014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6015                           ; Switch size 1, requested type "simple"
  6016                           ; Number of cases is 1, Range of values is 0 to 0
  6017                           ; switch strategies available:
  6018                           ; Name         Instructions Cycles
  6019                           ; simple_byte            4     3 (average)
  6020                           ;	Chosen strategy is simple_byte
  6021   0019A4  500D               	movf	(??_I2C_DO_RX+1)^0,w,c
  6022   0019A6  0A00               	xorlw	0	; case 0
  6023   0019A8  B4D8               	btfsc	status,2,c
  6024   0019AA  EFD9  F00C         	goto	i2l5507
  6025   0019AE  EFBC  F00C         	goto	i2l3751
  6026   0019B2                     i2l5507:
  6027                           
  6028                           ; Switch size 1, requested type "simple"
  6029                           ; Number of cases is 4, Range of values is 1 to 4
  6030                           ; switch strategies available:
  6031                           ; Name         Instructions Cycles
  6032                           ; simple_byte           13     7 (average)
  6033                           ;	Chosen strategy is simple_byte
  6034   0019B2  500C               	movf	??_I2C_DO_RX^0,w,c
  6035   0019B4  0A01               	xorlw	1	; case 1
  6036   0019B6  B4D8               	btfsc	status,2,c
  6037   0019B8  EFBC  F00C         	goto	i2l3751
  6038   0019BC  0A03               	xorlw	3	; case 2
  6039   0019BE  B4D8               	btfsc	status,2,c
  6040   0019C0  EFB8  F00C         	goto	i2l3747
  6041   0019C4  0A01               	xorlw	1	; case 3
  6042   0019C6  B4D8               	btfsc	status,2,c
  6043   0019C8  EFB8  F00C         	goto	i2l3747
  6044   0019CC  0A07               	xorlw	7	; case 4
  6045   0019CE  B4D8               	btfsc	status,2,c
  6046   0019D0  EFBC  F00C         	goto	i2l3751
  6047   0019D4  EFBC  F00C         	goto	i2l3751
  6048   0019D8                     i2l538:
  6049   0019D8  0012               	return		;funcret
  6050   0019DA                     __end_of_I2C_DO_RX:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function _I2C_DO_TX *****************
  6054 ;; Defined at:
  6055 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      enum E3121
  6062 ;; Registers used:
  6063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;Total ram usage:        2 bytes
  6074 ;; Hardware stack levels used: 1
  6075 ;; Hardware stack levels required when called: 3
  6076 ;; This function calls:
  6077 ;;		NULL
  6078 ;;		_I2C_CallbackReturnReset
  6079 ;;		_I2C_CallbackReturnStop
  6080 ;;		_I2C_DO_SEND_RESTART_READ
  6081 ;;		_I2C_DO_SEND_RESTART_WRITE
  6082 ;;		_I2C_DO_SEND_STOP
  6083 ;;		_I2C_MasterIsNack
  6084 ;;		_I2C_MasterSendTxData
  6085 ;;		_rd1RegCompleteHandler
  6086 ;;		_rd2RegCompleteHandler
  6087 ;;		_rdBlkRegCompleteHandler
  6088 ;;		_wr1RegCompleteHandler
  6089 ;;		_wr2RegCompleteHandler
  6090 ;; This function is called by:
  6091 ;;		_I2C_MasterFsm
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text60
  6096   0017C0                     __ptext60:
  6097                           	callstack 0
  6098   0017C0                     _I2C_DO_TX:
  6099                           	callstack 19
  6100   0017C0                     
  6101                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  6102   0017C0  ECEF  F011         	call	_I2C_MasterIsNack	;wreg free
  6103   0017C4  0900               	iorlw	0
  6104   0017C6  B4D8               	btfsc	status,2,c
  6105   0017C8  EFE8  F00B         	goto	i2u162_41
  6106   0017CC  EFEA  F00B         	goto	i2u162_40
  6107   0017D0                     i2u162_41:
  6108   0017D0  EF25  F00C         	goto	i2l521
  6109   0017D4                     i2u162_40:
  6110   0017D4  EFF8  F00B         	goto	i2l3717
  6111   0017D8                     i2l3703:
  6112                           
  6113                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6114   0017D8  EC72  F012         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  6115   0017DC  EF41  F00C         	goto	i2l524
  6116   0017E0                     i2l3707:
  6117                           
  6118                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6119   0017E0  EC6E  F012         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  6120   0017E4  EF41  F00C         	goto	i2l524
  6121   0017E8                     i2l3711:
  6122                           
  6123                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  6124   0017E8  EC66  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  6125   0017EC  EF41  F00C         	goto	i2l524
  6126   0017F0                     i2l3717:
  6127   0017F0  C072  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  6128   0017F4  C073  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  6129   0017F8  D802               	call	i2u163_48
  6130   0017FA  EF09  F00C         	goto	i2u163_49
  6131   0017FE                     i2u163_48:
  6132   0017FE  0005               	push	
  6133   001800  6EFA               	movwf	pclath,c
  6134   001802  0100               	movlb	0	; () banked
  6135   001804  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  6136   001806  6EFD               	movwf	tosl,c
  6137   001808  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  6138   00180A  6EFE               	movwf	tosh,c
  6139   00180C  6AFF               	clrf	tosu,c
  6140   00180E  50FA               	movf	pclath,w,c
  6141   001810  0012               	return		;indir
  6142   001812                     i2u163_49:
  6143   001812  6E0C               	movwf	??_I2C_DO_TX^0,c
  6144   001814  6A0D               	clrf	(??_I2C_DO_TX+1)^0,c
  6145                           
  6146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6147                           ; Switch size 1, requested type "simple"
  6148                           ; Number of cases is 1, Range of values is 0 to 0
  6149                           ; switch strategies available:
  6150                           ; Name         Instructions Cycles
  6151                           ; simple_byte            4     3 (average)
  6152                           ;	Chosen strategy is simple_byte
  6153   001816  500D               	movf	(??_I2C_DO_TX+1)^0,w,c
  6154   001818  0A00               	xorlw	0	; case 0
  6155   00181A  B4D8               	btfsc	status,2,c
  6156   00181C  EF12  F00C         	goto	i2l5509
  6157   001820  EFF4  F00B         	goto	i2l3711
  6158   001824                     i2l5509:
  6159                           
  6160                           ; Switch size 1, requested type "simple"
  6161                           ; Number of cases is 4, Range of values is 1 to 4
  6162                           ; switch strategies available:
  6163                           ; Name         Instructions Cycles
  6164                           ; simple_byte           13     7 (average)
  6165                           ;	Chosen strategy is simple_byte
  6166   001824  500C               	movf	??_I2C_DO_TX^0,w,c
  6167   001826  0A01               	xorlw	1	; case 1
  6168   001828  B4D8               	btfsc	status,2,c
  6169   00182A  EFF4  F00B         	goto	i2l3711
  6170   00182E  0A03               	xorlw	3	; case 2
  6171   001830  B4D8               	btfsc	status,2,c
  6172   001832  EFEC  F00B         	goto	i2l3703
  6173   001836  0A01               	xorlw	1	; case 3
  6174   001838  B4D8               	btfsc	status,2,c
  6175   00183A  EFF0  F00B         	goto	i2l3707
  6176   00183E  0A07               	xorlw	7	; case 4
  6177   001840  B4D8               	btfsc	status,2,c
  6178   001842  EFF4  F00B         	goto	i2l3711
  6179   001846  EFF4  F00B         	goto	i2l3711
  6180   00184A                     i2l521:
  6181                           
  6182                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  6183   00184A  0100               	movlb	0	; () banked
  6184   00184C  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  6185   00184E                     
  6186                           ; BSR set to: 0
  6187                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6188   00184E  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  6189   001852  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  6190   001856  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  6191   001858  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  6192   00185A  50DF               	movf	indf2,w,c
  6193   00185C  EC76  F012         	call	_I2C_MasterSendTxData
  6194   001860                     
  6195                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6196   001860  0100               	movlb	0	; () banked
  6197   001862  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  6198   001864  A0D8               	btfss	status,0,c
  6199   001866  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  6200   001868  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  6201   00186A  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  6202   00186C  A4D8               	btfss	status,2,c
  6203   00186E  EF3B  F00C         	goto	i2u164_41
  6204   001872  EF3D  F00C         	goto	i2u164_40
  6205   001876                     i2u164_41:
  6206   001876  EF40  F00C         	goto	i2l3725
  6207   00187A                     i2u164_40:
  6208   00187A                     
  6209                           ; BSR set to: 0
  6210   00187A  0E06               	movlw	6
  6211   00187C  EF41  F00C         	goto	i2l524
  6212   001880                     i2l3725:
  6213                           
  6214                           ; BSR set to: 0
  6215   001880  0E03               	movlw	3
  6216   001882                     i2l524:
  6217   001882  0012               	return		;funcret
  6218   001884                     __end_of_I2C_DO_TX:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6222 ;; Defined at:
  6223 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      enum E3121
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 1
  6244 ;; This function calls:
  6245 ;;		_I2C_MasterSendTxData
  6246 ;; This function is called by:
  6247 ;;		_I2C_MasterFsm
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text61
  6252   002440                     __ptext61:
  6253                           	callstack 0
  6254   002440                     _I2C_DO_SEND_ADR_WRITE:
  6255                           	callstack 21
  6256   002440                     
  6257                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  6258   002440  0100               	movlb	0	; () banked
  6259   002442  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  6260   002444                     
  6261                           ; BSR set to: 0
  6262                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
  6263   002444  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  6264   002446  EC76  F012         	call	_I2C_MasterSendTxData
  6265   00244A                     
  6266                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  6267   00244A  0E03               	movlw	3
  6268   00244C  0012               	return		;funcret
  6269   00244E                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6273 ;; Defined at:
  6274 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      enum E3121
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; Hardware stack levels required when called: 1
  6295 ;; This function calls:
  6296 ;;		_I2C_MasterSendTxData
  6297 ;; This function is called by:
  6298 ;;		_I2C_MasterFsm
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text62
  6303   002414                     __ptext62:
  6304                           	callstack 0
  6305   002414                     _I2C_DO_SEND_ADR_READ:
  6306                           	callstack 21
  6307   002414                     
  6308                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  6309   002414  0100               	movlb	0	; () banked
  6310   002416  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  6311   002418                     
  6312                           ; BSR set to: 0
  6313                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress | 1));
  6314   002418  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  6315   00241A  0901               	iorlw	1
  6316   00241C  EC76  F012         	call	_I2C_MasterSendTxData
  6317   002420                     
  6318                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  6319   002420  0E05               	movlw	5
  6320   002422  0012               	return		;funcret
  6321   002424                     __end_of_I2C_DO_SEND_ADR_READ:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function _I2C_DO_IDLE *****************
  6325 ;; Defined at:
  6326 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      enum E3121
  6333 ;; Registers used:
  6334 ;;		wreg, status,2
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_I2C_MasterFsm
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text63
  6354   002466                     __ptext63:
  6355                           	callstack 0
  6356   002466                     _I2C_DO_IDLE:
  6357                           	callstack 22
  6358   002466                     
  6359                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  6360   002466  0100               	movlb	0	; () banked
  6361   002468  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  6362   00246A                     
  6363                           ; BSR set to: 0
  6364                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  6365   00246A  0E00               	movlw	0
  6366   00246C  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  6367   00246E                     
  6368                           ; BSR set to: 0
  6369                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  6370   00246E  0E0E               	movlw	14
  6371   002470                     
  6372                           ; BSR set to: 0
  6373   002470  0012               	return		;funcret
  6374   002472                     __end_of_I2C_DO_IDLE:
  6375                           	callstack 0
  6376                           
  6377 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6378 ;; Defined at:
  6379 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;		None
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  1    wreg      enum E3121
  6386 ;; Registers used:
  6387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;Total ram usage:        2 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; Hardware stack levels required when called: 3
  6400 ;; This function calls:
  6401 ;;		NULL
  6402 ;;		_I2C_CallbackReturnReset
  6403 ;;		_I2C_CallbackReturnStop
  6404 ;;		_I2C_DO_SEND_RESTART
  6405 ;;		_I2C_DO_SEND_STOP
  6406 ;;		_I2C_MasterSetIrq
  6407 ;;		_rd1RegCompleteHandler
  6408 ;;		_rd2RegCompleteHandler
  6409 ;;		_rdBlkRegCompleteHandler
  6410 ;;		_wr1RegCompleteHandler
  6411 ;;		_wr2RegCompleteHandler
  6412 ;; This function is called by:
  6413 ;;		_I2C_MasterFsm
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text64
  6418   001C0E                     __ptext64:
  6419                           	callstack 0
  6420   001C0E                     _I2C_DO_TX_EMPTY:
  6421                           	callstack 19
  6422   001C0E                     
  6423                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  6424   001C0E  0100               	movlb	0	; () banked
  6425   001C10  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  6426                           
  6427                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6428   001C12  EF18  F00E         	goto	i2l3789
  6429   001C16                     i2l3773:
  6430                           
  6431                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  6432   001C16  EC6A  F012         	call	_I2C_DO_SEND_RESTART	;wreg free
  6433   001C1A  EF44  F00E         	goto	i2l555
  6434   001C1E                     i2l3777:
  6435                           
  6436                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  6437   001C1E  EC8F  F012         	call	_I2C_MasterSetIrq	;wreg free
  6438   001C22                     
  6439                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  6440   001C22  0E03               	movlw	3
  6441   001C24  EF44  F00E         	goto	i2l555
  6442   001C28                     i2l3783:
  6443                           
  6444                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  6445   001C28  EC66  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  6446   001C2C  EF44  F00E         	goto	i2l555
  6447   001C30                     i2l3789:
  6448                           
  6449                           ; BSR set to: 0
  6450   001C30  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  6451   001C34  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  6452   001C38  D802               	call	i2u167_48
  6453   001C3A  EF28  F00E         	goto	i2u167_49
  6454   001C3E                     i2u167_48:
  6455   001C3E  0005               	push	
  6456   001C40  6EFA               	movwf	pclath,c
  6457   001C42  5160               	movf	_I2C_Status& (0+255),w,b
  6458   001C44  6EFD               	movwf	tosl,c
  6459   001C46  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  6460   001C48  6EFE               	movwf	tosh,c
  6461   001C4A  6AFF               	clrf	tosu,c
  6462   001C4C  50FA               	movf	pclath,w,c
  6463   001C4E  0012               	return		;indir
  6464   001C50                     i2u167_49:
  6465   001C50  6E0C               	movwf	??_I2C_DO_TX_EMPTY^0,c
  6466   001C52  6A0D               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  6467                           
  6468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6469                           ; Switch size 1, requested type "simple"
  6470                           ; Number of cases is 1, Range of values is 0 to 0
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte            4     3 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475   001C54  500D               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  6476   001C56  0A00               	xorlw	0	; case 0
  6477   001C58  B4D8               	btfsc	status,2,c
  6478   001C5A  EF31  F00E         	goto	i2l5511
  6479   001C5E  EF14  F00E         	goto	i2l3783
  6480   001C62                     i2l5511:
  6481                           
  6482                           ; Switch size 1, requested type "simple"
  6483                           ; Number of cases is 4, Range of values is 1 to 4
  6484                           ; switch strategies available:
  6485                           ; Name         Instructions Cycles
  6486                           ; simple_byte           13     7 (average)
  6487                           ;	Chosen strategy is simple_byte
  6488   001C62  500C               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  6489   001C64  0A01               	xorlw	1	; case 1
  6490   001C66  B4D8               	btfsc	status,2,c
  6491   001C68  EF14  F00E         	goto	i2l3783
  6492   001C6C  0A03               	xorlw	3	; case 2
  6493   001C6E  B4D8               	btfsc	status,2,c
  6494   001C70  EF0B  F00E         	goto	i2l3773
  6495   001C74  0A01               	xorlw	1	; case 3
  6496   001C76  B4D8               	btfsc	status,2,c
  6497   001C78  EF0B  F00E         	goto	i2l3773
  6498   001C7C  0A07               	xorlw	7	; case 4
  6499   001C7E  B4D8               	btfsc	status,2,c
  6500   001C80  EF0F  F00E         	goto	i2l3777
  6501   001C84  EF14  F00E         	goto	i2l3783
  6502   001C88                     i2l555:
  6503   001C88  0012               	return		;funcret
  6504   001C8A                     __end_of_I2C_DO_TX_EMPTY:
  6505                           	callstack 0
  6506                           
  6507 ;; *************** function _I2C_MasterSetIrq *****************
  6508 ;; Defined at:
  6509 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;		None
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  1    wreg      void 
  6516 ;; Registers used:
  6517 ;;		None
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;Total ram usage:        0 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_I2C_DO_TX_EMPTY
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text65
  6537   00251E                     __ptext65:
  6538                           	callstack 0
  6539   00251E                     _I2C_MasterSetIrq:
  6540                           	callstack 21
  6541   00251E                     
  6542                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  6543   00251E  869E               	bsf	158,3,c	;volatile
  6544   002520  0012               	return		;funcret
  6545   002522                     __end_of_I2C_MasterSetIrq:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function _I2C_MasterIsNack *****************
  6549 ;; Defined at:
  6550 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;		None
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      _Bool 
  6557 ;; Registers used:
  6558 ;;		wreg
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;Total ram usage:        0 bytes
  6569 ;; Hardware stack levels used: 1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_I2C_MasterFsm
  6574 ;;		_I2C_DO_TX
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text66
  6579   0023DE                     __ptext66:
  6580                           	callstack 0
  6581   0023DE                     _I2C_MasterIsNack:
  6582                           	callstack 22
  6583   0023DE                     
  6584                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  6585   0023DE  BCC5               	btfsc	197,6,c	;volatile
  6586   0023E0  EFF4  F011         	goto	i2u155_41
  6587   0023E4  EFF7  F011         	goto	i2u155_40
  6588   0023E8                     i2u155_41:
  6589   0023E8  0E01               	movlw	1
  6590   0023EA  EFF8  F011         	goto	i2u155_46
  6591   0023EE                     i2u155_40:
  6592   0023EE  0E00               	movlw	0
  6593   0023F0                     i2u155_46:
  6594   0023F0  0012               	return		;funcret
  6595   0023F2                     __end_of_I2C_MasterIsNack:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _I2C_MasterSendTxData *****************
  6599 ;; Defined at:
  6600 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  data            1    wreg     unsigned char 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  data            1    0[COMRAM] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      void 
  6607 ;; Registers used:
  6608 ;;		wreg
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;Total ram usage:        1 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; This function calls:
  6621 ;;		Nothing
  6622 ;; This function is called by:
  6623 ;;		_I2C_DO_SEND_ADR_READ
  6624 ;;		_I2C_DO_SEND_ADR_WRITE
  6625 ;;		_I2C_DO_TX
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text67
  6630   0024EC                     __ptext67:
  6631                           	callstack 0
  6632   0024EC                     _I2C_MasterSendTxData:
  6633                           	callstack 21
  6634                           
  6635                           ;incstack = 0
  6636                           ;I2C_MasterSendTxData@data stored from wreg
  6637   0024EC  6E01               	movwf	I2C_MasterSendTxData@data^0,c
  6638   0024EE                     
  6639                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  6640   0024EE  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  6641   0024F2  0012               	return		;funcret
  6642   0024F4                     __end_of_I2C_MasterSendTxData:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function _I2C_MasterSendAck *****************
  6646 ;; Defined at:
  6647 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		None
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;Total ram usage:        0 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_I2C_DO_RX
  6671 ;;		_I2C_DO_RX_ACK
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text68
  6676   0024FA                     __ptext68:
  6677                           	callstack 0
  6678   0024FA                     _I2C_MasterSendAck:
  6679                           	callstack 21
  6680   0024FA                     
  6681                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  6682   0024FA  9AC5               	bcf	197,5,c	;volatile
  6683                           
  6684                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  6685   0024FC  88C5               	bsf	197,4,c	;volatile
  6686   0024FE  0012               	return		;funcret
  6687   002500                     __end_of_I2C_MasterSendAck:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function _I2C_MasterGetRxData *****************
  6691 ;; Defined at:
  6692 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      unsigned char 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;Total ram usage:        0 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_I2C_DO_RX
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text69
  6720   002522                     __ptext69:
  6721                           	callstack 0
  6722   002522                     _I2C_MasterGetRxData:
  6723                           	callstack 21
  6724   002522                     
  6725                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  6726   002522  50C9               	movf	201,w,c	;volatile
  6727   002524  0012               	return		;funcret
  6728   002526                     __end_of_I2C_MasterGetRxData:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function _I2C_MasterSendNack *****************
  6732 ;; Defined at:
  6733 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		None
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used: 1
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_I2C_DO_RX_NACK_STOP
  6757 ;;		_I2C_DO_RX_NACK_RESTART
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text70
  6762   002500                     __ptext70:
  6763                           	callstack 0
  6764   002500                     _I2C_MasterSendNack:
  6765                           	callstack 21
  6766   002500                     
  6767                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  6768   002500  8AC5               	bsf	197,5,c	;volatile
  6769                           
  6770                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  6771   002502  88C5               	bsf	197,4,c	;volatile
  6772   002504  0012               	return		;funcret
  6773   002506                     __end_of_I2C_MasterSendNack:
  6774                           	callstack 0
  6775                           
  6776 ;; *************** function _I2C_MasterStartRx *****************
  6777 ;; Defined at:
  6778 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		None
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used: 1
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_I2C_DO_RCEN
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text71
  6806   002526                     __ptext71:
  6807                           	callstack 0
  6808   002526                     _I2C_MasterStartRx:
  6809                           	callstack 21
  6810   002526                     
  6811                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  6812   002526  86C5               	bsf	197,3,c	;volatile
  6813   002528  0012               	return		;funcret
  6814   00252A                     __end_of_I2C_MasterStartRx:
  6815                           	callstack 0
  6816                           
  6817 ;; *************** function _I2C_CallbackReturnReset *****************
  6818 ;; Defined at:
  6819 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  funPtr          2    9[COMRAM] PTR void 
  6822 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6823 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      enum E363
  6828 ;; Registers used:
  6829 ;;		wreg
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;Total ram usage:        2 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_I2C_Open
  6845 ;;		_I2C_DO_TX
  6846 ;;		_I2C_DO_RX
  6847 ;;		_I2C_DO_TX_EMPTY
  6848 ;;		_I2C_DO_ADDRESS_NACK
  6849 ;;		_I2C_DO_RX_EMPTY
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text72
  6854   00252A                     __ptext72:
  6855                           	callstack 0
  6856   00252A                     _I2C_CallbackReturnReset:
  6857                           	callstack 21
  6858   00252A                     
  6859                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  6860   00252A  0E05               	movlw	5
  6861   00252C  0012               	return		;funcret
  6862   00252E                     __end_of_I2C_CallbackReturnReset:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _I2C_CallbackReturnStop *****************
  6866 ;; Defined at:
  6867 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  funPtr          2    9[COMRAM] PTR void 
  6870 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6871 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1    wreg      enum E363
  6876 ;; Registers used:
  6877 ;;		wreg
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;Total ram usage:        2 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_I2C_Open
  6893 ;;		_I2C_SetCallback
  6894 ;;		i2_I2C_SetCallback
  6895 ;;		_I2C_DO_TX
  6896 ;;		_I2C_DO_RX
  6897 ;;		_I2C_DO_TX_EMPTY
  6898 ;;		_I2C_DO_ADDRESS_NACK
  6899 ;;		_I2C_DO_RX_EMPTY
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text73
  6904   00252E                     __ptext73:
  6905                           	callstack 0
  6906   00252E                     _I2C_CallbackReturnStop:
  6907                           	callstack 21
  6908   00252E                     
  6909                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  6910   00252E  0E01               	movlw	1
  6911   002530  0012               	return		;funcret
  6912   002532                     __end_of_I2C_CallbackReturnStop:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _rdBlkRegCompleteHandler *****************
  6916 ;; Defined at:
  6917 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  ptr             2    9[COMRAM] PTR void 
  6920 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6921 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1    wreg      enum E363
  6926 ;; Registers used:
  6927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;Total ram usage:        2 bytes
  6938 ;; Hardware stack levels used: 1
  6939 ;; Hardware stack levels required when called: 2
  6940 ;; This function calls:
  6941 ;;		i2_I2C_SetBuffer
  6942 ;;		i2_I2C_SetDataCompleteCallback
  6943 ;; This function is called by:
  6944 ;;		_I2C_ReadDataBlock
  6945 ;;		_I2C_DO_TX
  6946 ;;		_I2C_DO_RX
  6947 ;;		_I2C_DO_TX_EMPTY
  6948 ;;		_I2C_DO_ADDRESS_NACK
  6949 ;;		_I2C_DO_RX_EMPTY
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text74
  6954   0020E4                     __ptext74:
  6955                           	callstack 0
  6956   0020E4                     _rdBlkRegCompleteHandler:
  6957                           	callstack 19
  6958   0020E4                     
  6959                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6960   0020E4  EE20 F002          	lfsr	2,2
  6961   0020E8  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  6962   0020EA  26D9               	addwf	fsr2l,f,c
  6963   0020EC  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  6964   0020EE  22DA               	addwfc	fsr2h,f,c
  6965   0020F0  CFDE F001          	movff	postinc2,i2I2C_SetBuffer@buffer
  6966   0020F4  CFDD F002          	movff	postdec2,i2I2C_SetBuffer@buffer+1
  6967   0020F8  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  6968   0020FC  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  6969   002100  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
  6970   002104  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
  6971   002108  EC7E  F011         	call	i2_I2C_SetBuffer	;wreg free
  6972   00210C                     
  6973                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6974   00210C  0E00               	movlw	0
  6975   00210E  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  6976   002110  0E00               	movlw	0
  6977   002112  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  6978   002114  0E00               	movlw	0
  6979   002116  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  6980   002118  0E00               	movlw	0
  6981   00211A  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  6982   00211C  ECB9  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  6983   002120                     
  6984                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6985   002120  0E02               	movlw	2
  6986   002122  0012               	return		;funcret
  6987   002124                     __end_of_rdBlkRegCompleteHandler:
  6988                           	callstack 0
  6989                           
  6990 ;; *************** function _wr1RegCompleteHandler *****************
  6991 ;; Defined at:
  6992 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  ptr             2    9[COMRAM] PTR void 
  6995 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6996 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;		None
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  1    wreg      enum E363
  7001 ;; Registers used:
  7002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;Total ram usage:        2 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 2
  7015 ;; This function calls:
  7016 ;;		i2_I2C_SetBuffer
  7017 ;;		i2_I2C_SetDataCompleteCallback
  7018 ;; This function is called by:
  7019 ;;		_I2C_Write1ByteRegister
  7020 ;;		_I2C_DO_TX
  7021 ;;		_I2C_DO_RX
  7022 ;;		_I2C_DO_TX_EMPTY
  7023 ;;		_I2C_DO_ADDRESS_NACK
  7024 ;;		_I2C_DO_RX_EMPTY
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text75
  7029   002228                     __ptext75:
  7030                           	callstack 0
  7031   002228                     _wr1RegCompleteHandler:
  7032                           	callstack 19
  7033   002228                     
  7034                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7035   002228  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7036   00222C  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7037   002230  0E00               	movlw	0
  7038   002232  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7039   002234  0E01               	movlw	1
  7040   002236  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7041   002238  EC7E  F011         	call	i2_I2C_SetBuffer	;wreg free
  7042   00223C                     
  7043                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7044   00223C  0E00               	movlw	0
  7045   00223E  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7046   002240  0E00               	movlw	0
  7047   002242  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7048   002244  0E00               	movlw	0
  7049   002246  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7050   002248  0E00               	movlw	0
  7051   00224A  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7052   00224C  ECB9  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7053   002250                     
  7054                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7055   002250  0E04               	movlw	4
  7056   002252  0012               	return		;funcret
  7057   002254                     __end_of_wr1RegCompleteHandler:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function _rd2RegCompleteHandler *****************
  7061 ;; Defined at:
  7062 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  ptr             2    9[COMRAM] PTR void 
  7065 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7066 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      enum E363
  7071 ;; Registers used:
  7072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;Total ram usage:        2 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; Hardware stack levels required when called: 2
  7085 ;; This function calls:
  7086 ;;		i2_I2C_SetBuffer
  7087 ;;		i2_I2C_SetDataCompleteCallback
  7088 ;; This function is called by:
  7089 ;;		_I2C_Read2ByteRegister
  7090 ;;		_I2C_DO_TX
  7091 ;;		_I2C_DO_RX
  7092 ;;		_I2C_DO_TX_EMPTY
  7093 ;;		_I2C_DO_ADDRESS_NACK
  7094 ;;		_I2C_DO_RX_EMPTY
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text76
  7099   002254                     __ptext76:
  7100                           	callstack 0
  7101   002254                     _rd2RegCompleteHandler:
  7102                           	callstack 19
  7103   002254                     
  7104                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7105   002254  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7106   002258  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7107   00225C  0E00               	movlw	0
  7108   00225E  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7109   002260  0E02               	movlw	2
  7110   002262  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7111   002264  EC7E  F011         	call	i2_I2C_SetBuffer	;wreg free
  7112   002268                     
  7113                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7114   002268  0E00               	movlw	0
  7115   00226A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7116   00226C  0E00               	movlw	0
  7117   00226E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7118   002270  0E00               	movlw	0
  7119   002272  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7120   002274  0E00               	movlw	0
  7121   002276  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7122   002278  ECB9  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7123   00227C                     
  7124                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7125   00227C  0E02               	movlw	2
  7126   00227E  0012               	return		;funcret
  7127   002280                     __end_of_rd2RegCompleteHandler:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _rd1RegCompleteHandler *****************
  7131 ;; Defined at:
  7132 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  ptr             2    9[COMRAM] PTR void 
  7135 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7136 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      enum E363
  7141 ;; Registers used:
  7142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;Total ram usage:        2 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 2
  7155 ;; This function calls:
  7156 ;;		i2_I2C_SetBuffer
  7157 ;;		i2_I2C_SetDataCompleteCallback
  7158 ;; This function is called by:
  7159 ;;		_I2C_Read1ByteRegister
  7160 ;;		_I2C_DO_TX
  7161 ;;		_I2C_DO_RX
  7162 ;;		_I2C_DO_TX_EMPTY
  7163 ;;		_I2C_DO_ADDRESS_NACK
  7164 ;;		_I2C_DO_RX_EMPTY
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text77
  7169   002280                     __ptext77:
  7170                           	callstack 0
  7171   002280                     _rd1RegCompleteHandler:
  7172                           	callstack 19
  7173   002280                     
  7174                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7175   002280  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7176   002284  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7177   002288  0E00               	movlw	0
  7178   00228A  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7179   00228C  0E01               	movlw	1
  7180   00228E  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7181   002290  EC7E  F011         	call	i2_I2C_SetBuffer	;wreg free
  7182   002294                     
  7183                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7184   002294  0E00               	movlw	0
  7185   002296  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7186   002298  0E00               	movlw	0
  7187   00229A  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7188   00229C  0E00               	movlw	0
  7189   00229E  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7190   0022A0  0E00               	movlw	0
  7191   0022A2  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7192   0022A4  ECB9  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7193   0022A8                     
  7194                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7195   0022A8  0E02               	movlw	2
  7196   0022AA  0012               	return		;funcret
  7197   0022AC                     __end_of_rd1RegCompleteHandler:
  7198                           	callstack 0
  7199                           
  7200 ;; *************** function _wr2RegCompleteHandler *****************
  7201 ;; Defined at:
  7202 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  ptr             2    9[COMRAM] PTR void 
  7205 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7206 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      enum E363
  7211 ;; Registers used:
  7212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;Total ram usage:        2 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 2
  7225 ;; This function calls:
  7226 ;;		i2_I2C_SetBuffer
  7227 ;;		i2_I2C_SetDataCompleteCallback
  7228 ;; This function is called by:
  7229 ;;		_I2C_Write2ByteRegister
  7230 ;;		_I2C_DO_TX
  7231 ;;		_I2C_DO_RX
  7232 ;;		_I2C_DO_TX_EMPTY
  7233 ;;		_I2C_DO_ADDRESS_NACK
  7234 ;;		_I2C_DO_RX_EMPTY
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text78
  7239   0022AC                     __ptext78:
  7240                           	callstack 0
  7241   0022AC                     _wr2RegCompleteHandler:
  7242                           	callstack 19
  7243   0022AC                     
  7244                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7245   0022AC  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  7246   0022B0  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  7247   0022B4  0E00               	movlw	0
  7248   0022B6  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  7249   0022B8  0E02               	movlw	2
  7250   0022BA  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  7251   0022BC  EC7E  F011         	call	i2_I2C_SetBuffer	;wreg free
  7252   0022C0                     
  7253                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7254   0022C0  0E00               	movlw	0
  7255   0022C2  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  7256   0022C4  0E00               	movlw	0
  7257   0022C6  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  7258   0022C8  0E00               	movlw	0
  7259   0022CA  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  7260   0022CC  0E00               	movlw	0
  7261   0022CE  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  7262   0022D0  ECB9  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  7263   0022D4                     
  7264                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7265   0022D4  0E04               	movlw	4
  7266   0022D6  0012               	return		;funcret
  7267   0022D8                     __end_of_wr2RegCompleteHandler:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
  7271 ;; Defined at:
  7272 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
  7275 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7276 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7277 ;;  ptr             2    7[COMRAM] PTR void 
  7278 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7279 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;Total ram usage:        4 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; Hardware stack levels required when called: 1
  7298 ;; This function calls:
  7299 ;;		i2_I2C_SetCallback
  7300 ;; This function is called by:
  7301 ;;		_rd1RegCompleteHandler
  7302 ;;		_rd2RegCompleteHandler
  7303 ;;		_wr1RegCompleteHandler
  7304 ;;		_wr2RegCompleteHandler
  7305 ;;		_rdBlkRegCompleteHandler
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text79
  7310   002372                     __ptext79:
  7311                           	callstack 0
  7312   002372                     i2_I2C_SetDataCompleteCallback:
  7313                           	callstack 19
  7314   002372                     
  7315                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7316   002372  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
  7317   002376  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
  7318   00237A  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
  7319   00237E  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
  7320   002382  0E00               	movlw	0
  7321   002384  EC80  F00E         	call	i2_I2C_SetCallback
  7322   002388  0012               	return		;funcret
  7323   00238A                     __end_ofi2_I2C_SetDataCompleteCallback:
  7324                           	callstack 0
  7325                           
  7326 ;; *************** function i2_I2C_SetCallback *****************
  7327 ;; Defined at:
  7328 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  idx             1    wreg     enum E3139
  7331 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
  7332 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7333 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7334 ;;  ptr             2    2[COMRAM] PTR void 
  7335 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7336 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  idx             1    4[COMRAM] enum E3139
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;Total ram usage:        5 bytes
  7353 ;; Hardware stack levels used: 1
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		i2_I2C_SetDataCompleteCallback
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text80
  7362   001D00                     __ptext80:
  7363                           	callstack 0
  7364   001D00                     i2_I2C_SetCallback:
  7365                           	callstack 19
  7366                           
  7367                           ;incstack = 0
  7368                           ;i2I2C_SetCallback@idx stored from wreg
  7369   001D00  6E05               	movwf	i2I2C_SetCallback@idx^0,c
  7370   001D02                     
  7371                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  7372   001D02  5001               	movf	i2I2C_SetCallback@cb^0,w,c
  7373   001D04  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
  7374   001D06  B4D8               	btfsc	status,2,c
  7375   001D08  EF88  F00E         	goto	i2u144_41
  7376   001D0C  EF8A  F00E         	goto	i2u144_40
  7377   001D10                     i2u144_41:
  7378   001D10  EFA4  F00E         	goto	i2l3365
  7379   001D14                     i2u144_40:
  7380   001D14                     
  7381                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7382   001D14  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  7383   001D16  0D02               	mullw	2
  7384   001D18  0E60               	movlw	low _I2C_Status
  7385   001D1A  24F3               	addwf	243,w,c
  7386   001D1C  6ED9               	movwf	fsr2l,c
  7387   001D1E  0E00               	movlw	high _I2C_Status
  7388   001D20  20F4               	addwfc	prodh,w,c
  7389   001D22  6EDA               	movwf	fsr2h,c
  7390   001D24  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
  7391   001D28  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
  7392                           
  7393                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  7394   001D2C  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  7395   001D2E  0D02               	mullw	2
  7396   001D30  0E6C               	movlw	low (_I2C_Status+12)
  7397   001D32  24F3               	addwf	243,w,c
  7398   001D34  6ED9               	movwf	fsr2l,c
  7399   001D36  0E00               	movlw	high (_I2C_Status+12)
  7400   001D38  20F4               	addwfc	prodh,w,c
  7401   001D3A  6EDA               	movwf	fsr2h,c
  7402   001D3C  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
  7403   001D40  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
  7404                           
  7405                           ;mcc_generated_files/i2c_master.c: 310:     }
  7406   001D44  EFBA  F00E         	goto	i2l502
  7407   001D48                     i2l3365:
  7408                           
  7409                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7410   001D48  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  7411   001D4A  0D02               	mullw	2
  7412   001D4C  0E60               	movlw	low _I2C_Status
  7413   001D4E  24F3               	addwf	243,w,c
  7414   001D50  6ED9               	movwf	fsr2l,c
  7415   001D52  0E00               	movlw	high _I2C_Status
  7416   001D54  20F4               	addwfc	prodh,w,c
  7417   001D56  6EDA               	movwf	fsr2h,c
  7418   001D58  0E2E               	movlw	low _I2C_CallbackReturnStop
  7419   001D5A  6EDE               	movwf	postinc2,c
  7420   001D5C  0E25               	movlw	high _I2C_CallbackReturnStop
  7421   001D5E  6EDD               	movwf	postdec2,c
  7422                           
  7423                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7424   001D60  5005               	movf	i2I2C_SetCallback@idx^0,w,c
  7425   001D62  0D02               	mullw	2
  7426   001D64  0E6C               	movlw	low (_I2C_Status+12)
  7427   001D66  24F3               	addwf	243,w,c
  7428   001D68  6ED9               	movwf	fsr2l,c
  7429   001D6A  0E00               	movlw	high (_I2C_Status+12)
  7430   001D6C  20F4               	addwfc	prodh,w,c
  7431   001D6E  6EDA               	movwf	fsr2h,c
  7432   001D70  6ADE               	clrf	postinc2,c
  7433   001D72  6ADD               	clrf	postdec2,c
  7434   001D74                     i2l502:
  7435   001D74  0012               	return		;funcret
  7436   001D76                     __end_ofi2_I2C_SetCallback:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function i2_I2C_SetBuffer *****************
  7440 ;; Defined at:
  7441 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  buffer          2    0[COMRAM] PTR void 
  7444 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
  7445 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), 
  7446 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  7447 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  7448 ;;  bufferSize      2    2[COMRAM] unsigned int 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;Total ram usage:        4 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_rd1RegCompleteHandler
  7470 ;;		_rd2RegCompleteHandler
  7471 ;;		_wr1RegCompleteHandler
  7472 ;;		_wr2RegCompleteHandler
  7473 ;;		_rdBlkRegCompleteHandler
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text81
  7478   0022FC                     __ptext81:
  7479                           	callstack 0
  7480   0022FC                     i2_I2C_SetBuffer:
  7481                           	callstack 20
  7482   0022FC                     
  7483                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  7484   0022FC  0100               	movlb	0	; () banked
  7485   0022FE  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  7486   002300  EF84  F011         	goto	i2u150_41
  7487   002304  EF86  F011         	goto	i2u150_40
  7488   002308                     i2u150_41:
  7489   002308  EF8F  F011         	goto	i2l479
  7490   00230C                     i2u150_40:
  7491   00230C                     
  7492                           ; BSR set to: 0
  7493                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  7494   00230C  C001  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
  7495   002310  C002  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
  7496   002314                     
  7497                           ; BSR set to: 0
  7498                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  7499   002314  C003  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
  7500   002318  C004  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  7501   00231C                     
  7502                           ; BSR set to: 0
  7503                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  7504   00231C  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  7505   00231E                     i2l479:
  7506                           
  7507                           ; BSR set to: 0
  7508   00231E  0012               	return		;funcret
  7509   002320                     __end_ofi2_I2C_SetBuffer:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _I2C_MasterStop *****************
  7513 ;; Defined at:
  7514 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		None
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_I2C_DO_SEND_STOP
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text82
  7542   002532                     __ptext82:
  7543                           	callstack 0
  7544   002532                     _I2C_MasterStop:
  7545                           	callstack 20
  7546   002532                     
  7547                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  7548   002532  84C5               	bsf	197,2,c	;volatile
  7549   002534  0012               	return		;funcret
  7550   002536                     __end_of_I2C_MasterStop:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _I2C_MasterEnableRestart *****************
  7554 ;; Defined at:
  7555 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		None
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_I2C_DO_SEND_RESTART_READ
  7579 ;;		_I2C_DO_SEND_RESTART_WRITE
  7580 ;;		_I2C_DO_SEND_RESTART
  7581 ;;		_I2C_DO_RX_EMPTY
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text83
  7586   002536                     __ptext83:
  7587                           	callstack 0
  7588   002536                     _I2C_MasterEnableRestart:
  7589                           	callstack 20
  7590   002536                     
  7591                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  7592   002536  82C5               	bsf	197,1,c	;volatile
  7593   002538  0012               	return		;funcret
  7594   00253A                     __end_of_I2C_MasterEnableRestart:
  7595                           	callstack 0
  7596                           
  7597                           	psect	text84
  7598   000000                     __ptext84:
  7599                           	callstack 0
  7600   000000                     
  7601                           	psect	rparam
  7602   000000                     
  7603                           	psect	temp
  7604   000046                     btemp:
  7605                           	callstack 0
  7606   000046                     	ds	1
  7607   000000                     int$flags	set	btemp
  7608   000000                     wtemp8	set	btemp+1
  7609   000000                     ttemp5	set	btemp+1
  7610   000000                     ttemp6	set	btemp+4
  7611   000000                     ttemp7	set	btemp+8
  7612                           
  7613                           	psect	config
  7614                           
  7615                           ; Padding undefined space
  7616   300000                     	org	3145728
  7617   300000  FF                 	db	255
  7618                           
  7619                           ;Config register CONFIG1H @ 0x300001
  7620                           ;	Oscillator Selection bits
  7621                           ;	FOSC = HS, HS oscillator
  7622                           ;	Fail-Safe Clock Monitor Enable bit
  7623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7624                           ;	Internal/External Oscillator Switchover bit
  7625                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7626   300001                     	org	3145729
  7627   300001  02                 	db	2
  7628                           
  7629                           ;Config register CONFIG2L @ 0x300002
  7630                           ;	Power-up Timer Enable bit
  7631                           ;	PWRTEN = OFF, PWRT disabled
  7632                           ;	Brown-out Reset Enable bits
  7633                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7634                           ;	Brown Out Reset Voltage bits
  7635                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7636   300002                     	org	3145730
  7637   300002  1F                 	db	31
  7638                           
  7639                           ;Config register CONFIG2H @ 0x300003
  7640                           ;	Watchdog Timer Enable bit
  7641                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7642                           ;	Watchdog Timer Postscale Select bits
  7643                           ;	WDTPS = 32768, 1:32768
  7644   300003                     	org	3145731
  7645   300003  1E                 	db	30
  7646                           
  7647                           ; Padding undefined space
  7648   300004                     	org	3145732
  7649   300004  FF                 	db	255
  7650                           
  7651                           ;Config register CONFIG3H @ 0x300005
  7652                           ;	CCP2 MUX bit
  7653                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7654                           ;	PORTB A/D Enable bit
  7655                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7656                           ;	Low-Power Timer1 Oscillator Enable bit
  7657                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7658                           ;	HFINTOSC Fast Start-up
  7659                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7660                           ;	MCLR Pin Enable bit
  7661                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7662   300005                     	org	3145733
  7663   300005  8B                 	db	139
  7664                           
  7665                           ;Config register CONFIG4L @ 0x300006
  7666                           ;	Stack Full/Underflow Reset Enable bit
  7667                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7668                           ;	Single-Supply ICSP Enable bit
  7669                           ;	LVP = ON, Single-Supply ICSP enabled
  7670                           ;	Extended Instruction Set Enable bit
  7671                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7672                           ;	Background Debugger Enable bit
  7673                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7674   300006                     	org	3145734
  7675   300006  85                 	db	133
  7676                           
  7677                           ; Padding undefined space
  7678   300007                     	org	3145735
  7679   300007  FF                 	db	255
  7680                           
  7681                           ;Config register CONFIG5L @ 0x300008
  7682                           ;	Code Protection Block 0
  7683                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7684                           ;	Code Protection Block 1
  7685                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7686                           ;	Code Protection Block 2
  7687                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7688                           ;	Code Protection Block 3
  7689                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7690   300008                     	org	3145736
  7691   300008  0F                 	db	15
  7692                           
  7693                           ;Config register CONFIG5H @ 0x300009
  7694                           ;	Boot Block Code Protection bit
  7695                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7696                           ;	Data EEPROM Code Protection bit
  7697                           ;	CPD = OFF, Data EEPROM not code-protected
  7698   300009                     	org	3145737
  7699   300009  C0                 	db	192
  7700                           
  7701                           ;Config register CONFIG6L @ 0x30000A
  7702                           ;	Write Protection Block 0
  7703                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7704                           ;	Write Protection Block 1
  7705                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7706                           ;	Write Protection Block 2
  7707                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7708                           ;	Write Protection Block 3
  7709                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7710   30000A                     	org	3145738
  7711   30000A  0F                 	db	15
  7712                           
  7713                           ;Config register CONFIG6H @ 0x30000B
  7714                           ;	Configuration Register Write Protection bit
  7715                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7716                           ;	Boot Block Write Protection bit
  7717                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7718                           ;	Data EEPROM Write Protection bit
  7719                           ;	WRTD = OFF, Data EEPROM not write-protected
  7720   30000B                     	org	3145739
  7721   30000B  E0                 	db	224
  7722                           
  7723                           ;Config register CONFIG7L @ 0x30000C
  7724                           ;	Table Read Protection Block 0
  7725                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7726                           ;	Table Read Protection Block 1
  7727                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7728                           ;	Table Read Protection Block 2
  7729                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7730                           ;	Table Read Protection Block 3
  7731                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7732   30000C                     	org	3145740
  7733   30000C  0F                 	db	15
  7734                           
  7735                           ;Config register CONFIG7H @ 0x30000D
  7736                           ;	Boot Block Table Read Protection bit
  7737                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7738   30000D                     	org	3145741
  7739   30000D  40                 	db	64
  7740                           tosu	equ	0xFFF
  7741                           tosh	equ	0xFFE
  7742                           tosl	equ	0xFFD
  7743                           stkptr	equ	0xFFC
  7744                           pclatu	equ	0xFFB
  7745                           pclath	equ	0xFFA
  7746                           pcl	equ	0xFF9
  7747                           tblptru	equ	0xFF8
  7748                           tblptrh	equ	0xFF7
  7749                           tblptrl	equ	0xFF6
  7750                           tablat	equ	0xFF5
  7751                           prodh	equ	0xFF4
  7752                           prodl	equ	0xFF3
  7753                           indf0	equ	0xFEF
  7754                           postinc0	equ	0xFEE
  7755                           postdec0	equ	0xFED
  7756                           preinc0	equ	0xFEC
  7757                           plusw0	equ	0xFEB
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           indf1	equ	0xFE7
  7762                           postinc1	equ	0xFE6
  7763                           postdec1	equ	0xFE5
  7764                           preinc1	equ	0xFE4
  7765                           plusw1	equ	0xFE3
  7766                           fsr1h	equ	0xFE2
  7767                           fsr1l	equ	0xFE1
  7768                           bsr	equ	0xFE0
  7769                           indf2	equ	0xFDF
  7770                           postinc2	equ	0xFDE
  7771                           postdec2	equ	0xFDD
  7772                           preinc2	equ	0xFDC
  7773                           plusw2	equ	0xFDB
  7774                           fsr2h	equ	0xFDA
  7775                           fsr2l	equ	0xFD9
  7776                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    32
    Data        36
    BSS         81
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      69
    BANK0           160     25     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$3155$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$3161$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$3167$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$3173$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$3172	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$3167	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$3166	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$3161	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$3160	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$3155	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$3154	const PTR FTN()enum E3121 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), STR_4(CODE[3]), STR_3(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S1086$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    res	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2787$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2787$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj.lcd_data(COMRAM[4]), lcd_obj(COMRAM[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj.lcd_data(COMRAM[4]), lcd_obj(COMRAM[6]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj.lcd_data(COMRAM[4]), lcd_obj(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllllllh[1]), PORTD(BITBIGSFRllllllh[1]), PORTC(BITBIGSFRllllllh[1]), PORTB(BITBIGSFRllllllh[1]), 
		 -> PORTA(BITBIGSFRllllllh[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATC(ABS[1]), LATB(ABS[1]), LATA(BITBIGSFRllllllll[1]), LATD(BITBIGSFRllllllll[1]), 
		 -> LATE(BITBIGSFRllllllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISA(BITBIGSFRllllhll[1]), 
		 -> TRISE(BITBIGSFRllllhll[1]), 

    EUART_Send_String@text	PTR unsigned char  size(2) Largest target is 29
		 -> STR_7(CODE[7]), STR_5(CODE[7]), STR_1(CODE[29]), 

    send_4bit_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    send_4bit_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[7]), STR_6(CODE[7]), STR_2(CODE[14]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_obj(COMRAM[6]), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1086$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3121[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S97$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_EEPROM_Write_1Byte
    _lcd_4bit_send_command->_send_4bit_data
    _gpio_pin_initialize->_gpio_pin_write_logic
    _Set_RTC_Date_Time->_I2C_Read1ByteRegister
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _Read_Temprature->_I2C_Read1ByteRegister
    _lcd_4bit_send_char_data->_send_4bit_data
    _send_4bit_enable_signal->_gpio_pin_write_logic
    _send_4bit_data->_gpio_pin_write_logic
    _EUART_Send_String->_EUSART_Write
    _EEPROM_Write_1Byte->_I2C_Write1ByteRegister
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _EEPROM_Read_1Byte->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_Print_RTC_Date_Time
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_send_4bit_data
    _Print_RTC_Date_Time->_lcd_4bit_send_string
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_send_4bit_data

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  103595
                                             23 BANK0      2     2      0
                  _EEPROM_Read_1Byte
                 _EEPROM_Write_1Byte
                  _EUART_Send_String
             _I2C_Write1ByteRegister
                _Print_RTC_Date_Time
                    _Read_Temprature
                  _SYSTEM_Initialize
                  _Set_RTC_Date_Time
                            ___awdiv
                            ___awmod
                 _lcd_4bit_intialize
            _lcd_4bit_send_char_data
              _lcd_4bit_send_command
               _lcd_4bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   6     4      2   15494
                                              9 BANK0      6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_command                                5     2      3   11401
                                              4 BANK0      5     2      3
               _gpio_pin_write_logic
                     _send_4bit_data
            _send_4bit_enable_signal
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    3415
                                             35 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     378
                                             25 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                             25 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Set_RTC_Date_Time                                    6     0      6    6615
                                              0 BANK0      6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_Temprature                                      1     1      0    6637
                                             37 COMRAM     1     1      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _Print_RTC_Date_Time                                 10     4      6   21754
                                             13 BANK0     10     4      6
                  _EUART_Send_String
                       _EUSART_Write
            _lcd_4bit_send_char_data
               _lcd_4bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string                                 5     1      4   10644
                                              9 BANK0      4     0      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              5     2      3    9961
                                              4 BANK0      5     2      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
                     _send_4bit_data
            _send_4bit_enable_signal
 ---------------------------------------------------------------------------------
 (3) _send_4bit_enable_signal                              3     1      2    2730
                                             35 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _send_4bit_data                                       9     6      3    3220
                                             35 COMRAM     5     2      3
                                              0 BANK0      4     4      0
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    2268
                                             25 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _EUART_Send_String                                    2     0      2     366
                                             26 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_1Byte                                   3     1      2    6506
                                             37 COMRAM     3     1      2
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2    6288
                                             34 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_1Byte                                    2     1      1    6735
                                             37 COMRAM     2     1      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    6615
                                             34 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2218
                                             30 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1608
                                             25 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                             30 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                             25 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     144
                                             27 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2      98
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      46
                                             25 COMRAM     2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                             25 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                      10    10      0   17934
                                             15 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsr                                        0     0      0   17934
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        2     2      0   17934
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (9) i2_I2C_MasterClearIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      2     2      0    4467
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            2     2      0    4489
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            2     2      0    4467
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  2     2      0    4467
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2     858
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) i2_I2C_SetDataCompleteCallback                       4     0      4     510
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (12) i2_I2C_SetCallback                                   5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_I2C_SetBuffer                                     4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read_1Byte
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterEnableIrq
         _I2C_MasterOpen
         _I2C_SetInterruptHandler
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _EEPROM_Write_1Byte
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _EUART_Send_String
     _EUSART_Write
   _I2C_Write1ByteRegister
   _Print_RTC_Date_Time
     _EUART_Send_String
     _EUSART_Write
     _lcd_4bit_send_char_data
       ___awdiv (ARG)
       ___awmod (ARG)
       _gpio_pin_write_logic (ARG)
       _send_4bit_data (ARG)
         _gpio_pin_write_logic
       _send_4bit_enable_signal (ARG)
         _gpio_pin_write_logic
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
   _Read_Temprature
     _I2C_Read1ByteRegister
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Set_RTC_Date_Time
     _I2C_Read1ByteRegister
   ___awdiv
   ___awmod
   _lcd_4bit_intialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _send_4bit_data
       _send_4bit_enable_signal
   _lcd_4bit_send_char_data
   _lcd_4bit_send_command
   _lcd_4bit_send_string

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      77       5       74.4%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      45       1       73.4%
BITBIGSFRhhl        1D      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      49        0.0%
BITBIGSFRhlll        C      0       0      41        0.0%
BITBIGSFRhhhh        7      0       0      36        0.0%
BITBIGSFRlhh         7      0       0      42        0.0%
BITBIGSFRhllh        6      0       0      40        0.0%
BITBIGSFRllllll      4      0       0      47        0.0%
BITBIGSFRllllhh      4      0       0      45        0.0%
BITBIGSFRllllhl      4      0       0      46        0.0%
BITBIGSFRllhhl       3      0       0      43        0.0%
BITBIGSFRhhhl        2      0       0      37        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      50        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Sep 21 10:18:46 2024

                       ??_I2C_DO_SEND_ADR_READ 0001                        ??_I2C_DO_SEND_ADR_WRITE 0002  
                                  _SSPSTATbits 0FC7                                             l35 1DE8  
                                           l53 1EC6                                   ___awdiv@sign 001F  
                               _send_4bit_data 1F90                          ??_I2C_DO_SEND_RESTART 0001  
                                          l211 239E                                            l214 247A  
                                          l233 24AA                                            l171 23A2  
                                          l147 2160                                            l502 1CFE  
                                          l174 23B4                                            l192 2498  
                                          l186 248E                                            l275 21CA  
                                          l460 2226                                            l452 23DC  
                                          l621 2340                                            l189 2484  
                                          l624 2514                                            l472 24B2  
                                          l456 1A76                                            l642 250C  
                                          l466 20E2                                            l482 2358  
                                          l663 2508                                            l479 22FA  
                                          l672 2518                                            l488 2370  
                                          l497 24A2                                            l913 243E  
                                          l770 1B86                                            l916 2402  
                                          l669 2510                                            l765 1336  
                                          l775 1C0C                                            l951 2430  
                                          l944 11D4                                            l961 219A  
                                          l937 2048                                            l875 1FEC  
                                          l883 21FA                                            l788 20A2  
                   send_4bit_enable_signal@lcd 0024                     send_4bit_enable_signal@ret 0026  
                       fp__I2C_DO_RX_NACK_STOP 0000                                            _res 003F  
                                          _rtc 0039                 ?_EUSART_SetFramingErrorHandler 001A  
                                 ___awmod@sign 001F                                            prod 0FF3  
                                          tosl 0FFD                                            wreg 0FE8  
                 ??_I2C_SetAddressNackCallback 0023                         _I2C_Write1ByteRegister 1E5A  
                     ??_I2C_CallbackReturnStop 000C                                   _I2C_DO_RESET 244E  
                                         l1011 1498                                           l1030 15E2  
                                         l1051 1B00                        ??_rd2RegCompleteHandler 000C  
                                         l1314 17BE                                           l1327 1932  
                                         l4031 238E                                           l4033 2392  
                                         l4201 1734                                           l4035 2396  
                                         l4211 176C                                           l4203 173C  
                                         l5101 10C4                                           l4141 2426  
                                         l4037 239A                                           l4029 238A  
                                         l4221 1798                                           l4213 1772  
                                         l4205 174E                                           l5111 10FA  
                                         l5103 10CC                                           l4215 1788  
                                         l4207 1756                                           l4223 179E  
                                         l4231 1884                                           l3601 1A08  
                                         l4145 23F4                                           l5121 1134  
                                         l5105 10D4                                           l4225 17AE  
                                         l4217 1790                                           l4209 175E  
                                         l4241 18B0                                           l4233 1888  
                                         l5201 1664                                           l3451 249A  
                                         l3611 1A30                                           l3603 1A10  
                                         l4147 2434                                           l5123 113A  
                                         l5107 10D8                                           l4227 17B6  
                                         l4219 1792                                           l4251 18E8  
                                         l4243 18B8                                           l4235 1896  
                                         l5051 1216                                           l5043 11D6  
                                         l5203 1672                                           l3453 2516  
                                         l3621 1A58                                           l3613 1A38  
                                         l3605 1A18                                           l5141 11B8  
                                         l5125 1156                                           l5117 1104  
                                         l5109 10E4                                           l4261 1922  
                                         l4253 18FE                                           l4245 18CA  
                                         l4237 189E                                           l5061 123A  
                                         l5045 11DC                                           l5205 1688  
                                         l3367 250A                                           l3471 20AA  
                                         l3463 2506                                           l3455 2320  
                                         l3623 1A64                                           l3615 1A40  
                                         l3607 1A20                                           l3631 1A74  
                                         l5135 1182                                           l5127 1162  
                                         l5119 1116                                           l4191 170E  
                                         l4263 192A                                           l4255 1906  
                                         l4247 18D2                                           l4239 18A2  
                                         l5071 12A2                                           l5063 124A  
                                         l5047 11EE                                           l5207 16B0  
                                         l3465 250E                                           l3481 20D8  
                                         l3473 20BA                                           l3457 232E  
                                         l3625 1A68                                           l3617 1A48  
                                         l3609 1A28                                           l3641 22F0  
                                         l5137 1194                                           l5129 1178  
                                         l5081 105E                                           l4193 1716  
                                         l4257 190C                                           l4249 18DA  
                                         l5065 125A                                           l5057 121A  
                                         l5049 11F2                                           l5209 16D8  
                                         l3467 2512                                           l3651 21FC  
                                         l3483 20DC                                           l3475 20BC  
                                         l3459 233E                                           l3627 1A6C  
                                         l3619 1A50                                           l3491 1C9E  
                                         l3643 22F8                                           l3635 2342  
                                         l5139 11B2                                           l5091 1098  
                                         l5083 1070                                           l5075 1FEE  
                                         l4195 171A                                           l4187 16FC  
                                         l4259 1912                                           l5067 126C  
                                         l5059 1236                                           l3661 2224  
                                         l3653 2200                                           l3477 20C0  
                                         l3485 20E0                                           l3469 20A6  
                                         l3629 1A70                                           l3493 1CD2  
                                         l3645 235A                                           l3637 22D8  
                                         l5093 109C                                           l5085 1074  
                                         l3901 2124                                           l5077 2036  
                                         l4197 1728                                           l4189 1700  
                                         l5501 1480                                           l5069 1290  
                                         l5181 15E8                                           l3655 2210  
                                         l3479 20D0                                           l3647 24AC  
                                         l3591 19F6                                           l3583 19DC  
                                         l3639 22E8                                           l5503 15CA  
                                         l5095 10A4                                           l5087 107C  
                                         l3903 2138                                           l3911 24A4  
                                         l4199 1730                                           l5191 1608  
                                         l5183 15EA                                           l3657 2214  
                                         l3593 19F8                                           l3585 19E0  
                                         l3489 1C8C                                           l5097 10AC  
                                         l5089 1084                                           l3665 2486  
                                         l3905 2144                                           l3913 23CA  
                                         l3921 21B6                                           l5193 161A  
                                         l5185 15EC                                           l3659 2220  
                                         l3595 19FA                                           l3587 19F0  
                                         l5099 10C0                                           l3667 247C  
                                         l3907 2150                                           l3915 23DA  
                                         l3923 21BC                                           l5195 1642  
                                         l5187 15EE                                           l5179 15E4  
                                         l3597 19FE                                           l3589 19F4  
                                         l4901 21CC                                           l3669 2490  
                                         l3909 215C                                           l3925 21BE  
                                         l3917 219C                                           l5197 164A  
                                         l5189 15FA                                           l3599 1A06  
                                         l3871 1D7C                                           l4903 21CC  
                                         l3927 21C8                                           l3919 21B4  
                                         l5199 1658                                           l3881 1DD2  
                                         l3873 1D92                                           l4913 23A2  
                                         l4905 21DC                                           l4921 1BA0  
                                         l3929 2472                                           l3883 1DE6  
                                         l3875 1DA6                                           l3891 1E72  
                                         l4915 23B0                                           l4907 21E6  
                                         l4923 1BA8                                           l4931 133C  
                                         l3877 1DBA                                           l3869 1D78  
                                         l3893 1E86                                           l4861 149E  
                                         l4909 21F8                                           l4925 1C0A  
                                         l4917 1B88                                           l4941 13F8  
                                         l4933 134E                                           l3879 1DCE  
                                         l3895 1E9A                                           l3887 1E5C  
                                         l4871 1554                                           l4863 14B0  
                                         l4919 1B8E                                           l4935 1370  
                                         l3897 1EAE                                           l3889 1E5C  
                                         l4961 217C                                           l4865 14D2  
                                         l4945 1454                                           l4937 138E  
                                         l4929 1338                                           l3899 1EB2  
                                         l4955 2162                                           l4875 15B6  
                                         l4867 14F0                                           l4859 149A  
                                         l4891 1F98                                           l4939 1396  
                                         l4947 1496                                           l4971 1B84  
                                         l4963 1B02                                           l4957 2166  
                                         l4869 14F8                                           l4877 15E0  
                                         l4893 1FD8                                           l4885 1F90  
                                         l4981 2062                                           l4965 1B08  
                                         l4959 2178                                           l4895 1FDA  
                                         l4983 207E                                           l4975 204A  
                                         l4991 1A8A                                           l4967 1B1A  
                                         l4897 1FEA                                           l4985 2084  
                                         l4977 204A                                           l4993 1AAC  
                                         l4969 1B22                                           l4979 205E  
                                         l4995 1ACA                                           l4987 1A78  
                                         l4997 1AD2                                           l4989 1A78  
                                         l4999 1AFE                                           STR_1 1021  
                                         STR_2 103E                                           STR_3 105A  
                                         STR_5 104C                                           STR_6 104C  
                                         STR_7 1053                                           STR_8 1053  
                                         u2020 170E                                           u2100 18CA  
                                         u2021 170A                                           u2101 18C6  
                                         u2030 1728                                           u2110 18E8  
                                         u2031 1724                                           u2111 18E4  
                                         u2040 174E                                           u2120 18FE  
                                         u2041 174A                                           u2121 18FA  
                                         u2050 176C                                           u2130 1922  
                                         u2051 1768                                           u2131 191E  
                                         u2060 1788                                           u2061 1784  
                                         u3021 1624                                           _LATA 0F89  
                                         u1510 232E                                           u2070 17AE  
                                         _LATB 0F8A                                           u1511 232A  
                                         u2071 17AA                                           u3031 1636  
                                         _LATC 0F8B                                           u1600 2210  
                                         u1520 20BA                                           u2080 1896  
                                         _LATD 0F8C                                           u1601 220C  
                                         u1521 20B6                                           u2081 1892  
                                         _LATE 0F8D                                           u1530 20D0  
                                         u2090 18B0                                           u1531 20CC  
                                         u2091 18AC                                           u1540 1C9E  
                                         u1541 1C9A                                           u3207 12A4  
                                         u1800 1EC6                                           u1801 1EC2  
                                         u3217 21DE                                           u1580 19F0  
                                         u2700 14F0                                           u1581 19EC  
                                         u2701 14EC                                           u1590 22E8  
                                         u1591 22E4                                           u3177 16E4  
                                         u1770 1D92                                           u2714 1518  
                                         u1771 1D8E                                           u2715 1514  
                                         u3187 1262                                           u1780 1DE6  
                                         u2724 1574                                           u2740 1FEA  
                                         u2820 146C                                           u2804 13B6  
                                         u2900 1ACA                                           u1781 1DE2  
                                         u2725 1570                                           u2741 1FE6  
                                         u2821 1466                                           u2805 13B2  
                                         u2901 1AC6                                           u3197 1286  
                                         u1790 1E72                                           u2750 23B0  
                                         u2734 1FC4                                           u2830 146E  
                                         u2814 1418                                           u1791 1E6E  
                                         u2751 23AC                                           u2735 1FC0  
                                         u2815 1414                                           u2840 219A  
                                         u2680 14B0                                           u2760 1BA0  
                                         u2841 2196                                           u2681 14AC  
                                         u2761 1B9C                                           u2690 14D2  
                                         u2770 134E                                           u2850 1B1A  
                                         u2691 14CE                                           u2771 134A  
                                         u2851 1B16                                           u2860 205E  
                                         u2780 1370                                           u2940 11EE  
                                         u2861 205A                                           u2781 136C  
                                         u2941 11EA                                           u2870 20A2  
                                         u2790 138E                                           u2950 124A  
                                         u2871 209E                                           u2791 138A  
                                         u2951 1246                                           u2880 1A8A  
                                         u2961 2040                                           u2881 1A86  
                                         u2970 1156                                           u2890 1AAC  
                                         u2971 1152                                           u2891 1AA8  
                                         u2980 11D4                                           u2981 11D0  
                                         i2l92 22AA                                           i2l95 227E  
                                         i2l98 2252                           _lcd_4bit_send_string 204A  
                                         _WPUB 0F7C                        ??_wr2RegCompleteHandler 000C  
                                         _main 15E4                       ?_I2C_CallbackReturnReset 000A  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr1l 0FE1                                           fsr2l 0FD9  
                             __end_of_I2C_Open 1A78                                           btemp 0046  
                        ?i2_I2C_MasterClearIrq 0001                                           prodh 0FF4  
                                         prodl 0FF3                                           start 00B6  
                      _I2C_SetInterruptHandler 249A                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 0000                          _lcd_4bit_send_command 1B02  
                       __end_of_send_4bit_data 1FEE                           _gpio_pin_write_logic 149A  
                             ?_I2C_MasterClose 0001                          lcd_4bit_intialize@lcd 00AD  
                        lcd_4bit_intialize@ret 00B2                                  ?_EUSART_Write 0001  
                             ?_I2C_MasterStart 0001                                  _I2C_DO_RX_ACK 24C4  
                             ?_I2C_MasterWrite 0001                  __end_of_OSCILLATOR_Initialize 247C  
                                        ?_main 0001                                __end_of___awdiv 17C0  
                                        _EEADR 0FA9                                __end_of___awmod 1934  
                                        _ANSEL 0F7E                          _I2C_Read1ByteRegister 1D76  
                              ___awdiv@divisor 001C                                          i2l101 22D6  
                                        i2l104 2122                                          i2l242 008A  
                                        i2l502 1D74                                          i2l238 006A  
                                        i2l512 2470                                          i2l600 1F2C  
                                        i2l521 184A                                          i2l505 24F8  
                                        i2l611 252C                                          i2l515 2422  
                                        i2l524 1882                                          i2l509 1E58  
                                        i2l630 24F2                                          i2l518 244C  
                                        i2l608 2530                                          i2l633 2538  
                                        i2l537 196A                                          i2l482 2388  
                                        i2l538 19D8                                          i2l627 2524  
                                        i2l651 24FE                                          i2l555 1C88  
                                        i2l645 2534                                          i2l549 2464  
                                        i2l573 24EA                                          i2l654 2504  
                                        i2l582 24D2                                          i2l479 231E  
                                        i2l639 2528                                          i2l591 24BA  
                                        i2l648 23F0                                          i2l576 24E2  
                                        i2l672 251C                                          i2l585 24CA  
                                        i2l594 2458                                          i2l675 2520  
                                        i2l579 24DA                                          i2l588 24C2  
                              ___awdiv@counter 001E                                          _RCREG 0FAE  
                                        _RCSTA 0FAB                                          _SPBRG 0FAF  
                                        _PORTA 0F80                                          _PORTB 0F81  
                                        _PORTC 0F82                                          _PORTD 0F83  
                                        _PORTE 0F84                              ??_I2C_DO_TX_EMPTY 000C  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                                          _TXREG 0FAD  
                                        _TXSTA 0FAC                              __end_of_I2C_DO_RX 19DA  
                            __end_of_I2C_DO_TX 1884                             send_4bit_data@data 0026  
                            __end_of_I2C_Close 2228                               fp__I2C_MasterIsr 0000  
               I2C_MasterOperation@returnValue 001B                          ?_lcd_4bit_send_string 00AD  
                      _I2C_MasterEnableRestart 2536                                          pclath 0FFA  
                                        pclatu 0FFB                                          tablat 0FF5  
                             ?_I2C_SetCallback 001A                   I2C_SetAddressNackCallback@cb 001F  
                                        plusw0 0FEB                                          plusw2 0FDB  
                                        ttemp5 0047                                          ttemp6 004A  
                                        ttemp7 004E                                          status 0FD8  
                                        wtemp8 0047                              ?_I2C_DO_SEND_STOP 0001  
                           ??_I2C_DO_SEND_STOP 0001                 ?_gpio_pin_direction_initialize 001A  
                  __end_of_Print_RTC_Date_Time 11D6                       fp__rd1RegCompleteHandler 0000  
                              __initialization 1F2E                          i2I2C_SetBuffer@buffer 0001  
                                 __end_of_main 16FC                       fp__wr1RegCompleteHandler 0000  
                        ?_gpio_pin_write_logic 001A                                ?_send_4bit_data 0024  
                    ?_I2C_DO_SEND_RESTART_READ 0001                         Read_Temprature@address 0026  
                               ??_EUSART_Write 001A                                 ?_I2C_DO_RX_ACK 0001  
                                _lat_registers 00C7                                         ??_main 00BB  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 0003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0001  
                           ??_I2C_MasterSetIrq 0001              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00D3                __end_of_I2C_CallbackReturnReset 252E  
                                       _EEADRH 0FAA                                         _EEDATA 0FA8  
                                       _EECON2 0FA7                               ___awdiv@dividend 001A  
                I2C_SetDataCompleteCallback@cb 001F                i2I2C_SetDataCompleteCallback@cb 0006  
                                       _ANSELH 0F7F                                         i2l3401 22FC  
                                       i2l3403 230C                                         i2l3411 2280  
                                       i2l3405 2314                                         i2l3413 2294  
                                       i2l3421 2268                                         i2l3501 24E4  
                                       i2l3407 231C                                         i2l3415 22A8  
                                       i2l3423 227C                                         i2l3431 2250  
                                       i2l3503 24E8                                         i2l4039 24F4  
                                       i2l3361 1D02                                         i2l3409 2372  
                                       i2l3513 24CC                                         i2l3371 2532  
                                       i2l3363 1D14                                         i2l3435 22AC  
                                       i2l3419 2254                                         i2l3427 2228  
                                       i2l3443 20E4                                         i2l3523 24FA  
                                       i2l3507 24DC                                         i2l3515 24D0  
                                       i2l3531 24BC                                         i2l3365 1D48  
                                       i2l3437 22C0                                         i2l3429 223C  
                                       i2l3445 210C                                         i2l3373 2500  
                                       i2l3509 24E0                                         i2l3541 24D8  
                                       i2l3533 24C0                                         i2l3525 24B4  
                                       i2l4341 0078                                         i2l3439 22D4  
                                       i2l3447 2120                                         i2l3551 252A  
                                       i2l3519 2522                                         i2l3711 17E8  
                                       i2l3703 17D8                                         i2l3527 24B8  
                                       i2l4335 0032                                         i2l3369 2536  
                                       i2l3537 2526                                         i2l3545 251E  
                                       i2l3721 1860                                         i2l3801 244E  
                                       i2l4337 0040                                         i2l3547 252E  
                                       i2l3723 187A                                         i2l3707 17E0  
                                       i2l3539 24D4                                         i2l3803 2452  
                                       i2l3811 1ECC                                         i2l4339 004E  
                                       i2l3725 1880                                         i2l3717 17F0  
                                       i2l3741 1964                                         i2l3733 1934  
                                       i2l3805 2456                                         i2l3813 1ED4  
                                       i2l3495 23DE                                         i2l5511 1C62  
                                       i2l3719 184E                                         i2l3751 1978  
                                       i2l3735 1942                                         i2l3823 1EE4  
                                       i2l3737 1948                                         i2l5505 1F16  
                                       i2l3817 1EDC                                         i2l3809 1EC8  
                                       i2l3499 24EE                                         i2l3771 1C0E  
                                       i2l3675 2466                                         i2l3683 2414  
                                       i2l3691 2440                                         i2l5507 19B2  
                                       i2l3747 1970                                         i2l3739 1960  
                                       i2l3763 245A                                         i2l3931 1DEA  
                                       i2l3773 1C16                                         i2l3677 246A  
                                       i2l3685 2418                                         i2l3693 2444  
                                       i2l5509 1824                                         i2l3757 1980  
                                       i2l3765 245E                                         i2l3933 1DEE  
                                       i2l3783 1C28                                         i2l3679 246E  
                                       i2l3687 2420                                         i2l3695 244A  
                                       i2l3767 2462                                         i2l3935 1DFE  
                                       i2l3777 1C1E                                         i2l3937 1E12  
                                       i2l3779 1C22                                         i2l3699 17C0  
                                       i2l3795 24C4                                         i2l3867 251A  
                                       i2l3939 1E18                                         i2l3789 1C30  
                                       i2l3797 24C8                                         _TABLAT 0FF5  
                                       _OSCCON 0FD3                         ??i2_I2C_MasterClearIrq 0001  
                    ??_I2C_SetInterruptHandler 001C                                         _SPBRGH 0FB0  
                                       _SSPADD 0FC8                                         _SSPBUF 0FC9  
                          _I2C_MasterEnableIrq 2506                            _I2C_MasterGetRxData 2522  
                       ?_lcd_4bit_send_command 00A8                                  _I2C_MasterFsm 1DEA  
                                    ??___awdiv 001E                                  _I2C_MasterIsr 24F4  
                                    ??___awmod 001E                                         clear_0 1F74  
                                       clear_1 1F80                              I2C_SetCallback@cb 001A  
                             ___awdiv@quotient 0020                        fp__I2C_DO_SEND_ADR_READ 0000  
                              ___awmod@divisor 001C                         ?_I2C_Read1ByteRegister 0023  
                                       isa$std 0001                                ___awmod@counter 001E  
                                _I2C_SetBuffer 22D8                   __end_of_I2C_MasterDisableIrq 2512  
                         ?_I2C_MasterEnableIrq 0001                            _I2C_DO_ADDRESS_NACK 1EC8  
                                 __pdataCOMRAM 0029                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 2372  
                   _I2C_SetAddressNackCallback 235A                                   __mediumconst 0000  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8                      ??_I2C_MasterEnableRestart 0001  
                       ??_lcd_4bit_send_string 0029        I2C_SetInterruptHandler@InterruptHandler 001A  
                     ?_send_4bit_enable_signal 0024                 lcd_4bit_send_command@l_counter 00AB  
             ??_INTERRUPT_InterruptManagerHigh 0010                ?_INTERRUPT_InterruptManagerHigh 0001  
                            _SYSTEM_Initialize 238A                                     __accesstop 0060  
                      __end_of__initialization 1F86                            _I2C_MasterOperation 20A4  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 0001  
                         ?_I2C_DO_ADDRESS_NACK 0001                        _lcd_4bit_send_char_data 1B88  
                      _rdBlkRegCompleteHandler 20E4                     fp__rdBlkRegCompleteHandler 0000  
                            ??_Read_Temprature 0026                         ??_gpio_pin_write_logic 001D  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                               ?_I2C_MasterIsr 0001                                ??_I2C_DO_RX_ACK 0001  
                                 __pidataBANK0 23B6                         _I2C_CallbackReturnStop 252E  
                          ??_SYSTEM_Initialize 001C                   convert_short_to_string@F3583 0098  
                               ?_I2C_SetBuffer 001A                       lcd_4bit_send_command@lcd 00A8  
                     lcd_4bit_send_command@ret 00AC                  __end_of_I2C_DO_SEND_ADR_WRITE 244E  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
     gpio_pin_direction_initialize@_pin_config 001A                          ??_I2C_MasterEnableIrq 001A  
                      send_4bit_data@l_counter 0028                          ??_I2C_MasterGetRxData 0001  
                      ?_I2C_Write1ByteRegister 0023                                     ??_I2C_Open 001C  
                   __end_of_I2C_MasterClearIrq 251A                ??_EUSART_SetOverrunErrorHandler 001C  
                    __end_of_SYSTEM_Initialize 23A0                        lcd_4bit_send_string@lcd 00AD  
                      lcd_4bit_send_string@str 00AF                              _I2C_MasterSendAck 24FA  
                                   __pbssBANK0 0060                           __end_of_EUSART_Write 23B6  
                                ??_I2C_DO_IDLE 0001                                  ??_I2C_DO_RCEN 0001  
                __end_of_rd2RegCompleteHandler 2280                   __end_of_I2C_MasterSendTxData 24F4  
                           ?_I2C_MasterSendAck 0001                              _I2C_MasterStartRx 2526  
                        ??_I2C_DO_ADDRESS_NACK 000C                  __end_of_wr2RegCompleteHandler 22D8  
                          _I2C_DO_RX_NACK_STOP 24BC                          _rd1RegCompleteHandler 2280  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 2506  
                        _wr1RegCompleteHandler 2228                            ??_I2C_MasterSendAck 0001  
                     rd1RegCompleteHandler@ptr 000A                    __end_of_I2C_DO_SEND_RESTART 24DC  
                              _I2C_DO_TX_EMPTY 1C0E                            I2C_SetBuffer@buffer 001A  
                          ??_I2C_MasterStartRx 0001                                        _BAUDCON 0FB8  
                        ??_I2C_MasterOperation 001A                 I2C_SetDataCompleteCallback@ptr 0021  
             i2I2C_SetDataCompleteCallback@ptr 0008                 __end_of_I2C_Write1ByteRegister 1EC8  
                     ??_I2C_DO_RX_NACK_RESTART 0001              __end_of_I2C_DO_SEND_RESTART_WRITE 24E4  
                         ?_I2C_DO_RX_NACK_STOP 0001                                        _TBLPTRH 0FF7  
                                      _TBLPTRL 0FF6                                        _TBLPTRU 0FF8  
                    __end_of_I2C_MasterSendAck 2500                                        _OSCTUNE 0F9B  
                     ??_EUSART_SetErrorHandler 001C                                        _SSPCON1 0FC6  
                                      _SSPCON2 0FC5                                        _SSPSTAT 0FC7  
                    __end_of_I2C_MasterStartRx 252A                           I2C_Close@returnValue 001A  
                 ?_I2C_SetDataCompleteCallback 001F                                      _I2C_DO_RX 1934  
                                    _I2C_DO_TX 17C0               __end_of_I2C_DO_SEND_RESTART_READ 24EC  
                 I2C_Read1ByteRegister@address 0024                                 _tris_registers 0029  
                                    _I2C_Close 21FC                      ??_lcd_4bit_send_char_data 0029  
                            _EUART_Send_String 2162                      ??_rdBlkRegCompleteHandler 000C  
                             ??_send_4bit_data 00A4                           _I2C_MasterDisableIrq 250E  
                            ??i2_I2C_SetBuffer 0005                                ??_I2C_MasterFsm 000E  
                              ??_I2C_MasterIsr 0010                                        __Hparam 0000  
                           ?_EUART_Send_String 001B                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 2472                            __end_of_I2C_DO_RCEN 2466  
                          _gpio_pin_initialize 1A78                                        ___awdiv 16FC  
                                      ___awmod 1884                                ??_I2C_SetBuffer 001E  
                      I2C_SetBuffer@bufferSize 001C                                   __psmallconst 1000  
                          ??_EUART_Send_String 001D                                 _I2C_MasterOpen 2320  
                                      __pcinit 1F2E                                 _I2C_MasterStop 2532  
                               _I2C_Initialize 23CA                                        __ramtop 1000  
                                      __ptext0 15E4                                        __ptext1 11D6  
                                      __ptext2 1B02                                        __ptext3 1A78  
                                      __ptext4 1338                                        __ptext5 1884  
                                      __ptext6 16FC                                        __ptext7 1FEE  
                                      __ptext8 238A                                        __ptext9 219C  
                    EEPROM_Write_1Byte@address 0028                                        _eevalue 0043  
                                      _lcd_obj 0033                          ??_I2C_DO_RX_NACK_STOP 0001  
              ??_gpio_pin_direction_initialize 001C                          _OSCILLATOR_Initialize 2472  
                             ___awmod@dividend 001A                             I2C_SetCallback@idx 001E  
                     ??_PIN_MANAGER_Initialize 001A                  I2C_CallbackReturnReset@funPtr 000A  
                           I2C_SetCallback@ptr 001C                       wr1RegCompleteHandler@ptr 000A  
                         Print_RTC_Date_Time@i 00B7                      Print_RTC_Date_Time@i_2230 00B9  
                    I2C_Write1ByteRegister@reg 0023                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                                      _rtc_obj 009E                           ?_gpio_pin_initialize 0024  
        lcd_4bit_intialize@l_data_pins_counter 00B1                           end_of_initialization 1F86  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
                    __end_of_EUART_Send_String 219C          __end_of_EUSART_SetOverrunErrorHandler 2486  
                _EUSART_SetOverrunErrorHandler 247C                                     ?_I2C_Close 0001  
                       ?_rd1RegCompleteHandler 000A                     __end_of_lcd_4bit_intialize 1338  
                      __end_of_I2C_DO_TX_EMPTY 1C8A                        ??_lcd_4bit_send_command 0029  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 2124  
                       ?_wr1RegCompleteHandler 000A                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                                      _RCSTAbits 0FAB  
                                      postdec1 0FE5                                        postdec2 0FDD  
                      ??_I2C_Read1ByteRegister 0024                         __end_of_I2C_MasterOpen 2342  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 0FEE  
                                      postinc2 0FDE                         __end_of_I2C_MasterStop 2536  
                       __end_of_I2C_Initialize 23DE                                     _temp_value 0044  
                    fp__I2C_CallbackReturnStop 0000                            ??_EUSART_Initialize 001C  
              __end_of_lcd_4bit_send_char_data 1C0E                __end_of_rdBlkRegCompleteHandler 2124  
                         _I2C_MasterSendTxData 24EC                                fp__I2C_DO_RESET 0000  
                   lcd_4bit_send_char_data@lcd 00A8                     lcd_4bit_send_char_data@ret 00AC  
                  ?_I2C_SetAddressNackCallback 001F                          ??_gpio_pin_initialize 0026  
                              _Read_Temprature 2424                      __end_of_EUSART_Initialize 2162  
                                  _I2C_DO_IDLE 2466                                    _I2C_DO_RCEN 245A  
                   rdBlkRegCompleteHandler@ptr 000A                  I2C_Write1ByteRegister@address 0025  
                                    _TXSTAbits 0FAC                        ?_I2C_CallbackReturnStop 000A  
                     _I2C_DO_SEND_RESTART_READ 24E4                    fp__I2C_DO_SEND_RESTART_READ 0000  
                            i2_I2C_SetCallback 1D00                   I2C_CallbackReturnStop@funPtr 000A  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 24AC  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 252A                       I2C_Read1ByteRegister@reg 0023  
                   fp__I2C_CallbackReturnReset 0000                     _EUSART_DefaultErrorHandler 0000  
                           ?i2_I2C_SetCallback 0001                ??i2_I2C_SetDataCompleteCallback 000A  
                                __pidataCOMRAM 2404                                   _EUSART_Write 23A0  
                            send_4bit_data@lcd 0024                              send_4bit_data@ret 0027  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0001                            ??i2_I2C_SetCallback 0005  
                          start_initialization 1F2E                                  ?_I2C_DO_RESET 0001  
                        EUART_Send_String@text 001B          __end_of_gpio_pin_direction_initialize 149A  
                _gpio_pin_direction_initialize 1338                       ?_I2C_SetInterruptHandler 001A  
                                  ??_I2C_DO_RX 000C                                    ??_I2C_DO_TX 000C  
                            ??_I2C_MasterClose 001A                         ??_I2C_MasterDisableIrq 001A  
                                  ??_I2C_Close 001A                              ??_I2C_MasterStart 001A  
                            ??_I2C_MasterWrite 001C                 __end_of_I2C_CallbackReturnStop 2532  
                       _I2C_DO_RX_NACK_RESTART 24B4                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 2516                      __end_ofi2_I2C_SetCallback 1D76  
               ?_EUSART_SetOverrunErrorHandler 001A                     _EUSART_FramingErrorHandler 00D5  
                       _EUSART_SetErrorHandler 2490                    __end_of_I2C_MasterEnableIrq 250A  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 2526  
                                  __pdataBANK0 00BD                          __end_of_I2C_DO_RX_ACK 24CC  
                             _I2C_DO_SEND_STOP 24CC                              ??_I2C_SetCallback 001E  
                 lcd_4bit_send_command@command 00AA                            I2C_Open@returnValue 001D  
                           _I2C_MasterSendNack 2500                       ?_I2C_MasterEnableRestart 0001  
                            _i2c_fsmStateTable 1001                         fp__I2C_DO_SEND_RESTART 0000  
                        _I2C_DO_SEND_ADR_WRITE 2440                        __end_of_Read_Temprature 2432  
                                  __pbssCOMRAM 0039                                  __pcstackBANK0 00A4  
                               ??_I2C_DO_RESET 0001                     __end_of_EEPROM_Write_1Byte 2404  
                          ?_I2C_MasterSendNack 0001                                i2_I2C_SetBuffer 22FC  
                 __end_of_I2C_DO_SEND_ADR_READ 2424                           ??_I2C_MasterClearIrq 001A  
                  __end_of_I2C_DO_ADDRESS_NACK 1F2E                               _I2C_MasterIsNack 23DE  
                    _I2C_DO_SEND_RESTART_WRITE 24DC                               _I2C_MasterSetIrq 251E  
                                    __pnvBANK0 00D1                          _rd2RegCompleteHandler 2254  
                                    _date_time 0084                         _PIN_MANAGER_Initialize 219C  
                        _wr2RegCompleteHandler 22AC                      ??_I2C_CallbackReturnReset 000C  
                  __end_of_I2C_MasterOperation 20E4                           ??_I2C_MasterSendNack 0001  
                     rd2RegCompleteHandler@ptr 000A                                      __pintcode 0008  
              gpio_pin_write_logic@_pin_config 001A                                       ?___awdiv 001A  
                                     ?___awmod 001A                         ??_I2C_MasterSendTxData 0001  
                    __end_of_i2c_fsmStateTable 1021                      gpio_pin_write_logic@logic 001C  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                                  __smallconst 1000                __end_of_I2C_SetInterruptHandler 24A4  
        __end_ofi2_I2C_SetDataCompleteCallback 238A                  i2_I2C_SetDataCompleteCallback 2372  
                      I2C_MasterOperation@read 001A                                       _I2C_Open 19DA  
                      ??_rd1RegCompleteHandler 000C                           _INTERRUPT_Initialize 24A4  
                      ??_wr1RegCompleteHandler 000C                            _Print_RTC_Date_Time 105E  
       EUSART_SetErrorHandler@interruptHandler 001A                                       _IPR1bits 0F9F  
                                     _IPR2bits 0FA2                                       _PIE1bits 0F9D  
                                     _PIE2bits 0FA0                              _eusartRxLastError 0045  
             lcd_4bit_send_char_data@l_counter 00AB                  __end_of_lcd_4bit_send_command 1B88  
                                     i2u150_40 230C                                       i2u150_41 2308  
                                     i2u144_40 1D14                                       i2u224_40 0040  
                                     i2u144_41 1D10                                       i2u224_41 003C  
                                     i2u225_40 004E                                       i2u225_41 004A  
                                     i2u162_40 17D4                                       i2u162_41 17D0  
                                     i2u155_40 23EE                                       i2u227_40 0078  
                                     i2u226_48 0054                                       i2u155_41 23E8  
                                     i2u227_41 0074                                       i2u226_49 0066  
                                     i2u155_46 23F0                                       i2u164_40 187A  
                                     i2u163_48 17FE                                       i2u228_40 0086  
                                     i2u164_41 1876                                       i2u163_49 1812  
                                     i2u228_41 0082                                       i2u165_40 1960  
                                     i2u181_40 1DFE                                       i2u165_41 195C  
                                     i2u181_41 1DFA                                       i2u182_40 1E12  
                                     i2u182_41 1E0E                                       i2u166_48 198E  
                                     i2u166_49 19A0                                       i2u167_48 1C3E  
                                     i2u183_48 1E42                                       i2u167_49 1C50  
                                     i2u183_49 1E54                                       i2u168_48 1EF2  
                                     i2u168_49 1F04                                       _PIR1bits 0F9E  
              ??_EUSART_SetFramingErrorHandler 001C                                       _PIR2bits 0FA1  
                      _send_4bit_enable_signal 21CC                          __end_of_I2C_MasterFsm 1E5A  
                        __end_of_I2C_MasterIsr 24FA                                       _RCONbits 0FD0  
                         EEPROM_Read_1Byte@reg 0026               gpio_pin_direction_initialize@ret 0022  
                  __end_of_I2C_DO_RX_NACK_STOP 24C4              _EUSART_DefaultOverrunErrorHandler 0000  
              __end_of_I2C_MasterEnableRestart 253A                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                             _lcd_4bit_intialize 11D6  
                __end_of_I2C_Read1ByteRegister 1DEA                           ?_Print_RTC_Date_Time 00B1  
                        __end_of_I2C_SetBuffer 22FC                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                      __end_ofi2_I2C_SetBuffer 2320                       I2C_MasterSendTxData@data 0001  
                          ?_lcd_4bit_intialize 00AD                         gpio_pin_initialize@ret 0027  
                     EEPROM_Read_1Byte@address 0027                               ?_Read_Temprature 0001  
                     wr2RegCompleteHandler@ptr 000A                        gpio_pin_write_logic@ret 0023  
                                  _INTCON2bits 0FF1                       ?_lcd_4bit_send_char_data 00A8  
                   ??_I2C_DO_SEND_RESTART_READ 0001                                      copy_data0 1F42  
                                    copy_data1 1F62                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000A                      i2I2C_SetBuffer@bufferSize 0003  
                                   _I2C_Status 0060                                   ?_I2C_DO_IDLE 0001  
                                 ?_I2C_DO_RCEN 0001                         ?_rd2RegCompleteHandler 000A  
                                   _EECON1bits 0FA6                               ??_I2C_MasterOpen 001A  
                       ?_wr2RegCompleteHandler 000A                               ??_I2C_MasterStop 0001  
                             ??_I2C_Initialize 001A                      fp__I2C_DO_RX_NACK_RESTART 0000  
                         ??_lcd_4bit_intialize 00AF                                       __Hrparam 0000  
                                     __Lrparam 0000                           __end_of_I2C_DO_RESET 245A  
                     ??_I2C_Write1ByteRegister 0025                              _Set_RTC_Date_Time 1FEE  
                      ??_OSCILLATOR_Initialize 001A                            _EUSART_ErrorHandler 00D1  
                         _I2C_DO_SEND_ADR_READ 2414                          ??_Print_RTC_Date_Time 0029  
                           ?_Set_RTC_Date_Time 00A4                    __end_of_gpio_pin_initialize 1B02  
             I2C_Read1ByteRegister@returnValue 0025                   __end_ofi2_I2C_MasterClearIrq 251E  
               gpio_pin_initialize@_pin_config 0024                              _EEPROM_Read_1Byte 2432  
                              _I2C_MasterClose 2512                  I2C_SetAddressNackCallback@ptr 0021  
                              I2C_Open@address 001C                            ??_Set_RTC_Date_Time 0026  
                          fp__I2C_DO_SEND_STOP 0000                           i2I2C_SetCallback@idx 0005  
                              _I2C_MasterStart 250A                           i2I2C_SetCallback@ptr 0003  
                              _I2C_MasterWrite 24AC                             ?_EEPROM_Read_1Byte 0026  
                                     __ptext10 2472                                       __ptext11 24A4  
                                     __ptext20 1B88                                       __ptext12 23CA  
                                     __ptext21 21CC                                       __ptext13 2124  
                                     __ptext30 2342                                       __ptext22 1F90  
                                     __ptext14 247C                                       __ptext31 22D8  
                                     __ptext23 149A                                       __ptext15 2486  
                                     __ptext40 250A                                       __ptext32 235A  
                                     __ptext24 2162                                       __ptext16 2490  
                                     __ptext41 21FC                                       __ptext33 1C8A  
                                     __ptext25 23A0                                       __ptext17 2424  
                                     __ptext50 244E                                       __ptext42 250E  
                                     __ptext34 19DA                                       __ptext26 23F2  
                                     __ptext18 105E                                       __ptext51 24B4  
                                     __ptext43 2512                                       __ptext35 249A  
                                     __ptext27 1E5A                                       __ptext19 204A  
                                     __ptext60 17C0                                       __ptext52 24BC  
                                     __ptext44 2516                                       __ptext36 2320  
                                     __ptext28 2432                                       __ptext61 2440  
                                     __ptext53 24C4                                       __ptext37 2506  
                                     __ptext29 1D76                                       __ptext70 2500  
                                     __ptext62 2414                                       __ptext54 24CC  
                                     __ptext46 24F4                                       __ptext38 24AC  
                                     __ptext71 2526                                       __ptext63 2466  
                                     __ptext55 24D4                                       __ptext47 1DEA  
                                     __ptext39 20A4                                       __ptext80 1D00  
                                     __ptext72 252A                                       __ptext64 1C0E  
                                     __ptext56 24DC                                       __ptext48 251A  
                                     __ptext81 22FC                                       __ptext73 252E  
                                     __ptext65 251E                                       __ptext57 24E4  
                                     __ptext49 1EC8                                       __ptext82 2532  
                                     __ptext74 20E4                                       __ptext66 23DE  
                                     __ptext58 245A                                       __ptext83 2536  
                                     __ptext75 2228                                       __ptext67 24EC  
                                     __ptext59 1934                                       __ptext84 0000  
                                     __ptext76 2254                                       __ptext68 24FA  
                                     __ptext77 2280                                       __ptext69 2522  
                                     __ptext78 22AC                                       __ptext79 2372  
          __end_of_I2C_SetDataCompleteCallback 235A                 ?i2_I2C_SetDataCompleteCallback 0006  
                  _I2C_SetDataCompleteCallback 2342                        ?_I2C_DO_RX_NACK_RESTART 0001  
                          ??_EEPROM_Read_1Byte 0027                       __end_of_I2C_DO_SEND_STOP 24D4  
                    ??_send_4bit_enable_signal 0026                        ?_EUSART_SetErrorHandler 001A  
                              _I2C_SetCallback 1C8A                  ??_I2C_SetDataCompleteCallback 0023  
                    __end_of_Set_RTC_Date_Time 204A                     I2C_Write1ByteRegister@data 0024  
EUSART_SetOverrunErrorHandler@interruptHandler 001A                                       isa$xinst 0000  
                                     int$flags 0046                          ?_I2C_DO_SEND_ADR_READ 0001  
                 __end_of_lcd_4bit_send_string 20A4          __end_of_EUSART_SetFramingErrorHandler 2490  
                _EUSART_SetFramingErrorHandler 2486                      __end_of_EEPROM_Read_1Byte 2440  
                     __end_of_I2C_MasterIsNack 23F2                       __end_of_I2C_MasterSetIrq 2522  
                             ?i2_I2C_SetBuffer 0001                                     _INTCONbits 0FF2  
                       ??_INTERRUPT_Initialize 001A                 __end_of_I2C_DO_RX_NACK_RESTART 24BC  
                 __end_of_gpio_pin_write_logic 15E4                                       intlevel2 0000  
                   Print_RTC_Date_Time@rtc_obj 00B1                            i2I2C_SetCallback@cb 0001  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 249A  
                          _I2C_DO_SEND_RESTART 24D4                             _EEPROM_Write_1Byte 23F2  
                       fp__I2C_DO_ADDRESS_NACK 0000  EUSART_SetFramingErrorHandler@interruptHandler 001A  
                      __end_of_I2C_MasterClose 2516                             fp__I2C_DO_TX_EMPTY 0000  
                          ?_EEPROM_Write_1Byte 0026                        __end_of_I2C_MasterStart 250E  
                      __end_of_I2C_MasterWrite 24B4         __end_of_INTERRUPT_InterruptManagerHigh 00B6  
               _INTERRUPT_InterruptManagerHigh 0008                           ?_I2C_DO_SEND_RESTART 0001  
              __end_of_send_4bit_enable_signal 21FC                                 _port_registers 00BD  
                                  _SSPCON1bits 0FC6                                    _SSPCON2bits 0FC5  
                         ??_EEPROM_Write_1Byte 0028                             EUSART_Write@txData 001A  
                       EEPROM_Write_1Byte@data 0027                        __end_of_I2C_SetCallback 1D00  
               __end_of_PIN_MANAGER_Initialize 21CC                  __end_of_rd1RegCompleteHandler 22AC  
                             fp__I2C_DO_RX_ACK 0000                    lcd_4bit_send_char_data@data 00AA  
                __end_of_wr1RegCompleteHandler 2254                          EEPROM_Write_1Byte@reg 0026  
                        _MSSP_InterruptHandler 0041                           i2_I2C_MasterClearIrq 251A  
